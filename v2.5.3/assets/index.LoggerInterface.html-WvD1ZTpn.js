import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as l,c as d,a as e,d as o,w as n,b as t,e as c}from"./app-ayi9e_Ak.js";const i={},h=e("h1",{id:"interface-loggerinterface",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-loggerinterface"},[e("span",null,"Interface: LoggerInterface")])],-1),g=e("p",null,[t("Defines an interface for "),e("strong",null,"Logger"),t(" classes.")],-1),f=e("h2",{id:"implemented-by",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implemented-by"},[e("span",null,"Implemented by")])],-1),p=e("code",null,"Logger",-1),u=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents"},[e("span",null,"Table of contents")])],-1),m=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods"},[e("span",null,"Methods")])],-1),b=c('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h2><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>log</span></a></h3><p>▸ <strong>log</strong>(<code>...args</code>): <code>void</code></p><p>Logs a message unless <code>isSilent</code> is <code>true</code>.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">A list of arguments to log. These can be of any type that the underlying implementation (e.g. <code>console.log</code> ) can handle.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="verbose" tabindex="-1"><a class="header-anchor" href="#verbose"><span>verbose</span></a></h3><p>▸ <strong>verbose</strong>(<code>...args</code>): <code>void</code></p><p>Logs a verbose message unless <code>isSilent</code> is <code>true</code> or <code>isVerbose</code> is <code>false</code>.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">A list of arguments to log. These can be of any type that the underlying implementation (e.g. <code>console.log</code> ) can handle.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>void</code></p>',16);function x(_,y){const a=r("RouterLink");return l(),d("div",null,[h,e("p",null,[o(a,{to:"/api/modules/"},{default:n(()=>[t("index")]),_:1}),t(".LoggerInterface")]),g,f,e("ul",null,[e("li",null,[o(a,{to:"/api/classes/index.Logger.html"},{default:n(()=>[p]),_:1})])]),u,m,e("ul",null,[e("li",null,[o(a,{to:"/api/interfaces/index.LoggerInterface.html#log"},{default:n(()=>[t("log")]),_:1})]),e("li",null,[o(a,{to:"/api/interfaces/index.LoggerInterface.html#verbose"},{default:n(()=>[t("verbose")]),_:1})])]),b])}const I=s(i,[["render",x],["__file","index.LoggerInterface.html.vue"]]);export{I as default};
