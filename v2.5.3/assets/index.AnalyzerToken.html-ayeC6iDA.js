import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as d,o as c,c as r,a as e,d as n,w as a,b as t,e as l}from"./app-ayi9e_Ak.js";const i={},h=e("h1",{id:"class-analyzertoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-analyzertoken"},[e("span",null,"Class: AnalyzerToken")])],-1),u=e("p",null,"A class representing a single translation invocation within some source code.",-1),p=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents"},[e("span",null,"Table of contents")])],-1),f=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors"},[e("span",null,"Constructors")])],-1),x=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties"},[e("span",null,"Properties")])],-1),_=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1"},[e("span",null,"Constructors")])],-1),y=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor"},[e("span",null,"constructor")])],-1),g=e("strong",null,"new AnalyzerToken",-1),m=e("code",null,"name",-1),k=e("code",null,"key",-1),T=e("code",null,"text",-1),b=e("code",null,"location",-1),z=e("code",null,"source?",-1),A=e("code",null,"AnalyzerToken",-1),w=l('<p>Creates a new instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of the invoked translation function, e.g. <code>$t</code>.</td></tr><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The key of the translation, e.g. <code>Hello world!</code>.</td></tr><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The full text of the invocation, e.g. <code>$t( &#39;Hello world!&#39; )</code>.</td></tr><tr><td style="text-align:left;"><code>location</code></td><td style="text-align:left;"><code>LocationRange</code></td><td style="text-align:left;">The location of the invocation within the source code.</td></tr><tr><td style="text-align:left;"><code>source?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The origin of the source code, usually a path to the source file.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4>',4),v=e("code",null,"AnalyzerToken",-1),R=l('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1"><span>Properties</span></a></h2><h3 id="column" tabindex="-1"><a class="header-anchor" href="#column"><span>column</span></a></h3><p>• <code>Readonly</code> <strong>column</strong>: <code>number</code></p><p>The column number of the invocation within the source code.</p><hr><h3 id="key" tabindex="-1"><a class="header-anchor" href="#key"><span>key</span></a></h3><p>• <code>Readonly</code> <strong>key</strong>: <code>string</code></p><p>The key of the translation, e.g. <code>Hello world!</code>.</p><hr><h3 id="line" tabindex="-1"><a class="header-anchor" href="#line"><span>line</span></a></h3><p>• <code>Readonly</code> <strong>line</strong>: <code>number</code></p><p>The line number of the invocation within the source code.</p><hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3><p>• <code>Readonly</code> <strong>name</strong>: <code>string</code></p><p>The name of the invoked translation function, e.g. <code>$t</code>.</p><hr><h3 id="source" tabindex="-1"><a class="header-anchor" href="#source"><span>source</span></a></h3><p>• <code>Optional</code> <code>Readonly</code> <strong>source</strong>: <code>string</code></p><p>The origin of the source code, usually a path to the source file.</p><hr><h3 id="text" tabindex="-1"><a class="header-anchor" href="#text"><span>text</span></a></h3><p>• <code>Readonly</code> <strong>text</strong>: <code>string</code></p><p>The full text of the invocation, e.g. <code>$t( &#39;Hello world!&#39; )</code>.</p>',24);function C(N,H){const o=d("RouterLink");return c(),r("div",null,[h,e("p",null,[n(o,{to:"/api/modules/"},{default:a(()=>[t("index")]),_:1}),t(".AnalyzerToken")]),u,p,f,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html#constructor"},{default:a(()=>[t("constructor")]),_:1})])]),x,e("ul",null,[e("li",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html#column"},{default:a(()=>[t("column")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html#key"},{default:a(()=>[t("key")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html#line"},{default:a(()=>[t("line")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html#name"},{default:a(()=>[t("name")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html#source"},{default:a(()=>[t("source")]),_:1})]),e("li",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html#text"},{default:a(()=>[t("text")]),_:1})])]),_,y,e("p",null,[t("• "),g,t("("),m,t(", "),k,t(", "),T,t(", "),b,t(", "),z,t("): "),n(o,{to:"/api/classes/index.AnalyzerToken.html"},{default:a(()=>[A]),_:1})]),w,e("p",null,[n(o,{to:"/api/classes/index.AnalyzerToken.html"},{default:a(()=>[v]),_:1})]),R])}const B=s(i,[["render",C],["__file","index.AnalyzerToken.html.vue"]]);export{B as default};
