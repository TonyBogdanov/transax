import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as d,a as e,d as o,w as a,b as t,e as s}from"./app-5d5007a5.js";const c={},h=s('<h1 id="class-callexpressiontoken" tabindex="-1"><a class="header-anchor" href="#class-callexpressiontoken" aria-hidden="true">#</a> Class: CallExpressionToken</h1><p>Represents a call expression.</p><p>It must be represented by an identifier (local or global) optionally followed by one or more of the following:</p><ul><li>Object access: <code>.</code> followed by an identifier.</li><li>Array access: <code>[</code> followed by an expression followed by <code>]</code>.</li><li>Invocation: <code>(</code> followed by an optional comma-separated list of expressions followed by <code>)</code>.</li></ul><p>Examples: <code>local</code><code>@global</code><code>local.property</code><code>@global.property</code><code>local[0]</code><code>@global[0]</code><code>local[0].property</code><code>@global[0].property</code><code>local[0].property()</code><code>@global[0].property()</code><code>local[0].property(1, 2, 3)</code><code>@global[0].property(1, 2, 3)</code></p><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a> Hierarchy</h2>',6),p=e("code",null,"CompilerToken",-1),u=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"CallExpressionToken")])],-1),_=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),f=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),m=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),x=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),g=s('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new CallExpressionToken</strong>(<code>global</code>, <code>name</code>, <code>tail</code>, <code>text</code>, <code>location</code>)</p><p>Creates a new instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',5),b=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),y=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"global")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Specifies whether the identifier is a global variable or a parameter.")],-1),C=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The name of the identifier.")],-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,"tail")],-1),k={style:{"text-align":"left"}},E=e("code",null,"CallExpressionObjectAccess",-1),w=e("code",null,"CallExpressionArrayAccess",-1),v=e("code",null,"CallExpressionInvocation",-1),A=e("td",{style:{"text-align":"left"}},"An array of object accesses, array accesses or invocations.",-1),I=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"text")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The full text (content) of the expression.")],-1),O=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"location")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LocationRange")]),e("td",{style:{"text-align":"left"}},"The location of the invocation within the source code.")],-1),R=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),N=s('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="column" tabindex="-1"><a class="header-anchor" href="#column" aria-hidden="true">#</a> column</h3><p>• <strong>column</strong>: <code>number</code></p><p>The column number of the expression within the translation message.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',5),j=s('<hr><h3 id="global" tabindex="-1"><a class="header-anchor" href="#global" aria-hidden="true">#</a> global</h3><p>• <code>Readonly</code> <strong>global</strong>: <code>boolean</code></p><hr><h3 id="line" tabindex="-1"><a class="header-anchor" href="#line" aria-hidden="true">#</a> line</h3><p>• <strong>line</strong>: <code>number</code></p><p>The line number of the expression within the translation message.</p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4>',8),P=s('<hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><p>• <code>Readonly</code> <strong>name</strong>: <code>string</code></p><hr><h3 id="tail" tabindex="-1"><a class="header-anchor" href="#tail" aria-hidden="true">#</a> tail</h3>',5),S=e("code",null,"Readonly",-1),V=e("strong",null,"tail",-1),W=e("code",null,"CallExpressionObjectAccess",-1),B=e("code",null,"CallExpressionArrayAccess",-1),D=e("code",null,"CallExpressionInvocation",-1),L=e("hr",null,null,-1),M=e("h3",{id:"text",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#text","aria-hidden":"true"},"#"),t(" text")],-1),F=e("p",null,[t("• "),e("strong",null,"text"),t(": "),e("code",null,"string")],-1),H=e("p",null,"The full text (content) of the expression.",-1),q=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),z=s('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="compile" tabindex="-1"><a class="header-anchor" href="#compile" aria-hidden="true">#</a> compile</h3><p>▸ <strong>compile</strong>(<code>context</code>): <code>string</code></p><p>Compiles the expression into an executable ECMAScript6 string.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',5),G=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),J=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),K={style:{"text-align":"left"}},Q=e("code",null,"CompilerContext",-1),U=e("td",{style:{"text-align":"left"}},"The context to use for compiling the expression.",-1),X=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),Y=e("p",null,[e("code",null,"string")],-1),Z=e("h4",{id:"overrides-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-1","aria-hidden":"true"},"#"),t(" Overrides")],-1),$=s('<hr><h3 id="compilewrap" tabindex="-1"><a class="header-anchor" href="#compilewrap" aria-hidden="true">#</a> compileWrap</h3><p>▸ <code>Protected</code> <strong>compileWrap</strong>(<code>context</code>, <code>instanceOfs</code>): <code>string</code></p><p>Same as <code>compile()</code> except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>',5),ee=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),te=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),le={style:{"text-align":"left"}},oe=e("code",null,"CompilerContext",-1),ae=e("td",{style:{"text-align":"left"}},"The context to use for compiling the expression.",-1),se=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceOfs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Function"),t("[]")]),e("td",{style:{"text-align":"left"}},"The types to check for.")],-1),ne=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),ie=e("p",null,[e("code",null,"string")],-1),re=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3","aria-hidden":"true"},"#"),t(" Inherited from")],-1);function de(ce,he){const l=i("RouterLink");return r(),d("div",null,[h,e("ul",null,[e("li",null,[e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:a(()=>[p]),_:1})]),u])]),_,f,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#constructor"},{default:a(()=>[t("constructor")]),_:1})])]),m,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#column"},{default:a(()=>[t("column")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#global"},{default:a(()=>[t("global")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#line"},{default:a(()=>[t("line")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#name"},{default:a(()=>[t("name")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#tail"},{default:a(()=>[t("tail")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#text"},{default:a(()=>[t("text")]),_:1})])]),x,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#compile"},{default:a(()=>[t("compile")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#compilewrap"},{default:a(()=>[t("compileWrap")]),_:1})])]),g,e("table",null,[b,e("tbody",null,[y,C,e("tr",null,[T,e("td",k,[t("("),o(l,{to:"/api/classes/CallExpressionObjectAccess.html"},{default:a(()=>[E]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionArrayAccess.html"},{default:a(()=>[w]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionInvocation.html"},{default:a(()=>[v]),_:1}),t(")[]")]),A]),I,O])]),R,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:a(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#constructor"},{default:a(()=>[t("constructor")]),_:1})]),N,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:a(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#column"},{default:a(()=>[t("column")]),_:1})]),j,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:a(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#line"},{default:a(()=>[t("line")]),_:1})]),P,e("p",null,[t("• "),S,t(),V,t(": ("),o(l,{to:"/api/classes/CallExpressionObjectAccess.html"},{default:a(()=>[W]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionArrayAccess.html"},{default:a(()=>[B]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionInvocation.html"},{default:a(()=>[D]),_:1}),t(")[]")]),L,M,F,H,q,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:a(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#text"},{default:a(()=>[t("text")]),_:1})]),z,e("table",null,[G,e("tbody",null,[e("tr",null,[J,e("td",K,[o(l,{to:"/api/classes/CompilerContext.html"},{default:a(()=>[Q]),_:1})]),U])])]),X,Y,Z,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:a(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#compile"},{default:a(()=>[t("compile")]),_:1})]),$,e("table",null,[ee,e("tbody",null,[e("tr",null,[te,e("td",le,[o(l,{to:"/api/classes/CompilerContext.html"},{default:a(()=>[oe]),_:1})]),ae]),se])]),ne,ie,re,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:a(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#compilewrap"},{default:a(()=>[t("compileWrap")]),_:1})])])}const _e=n(c,[["render",de],["__file","CallExpressionToken.html.vue"]]);export{_e as default};
