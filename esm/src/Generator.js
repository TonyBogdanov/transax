var __awaiter=this&&this.__awaiter||function(t,r,a,l){return new(a=a||Promise)(function(s,i){function o(t){try{e(l.next(t))}catch(t){i(t)}}function n(t){try{e(l.throw(t))}catch(t){i(t)}}function e(t){var i;t.done?s(t.value):((i=t.value)instanceof a?i:new a(function(t){t(i)})).then(o,n)}e((l=l.apply(t,r||[])).next())})};const glob=require("glob-promise");import{promises}from"fs";import{relative}from"path";import{Logger}from"./Logger";import{Analyzer}from"./Analyzer";import{Compiler}from"./Compiler";const{readFile,writeFile}=promises;class Options{constructor(t={}){this.translations={},this.loggerOptions={},this.analyzerOptions={},this.compilerOptions={},"translations"in t&&(this.translations=t.translations),"loggerOptions"in t&&(this.loggerOptions=t.loggerOptions),"analyzerOptions"in t&&(this.analyzerOptions=t.analyzerOptions),"compilerOptions"in t&&(this.compilerOptions=t.compilerOptions)}}class Generator{constructor(t={}){this.keys={},this.options=t instanceof Options?t:new Options(t),this.logger=new Logger("Generator",this.options.loggerOptions),this.analyzer=new Analyzer(this.options.analyzerOptions),this.compiler=new Compiler(this.options.compilerOptions)}parseContent(s,o){return __awaiter(this,void 0,void 0,function*(){for(const i of this.analyzer.analyze(s,o?relative(process.cwd(),o):void 0)){this.keys.hasOwnProperty(i.key)||(this.keys[i.key]=[]);var t=this.keys[i.key];const o=`${i.source||"[inline code]"}::${i.line}:`+i.column;t.includes(i.source)||t.push(o)}return this})}parseFile(t){return __awaiter(this,void 0,void 0,function*(){return yield this.parseContent((yield readFile(t)).toString("utf-8"),t),this})}parseGlob(t){return __awaiter(this,void 0,void 0,function*(){return yield Promise.all((yield glob(t)).map(t=>this.parseFile(t))),this})}getMissingTranslationKeys(){var t={};for(const i of Object.keys(this.options.translations)){const s=this.options.translations[i];t[i]=Object.keys(this.keys).filter(t=>!s.hasOwnProperty(t))}return t}getUnusedTranslationKeys(){var t={};for(const s of Object.keys(this.options.translations)){var i=this.options.translations[s];t[s]=Object.keys(i).filter(t=>!this.keys.hasOwnProperty(t))}return t}getCompiledTranslationsDump(){var t=t=>t.match(/^[a-z_$][a-z0-9_$]*$/i)?t:JSON.stringify(t);let i=`{
`;for(const s of Object.keys(this.options.translations)){const o=this.options.translations[s];i+=`    ${t(s)}: {
`;for(const n of Object.keys(this.keys).filter(t=>o.hasOwnProperty(t)))i+=`        ${t(n)}: ${this.compiler.compile(o[n])},
`;i+=`    },
`}return i+"}"}getCompiledTranslationsDumpAsCJSExport(){return`module.exports = ${this.getCompiledTranslationsDump()};
`}getCompiledTranslationsDumpAsESMExport(){return`export default ${this.getCompiledTranslationsDump()};
`}dumpMissingTranslationKeysAsJSON(t){return __awaiter(this,void 0,void 0,function*(){yield writeFile(t,JSON.stringify(this.getMissingTranslationKeys(),null,2))})}dumpUnusedTranslationKeysAsJSON(t){return __awaiter(this,void 0,void 0,function*(){yield writeFile(t,JSON.stringify(this.getUnusedTranslationKeys(),null,2))})}dumpCompiledTranslationsForCJS(t){return __awaiter(this,void 0,void 0,function*(){yield writeFile(t,this.getCompiledTranslationsDumpAsCJSExport())})}dumpCompiledTranslationsForESM(t){return __awaiter(this,void 0,void 0,function*(){yield writeFile(t,this.getCompiledTranslationsDumpAsESMExport())})}}export{Options,Generator};