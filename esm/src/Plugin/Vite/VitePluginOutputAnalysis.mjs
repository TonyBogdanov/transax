import{extname}from"node:path";import{writeFile}from"node:fs/promises";import{stringify as stringifyYaml}from"yaml";import PathError from"../../Util/PathError.mjs";export default class VitePluginOutputAnalysis{constructor(t){if(!t||"object"!=typeof t)throw new PathError("Expected {{ path }} to be an object.");if(this.path=PathError.wrap("path",()=>{if("string"==typeof t.path&&0<t.path.length)return t.path;throw new PathError("Expected {{ path }} to be a non-empty string.")}),void 0===t.handler)switch(extname(t.path)){case".txt":t.handler="txt";break;case".yml":case".yaml":t.handler="yaml";break;case".json":t.handler="json"}this.handler=PathError.wrap("handler",()=>{if("txt"===t.handler)return(t,r)=>writeFile(t,Object.entries(r.getMissingTranslationKeys()).map(([t,r])=>"## "+t+"\n"+r.join("\n")+"\n\n"));if("yaml"===t.handler)return(t,r)=>writeFile(t,stringifyYaml(r.getMissingTranslationKeys()));if("json"===t.handler)return(t,r)=>writeFile(t,JSON.stringify(r.getMissingTranslationKeys(),null,2));if("function"==typeof t.handler)return t.handler;throw new PathError('Expected {{ path }} to be "esm", "cjs" or a function.')})}}