import{extname}from"node:path";import{writeFile}from"node:fs/promises";import PathError from"../../Util/PathError.mjs";export default class VitePluginOutputCompilation{constructor(t){if(!t||"object"!=typeof t)throw new PathError("Expected {{ path }} to be an object.");if(this.path=PathError.wrap("path",()=>{if("string"==typeof t.path&&0<t.path.length)return t.path;throw new PathError("Expected {{ path }} to be a non-empty string.")}),this.includeMeta=PathError.wrap("includeMeta",()=>{if(void 0===t.includeMeta)return!1;if("boolean"==typeof t.includeMeta)return t.includeMeta;throw new PathError("Expected {{ path }} to be a boolean.")}),void 0===t.handler)switch(extname(t.path)){case".ts":case".js":case".mjs":t.handler="esm";break;case".cjs":t.handler="cjs"}this.handler=PathError.wrap("handler",()=>{if("esm"===t.handler)return(t,e)=>writeFile(t,e.getCompiledTranslationsDumpAsESMExport(this.includeMeta));if("cjs"===t.handler)return(t,e)=>writeFile(t,e.getCompiledTranslationsDumpAsCJSExport(this.includeMeta));if("function"==typeof t.handler)return t.handler;throw new PathError('Expected {{ path }} to be "esm", "cjs" or a function.')})}}