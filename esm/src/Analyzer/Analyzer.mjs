import AnalyzerOptions from"./AnalyzerOptions.mjs";import parse from"./peg.mjs";export default class Analyzer{suffix(e,s){return s?`in: ${s}::${e.line}:${e.column}.`:`at: ${e.line}:${e.column}.`}skip(e,s){this.options.logger.verbose(`Skipping ${e.text} because: "${e.name}" isn't in the list of allowed names `+this.suffix(e,s))}register(e,s){this.options.logger.verbose(`Registering ${e.text} `+this.suffix(e,s))}constructor(e={}){this.options=e instanceof AnalyzerOptions?e:new AnalyzerOptions(e)}analyze(e,s){this.options.logger.log(`Analyzing: ${s||"[inline code]"}.`);var i=[];for(const t of parse(e))-1===this.options.names.indexOf(t.name)?this.skip(t,s):(t.source=s,t.key=this.options.keyFormatter(t.key,t),this.register(t,s),i.push(t));return i}}