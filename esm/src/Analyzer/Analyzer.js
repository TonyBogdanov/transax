import Logger from"../Logger/Logger";import parse from"./peg";class Options{constructor(e={}){var o;this.names=null!=(o=e.names)?o:["$t"],this.keyFormatter=null!=(o=e.keyFormatter)?o:e=>e,this.logger=null!=(o=e.logger)?o:new Logger({namespace:"TRANSAX:ANALYZER"})}}export default class Analyzer{skip(e,o){o=o?`in: ${o}::${e.line}:${e.column}.`:`at: ${e.line}:${e.column}.`;this.options.logger.verbose(`Skipping ${e.text} because: "${e.name}" isn't in the list of allowed names `+o)}constructor(e={}){this.options=new Options(e)}analyze(e,o){this.options.logger.log(`Analyzing: ${o||"[inline code]"}.`);var t=[];for(const n of parse(e))-1===this.options.names.indexOf(n.name)?this.skip(n,o):(n.source=o,n.key=this.options.keyFormatter(n.key,n),t.push(n));return t}}