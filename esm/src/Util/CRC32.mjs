class CRC32{static checksum(n){let s=-1;for(let e=0,C=n.length,l=0,a;e<C;)l=n.charCodeAt(e++),s=l<128?s>>>8^CRC32.signedTable[255&(s^l)]:l<2048?(s=s>>>8^CRC32.signedTable[255&(s^(192|l>>6&31))])>>>8^CRC32.signedTable[255&(s^(128|63&l))]:55296<=l&&l<57344?(l=64+(1023&l),a=1023&n.charCodeAt(e++),(s=(s=(s=s>>>8^CRC32.signedTable[255&(s^(240|l>>8&7))])>>>8^CRC32.signedTable[255&(s^(128|l>>2&63))])>>>8^CRC32.signedTable[255&(s^(128|a>>6&15|(3&l)<<4))])>>>8^CRC32.signedTable[255&(s^(128|63&a))]):(s=(s=s>>>8^CRC32.signedTable[255&(s^(224|l>>12&15))])>>>8^CRC32.signedTable[255&(s^(128|l>>6&63))])>>>8^CRC32.signedTable[255&(s^(128|63&l))];return~s}}CRC32.signedTable=new Array(256).fill(0).map((e,C)=>{for(let e=0;e<8;e++)C=1&C?-306674912^C>>>1:C>>>1;return C});export default CRC32;