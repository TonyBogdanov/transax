import Logger from"../Logger/Logger.mjs";import Analyzer from"../Analyzer/Analyzer.mjs";import Compiler from"../Compiler/Compiler.mjs";export default class GeneratorOptions{constructor(e={}){if(null===e||"object"!=typeof e)throw new TypeError("Expected options to be an object.");if(void 0===e.translations)this.translations={};else{if(null===e.translations||"object"!=typeof e.translations)throw new TypeError("Expected options.translations to be an object.");this.translations=e.translations}if(void 0===e.analyzer)this.analyzer=new Analyzer;else if(e.analyzer instanceof Analyzer)this.analyzer=e.analyzer;else{if(null===e.analyzer||"object"!=typeof e.analyzer)throw new TypeError("Expected options.analyzer to be an instance of AnalyzerInterface or AnalyzerOptionsType.");this.analyzer=new Analyzer(e.analyzer)}if(void 0===e.compiler)this.compiler=new Compiler;else if(e.compiler instanceof Compiler)this.compiler=e.compiler;else{if(null===e.compiler||"object"!=typeof e.compiler)throw new TypeError("Expected options.compiler to be an instance of CompilerInterface or CompilerOptionsType.");this.compiler=new Compiler(e.compiler)}if(void 0===e.logger)this.logger=new Logger({namespace:"TRANSAX:COMPILER"});else if(e.logger instanceof Logger)this.logger=e.logger;else{if(null===e.logger||"object"!=typeof e.logger)throw new TypeError("Expected options.logger to be an instance of LoggerInterface.");this.logger=new Logger(e.logger)}}}