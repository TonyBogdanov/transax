import CompilerToken from"./CompilerToken";class CallExpressionObjectAccess{constructor(s){this.name=s}}class CallExpressionArrayAccess{constructor(s){this.expr=s}}class CallExpressionInvocation{constructor(s){this.exprs=s}}export default class CallExpressionToken extends CompilerToken{constructor(s,e,o,r,i){super(r,i),this.global=s,this.name=e,this.tail=o}compile(e){return this.global?e.requireGlobal(this.name):e.requireParameter(this.name),this.name+this.tail.map(s=>s instanceof CallExpressionObjectAccess?"."+s.name:s instanceof CallExpressionArrayAccess?"["+s.expr.compile(e)+"]":s instanceof CallExpressionInvocation?"("+s.exprs.map(s=>s.compile(e)).join(",")+")":void 0).join("")}}export{CallExpressionObjectAccess,CallExpressionArrayAccess,CallExpressionInvocation};