const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":475,\"nextId\":475,\"documentIds\":{\"0\":\"v-545f079e\",\"1\":\"v-545f079e#key-formatting\",\"2\":\"v-6ca815f4\",\"3\":\"v-6ca815f4#npm\",\"4\":\"v-6ca815f4#yarn\",\"5\":\"v-52062726\",\"6\":\"v-52062726#framework-agnostic\",\"7\":\"v-52062726#flavor-agnostic\",\"8\":\"v-52062726#flexible\",\"9\":\"v-52062726#analysis\",\"10\":\"v-52062726#compilation\",\"11\":\"v-52062726#translation\",\"12\":\"v-744497ce\",\"13\":\"v-744497ce#table-of-contents\",\"14\":\"v-744497ce#classes\",\"15\":\"v-744497ce#interfaces\",\"16\":\"v-744497ce#type-aliases\",\"17\":\"v-744497ce#type-aliases-1\",\"18\":\"v-744497ce#analyzeroptions\",\"19\":\"v-744497ce#type-declaration\",\"20\":\"v-744497ce#catalog\",\"21\":\"v-744497ce#compiledcatalog\",\"22\":\"v-744497ce#compileddictionary\",\"23\":\"v-744497ce#compiledvalue\",\"24\":\"v-744497ce#compileroptions\",\"25\":\"v-744497ce#type-declaration-1\",\"26\":\"v-744497ce#context\",\"27\":\"v-744497ce#type-declaration-2\",\"28\":\"v-744497ce#contextglobals\",\"29\":\"v-744497ce#contextparams\",\"30\":\"v-744497ce#dictionary\",\"31\":\"v-744497ce#generatoroptions\",\"32\":\"v-744497ce#type-declaration-3\",\"33\":\"v-744497ce#key\",\"34\":\"v-744497ce#keyformatter\",\"35\":\"v-744497ce#type-declaration-4\",\"36\":\"v-744497ce#parameters\",\"37\":\"v-744497ce#returns\",\"38\":\"v-744497ce#locale\",\"39\":\"v-744497ce#loggeroptions\",\"40\":\"v-744497ce#type-declaration-5\",\"41\":\"v-744497ce#translatoroptions\",\"42\":\"v-744497ce#type-declaration-6\",\"43\":\"v-744497ce#value\",\"44\":\"v-04e55bf6\",\"45\":\"v-04e55bf6#the-problem\",\"46\":\"v-04e55bf6#the-solution\",\"47\":\"v-04e55bf6#limitations\",\"48\":\"v-3359fc46\",\"49\":\"v-3359fc46#translation-dictionary\",\"50\":\"v-3359fc46#compiled-dictionary\",\"51\":\"v-3359fc46#accumulation\",\"52\":\"v-2618ef83\",\"53\":\"v-56ceecdc\",\"54\":\"v-3731b98f\",\"55\":\"v-3731b98f#expressions\",\"56\":\"v-3731b98f#expression\",\"57\":\"v-3731b98f#syntax-1\",\"58\":\"v-3731b98f#ternary-safe\",\"59\":\"v-3731b98f#syntax-2\",\"60\":\"v-3731b98f#example\",\"61\":\"v-3731b98f#comparison-safe\",\"62\":\"v-3731b98f#syntax-3\",\"63\":\"v-3731b98f#example-1\",\"64\":\"v-3731b98f#ternary\",\"65\":\"v-3731b98f#syntax-4\",\"66\":\"v-3731b98f#example-2\",\"67\":\"v-3731b98f#comparison\",\"68\":\"v-3731b98f#syntax-5\",\"69\":\"v-3731b98f#example-3\",\"70\":\"v-3731b98f#call\",\"71\":\"v-3731b98f#syntax-6\",\"72\":\"v-3731b98f#example-4\",\"73\":\"v-3731b98f#arguments\",\"74\":\"v-3731b98f#syntax-7\",\"75\":\"v-3731b98f#literal\",\"76\":\"v-3731b98f#syntax-8\",\"77\":\"v-3731b98f#example-5\",\"78\":\"v-3731b98f#primitives\",\"79\":\"v-3731b98f#literal-1\",\"80\":\"v-3731b98f#identifier\",\"81\":\"v-3731b98f#comparison-operator\",\"82\":\"v-3731b98f#reserved-words\",\"83\":\"v-6fcc1ca2\",\"84\":\"v-6fcc1ca2#initialization\",\"85\":\"v-6fcc1ca2#translation-1\",\"86\":\"v-6fcc1ca2#interpolation\",\"87\":\"v-6fcc1ca2#globals\",\"88\":\"v-6fcc1ca2#performance\",\"89\":\"v-6fcc1ca2#limitations\",\"90\":\"v-b7045226\",\"91\":\"v-b7045226#implemented-by\",\"92\":\"v-b7045226#table-of-contents\",\"93\":\"v-b7045226#methods\",\"94\":\"v-b7045226#methods-1\",\"95\":\"v-b7045226#analyze\",\"96\":\"v-b7045226#parameters\",\"97\":\"v-b7045226#returns\",\"98\":\"v-1df98f26\",\"99\":\"v-1df98f26#implemented-by\",\"100\":\"v-1df98f26#table-of-contents\",\"101\":\"v-1df98f26#methods\",\"102\":\"v-1df98f26#methods-1\",\"103\":\"v-1df98f26#compile\",\"104\":\"v-1df98f26#parameters\",\"105\":\"v-1df98f26#returns\",\"106\":\"v-1df98f26#tokenize\",\"107\":\"v-1df98f26#parameters-1\",\"108\":\"v-1df98f26#returns-1\",\"109\":\"v-050d2c6c\",\"110\":\"v-050d2c6c#implemented-by\",\"111\":\"v-050d2c6c#table-of-contents\",\"112\":\"v-050d2c6c#methods\",\"113\":\"v-050d2c6c#methods-1\",\"114\":\"v-050d2c6c#getcompiledtranslationsdump\",\"115\":\"v-050d2c6c#parameters\",\"116\":\"v-050d2c6c#returns\",\"117\":\"v-050d2c6c#getcompiledtranslationsdumpascjsexport\",\"118\":\"v-050d2c6c#parameters-1\",\"119\":\"v-050d2c6c#returns-1\",\"120\":\"v-050d2c6c#getcompiledtranslationsdumpasesmexport\",\"121\":\"v-050d2c6c#parameters-2\",\"122\":\"v-050d2c6c#returns-2\",\"123\":\"v-050d2c6c#getmissingtranslationkeys\",\"124\":\"v-050d2c6c#returns-3\",\"125\":\"v-050d2c6c#getunusedtranslationkeys\",\"126\":\"v-050d2c6c#returns-4\",\"127\":\"v-050d2c6c#parse\",\"128\":\"v-050d2c6c#parameters-3\",\"129\":\"v-050d2c6c#returns-5\",\"130\":\"v-050d2c6c#removetranslations\",\"131\":\"v-050d2c6c#parameters-4\",\"132\":\"v-050d2c6c#returns-6\",\"133\":\"v-050d2c6c#settranslations\",\"134\":\"v-050d2c6c#parameters-5\",\"135\":\"v-050d2c6c#returns-7\",\"136\":\"v-7347cc17\",\"137\":\"v-7347cc17#implemented-by\",\"138\":\"v-7347cc17#table-of-contents\",\"139\":\"v-7347cc17#methods\",\"140\":\"v-7347cc17#methods-1\",\"141\":\"v-7347cc17#log\",\"142\":\"v-7347cc17#parameters\",\"143\":\"v-7347cc17#returns\",\"144\":\"v-7347cc17#verbose\",\"145\":\"v-7347cc17#parameters-1\",\"146\":\"v-7347cc17#returns-1\",\"147\":\"v-652f6ba1\",\"148\":\"v-652f6ba1#implemented-by\",\"149\":\"v-652f6ba1#table-of-contents\",\"150\":\"v-652f6ba1#methods\",\"151\":\"v-652f6ba1#methods-1\",\"152\":\"v-652f6ba1#translate\",\"153\":\"v-652f6ba1#parameters\",\"154\":\"v-652f6ba1#returns\",\"155\":\"v-3291129c\",\"156\":\"v-3291129c#implements\",\"157\":\"v-3291129c#table-of-contents\",\"158\":\"v-3291129c#constructors\",\"159\":\"v-3291129c#methods\",\"160\":\"v-3291129c#constructors-1\",\"161\":\"v-3291129c#constructor\",\"162\":\"v-3291129c#parameters\",\"163\":\"v-3291129c#methods-1\",\"164\":\"v-3291129c#analyze\",\"165\":\"v-3291129c#parameters-1\",\"166\":\"v-3291129c#returns\",\"167\":\"v-3291129c#implementation-of\",\"168\":\"v-eb6af286\",\"169\":\"v-eb6af286#table-of-contents\",\"170\":\"v-eb6af286#constructors\",\"171\":\"v-eb6af286#properties\",\"172\":\"v-eb6af286#constructors-1\",\"173\":\"v-eb6af286#constructor\",\"174\":\"v-eb6af286#parameters\",\"175\":\"v-eb6af286#properties-1\",\"176\":\"v-eb6af286#column\",\"177\":\"v-eb6af286#key\",\"178\":\"v-eb6af286#line\",\"179\":\"v-eb6af286#name\",\"180\":\"v-eb6af286#source\",\"181\":\"v-eb6af286#text\",\"182\":\"v-272a0209\",\"183\":\"v-272a0209#table-of-contents\",\"184\":\"v-272a0209#constructors\",\"185\":\"v-272a0209#properties\",\"186\":\"v-272a0209#constructors-1\",\"187\":\"v-272a0209#constructor\",\"188\":\"v-272a0209#parameters\",\"189\":\"v-272a0209#properties-1\",\"190\":\"v-272a0209#expr\",\"191\":\"v-2e35a47c\",\"192\":\"v-2e35a47c#table-of-contents\",\"193\":\"v-2e35a47c#constructors\",\"194\":\"v-2e35a47c#properties\",\"195\":\"v-2e35a47c#constructors-1\",\"196\":\"v-2e35a47c#constructor\",\"197\":\"v-2e35a47c#parameters\",\"198\":\"v-2e35a47c#properties-1\",\"199\":\"v-2e35a47c#exprs\",\"200\":\"v-b5633aae\",\"201\":\"v-b5633aae#table-of-contents\",\"202\":\"v-b5633aae#constructors\",\"203\":\"v-b5633aae#properties\",\"204\":\"v-b5633aae#constructors-1\",\"205\":\"v-b5633aae#constructor\",\"206\":\"v-b5633aae#parameters\",\"207\":\"v-b5633aae#properties-1\",\"208\":\"v-b5633aae#name\",\"209\":\"v-6e59046d\",\"210\":\"v-6e59046d#hierarchy\",\"211\":\"v-6e59046d#table-of-contents\",\"212\":\"v-6e59046d#constructors\",\"213\":\"v-6e59046d#properties\",\"214\":\"v-6e59046d#methods\",\"215\":\"v-6e59046d#constructors-1\",\"216\":\"v-6e59046d#constructor\",\"217\":\"v-6e59046d#parameters\",\"218\":\"v-6e59046d#overrides\",\"219\":\"v-6e59046d#properties-1\",\"220\":\"v-6e59046d#column\",\"221\":\"v-6e59046d#inherited-from\",\"222\":\"v-6e59046d#global\",\"223\":\"v-6e59046d#line\",\"224\":\"v-6e59046d#inherited-from-1\",\"225\":\"v-6e59046d#name\",\"226\":\"v-6e59046d#tail\",\"227\":\"v-6e59046d#text\",\"228\":\"v-6e59046d#inherited-from-2\",\"229\":\"v-6e59046d#methods-1\",\"230\":\"v-6e59046d#compile\",\"231\":\"v-6e59046d#parameters-1\",\"232\":\"v-6e59046d#returns\",\"233\":\"v-6e59046d#overrides-1\",\"234\":\"v-6e59046d#compilewrap\",\"235\":\"v-6e59046d#parameters-2\",\"236\":\"v-6e59046d#returns-1\",\"237\":\"v-6e59046d#inherited-from-3\",\"238\":\"v-b728e550\",\"239\":\"v-b728e550#hierarchy\",\"240\":\"v-b728e550#table-of-contents\",\"241\":\"v-b728e550#constructors\",\"242\":\"v-b728e550#properties\",\"243\":\"v-b728e550#methods\",\"244\":\"v-b728e550#constructors-1\",\"245\":\"v-b728e550#constructor\",\"246\":\"v-b728e550#parameters\",\"247\":\"v-b728e550#overrides\",\"248\":\"v-b728e550#properties-1\",\"249\":\"v-b728e550#column\",\"250\":\"v-b728e550#inherited-from\",\"251\":\"v-b728e550#left\",\"252\":\"v-b728e550#line\",\"253\":\"v-b728e550#inherited-from-1\",\"254\":\"v-b728e550#operator\",\"255\":\"v-b728e550#right\",\"256\":\"v-b728e550#text\",\"257\":\"v-b728e550#inherited-from-2\",\"258\":\"v-b728e550#methods-1\",\"259\":\"v-b728e550#compile\",\"260\":\"v-b728e550#parameters-1\",\"261\":\"v-b728e550#returns\",\"262\":\"v-b728e550#overrides-1\",\"263\":\"v-b728e550#compilewrap\",\"264\":\"v-b728e550#parameters-2\",\"265\":\"v-b728e550#returns-1\",\"266\":\"v-b728e550#inherited-from-3\",\"267\":\"v-1ee0f37a\",\"268\":\"v-1ee0f37a#implements\",\"269\":\"v-1ee0f37a#table-of-contents\",\"270\":\"v-1ee0f37a#constructors\",\"271\":\"v-1ee0f37a#methods\",\"272\":\"v-1ee0f37a#constructors-1\",\"273\":\"v-1ee0f37a#constructor\",\"274\":\"v-1ee0f37a#parameters\",\"275\":\"v-1ee0f37a#methods-1\",\"276\":\"v-1ee0f37a#compile\",\"277\":\"v-1ee0f37a#parameters-1\",\"278\":\"v-1ee0f37a#returns\",\"279\":\"v-1ee0f37a#implementation-of\",\"280\":\"v-1ee0f37a#tokenize\",\"281\":\"v-1ee0f37a#parameters-2\",\"282\":\"v-1ee0f37a#returns-1\",\"283\":\"v-1ee0f37a#implementation-of-1\",\"284\":\"v-19357800\",\"285\":\"v-19357800#table-of-contents\",\"286\":\"v-19357800#constructors\",\"287\":\"v-19357800#properties\",\"288\":\"v-19357800#methods\",\"289\":\"v-19357800#constructors-1\",\"290\":\"v-19357800#constructor\",\"291\":\"v-19357800#properties-1\",\"292\":\"v-19357800#globals\",\"293\":\"v-19357800#parameters\",\"294\":\"v-19357800#methods-1\",\"295\":\"v-19357800#requireglobal\",\"296\":\"v-19357800#parameters-1\",\"297\":\"v-19357800#returns\",\"298\":\"v-19357800#requireparameter\",\"299\":\"v-19357800#parameters-2\",\"300\":\"v-19357800#returns-1\",\"301\":\"v-35554376\",\"302\":\"v-35554376#hierarchy\",\"303\":\"v-35554376#table-of-contents\",\"304\":\"v-35554376#constructors\",\"305\":\"v-35554376#properties\",\"306\":\"v-35554376#methods\",\"307\":\"v-35554376#constructors-1\",\"308\":\"v-35554376#constructor\",\"309\":\"v-35554376#parameters\",\"310\":\"v-35554376#properties-1\",\"311\":\"v-35554376#column\",\"312\":\"v-35554376#line\",\"313\":\"v-35554376#text\",\"314\":\"v-35554376#methods-1\",\"315\":\"v-35554376#compile\",\"316\":\"v-35554376#parameters-1\",\"317\":\"v-35554376#returns\",\"318\":\"v-35554376#compilewrap\",\"319\":\"v-35554376#parameters-2\",\"320\":\"v-35554376#returns-1\",\"321\":\"v-198e205d\",\"322\":\"v-198e205d#implements\",\"323\":\"v-198e205d#table-of-contents\",\"324\":\"v-198e205d#constructors\",\"325\":\"v-198e205d#methods\",\"326\":\"v-198e205d#constructors-1\",\"327\":\"v-198e205d#constructor\",\"328\":\"v-198e205d#parameters\",\"329\":\"v-198e205d#methods-1\",\"330\":\"v-198e205d#getcompiledtranslationsdump\",\"331\":\"v-198e205d#parameters-1\",\"332\":\"v-198e205d#returns\",\"333\":\"v-198e205d#implementation-of\",\"334\":\"v-198e205d#getcompiledtranslationsdumpascjsexport\",\"335\":\"v-198e205d#parameters-2\",\"336\":\"v-198e205d#returns-1\",\"337\":\"v-198e205d#implementation-of-1\",\"338\":\"v-198e205d#getcompiledtranslationsdumpasesmexport\",\"339\":\"v-198e205d#parameters-3\",\"340\":\"v-198e205d#returns-2\",\"341\":\"v-198e205d#implementation-of-2\",\"342\":\"v-198e205d#getmissingtranslationkeys\",\"343\":\"v-198e205d#returns-3\",\"344\":\"v-198e205d#implementation-of-3\",\"345\":\"v-198e205d#getunusedtranslationkeys\",\"346\":\"v-198e205d#returns-4\",\"347\":\"v-198e205d#implementation-of-4\",\"348\":\"v-198e205d#parse\",\"349\":\"v-198e205d#parameters-4\",\"350\":\"v-198e205d#returns-5\",\"351\":\"v-198e205d#implementation-of-5\",\"352\":\"v-198e205d#removetranslations\",\"353\":\"v-198e205d#parameters-5\",\"354\":\"v-198e205d#returns-6\",\"355\":\"v-198e205d#implementation-of-6\",\"356\":\"v-198e205d#settranslations\",\"357\":\"v-198e205d#parameters-6\",\"358\":\"v-198e205d#returns-7\",\"359\":\"v-198e205d#implementation-of-7\",\"360\":\"v-03b3b2b8\",\"361\":\"v-03b3b2b8#hierarchy\",\"362\":\"v-03b3b2b8#table-of-contents\",\"363\":\"v-03b3b2b8#constructors\",\"364\":\"v-03b3b2b8#properties\",\"365\":\"v-03b3b2b8#methods\",\"366\":\"v-03b3b2b8#constructors-1\",\"367\":\"v-03b3b2b8#constructor\",\"368\":\"v-03b3b2b8#parameters\",\"369\":\"v-03b3b2b8#overrides\",\"370\":\"v-03b3b2b8#properties-1\",\"371\":\"v-03b3b2b8#column\",\"372\":\"v-03b3b2b8#inherited-from\",\"373\":\"v-03b3b2b8#line\",\"374\":\"v-03b3b2b8#inherited-from-1\",\"375\":\"v-03b3b2b8#text\",\"376\":\"v-03b3b2b8#inherited-from-2\",\"377\":\"v-03b3b2b8#value\",\"378\":\"v-03b3b2b8#methods-1\",\"379\":\"v-03b3b2b8#compile\",\"380\":\"v-03b3b2b8#parameters-1\",\"381\":\"v-03b3b2b8#returns\",\"382\":\"v-03b3b2b8#overrides-1\",\"383\":\"v-03b3b2b8#compilewrap\",\"384\":\"v-03b3b2b8#parameters-2\",\"385\":\"v-03b3b2b8#returns-1\",\"386\":\"v-03b3b2b8#inherited-from-3\",\"387\":\"v-71bc0232\",\"388\":\"v-71bc0232#implements\",\"389\":\"v-71bc0232#table-of-contents\",\"390\":\"v-71bc0232#constructors\",\"391\":\"v-71bc0232#methods\",\"392\":\"v-71bc0232#constructors-1\",\"393\":\"v-71bc0232#constructor\",\"394\":\"v-71bc0232#parameters\",\"395\":\"v-71bc0232#methods-1\",\"396\":\"v-71bc0232#log\",\"397\":\"v-71bc0232#parameters-1\",\"398\":\"v-71bc0232#returns\",\"399\":\"v-71bc0232#implementation-of\",\"400\":\"v-71bc0232#verbose\",\"401\":\"v-71bc0232#parameters-2\",\"402\":\"v-71bc0232#returns-1\",\"403\":\"v-71bc0232#implementation-of-1\",\"404\":\"v-e1fd9cc8\",\"405\":\"v-e1fd9cc8#hierarchy\",\"406\":\"v-e1fd9cc8#table-of-contents\",\"407\":\"v-e1fd9cc8#constructors\",\"408\":\"v-e1fd9cc8#properties\",\"409\":\"v-e1fd9cc8#methods\",\"410\":\"v-e1fd9cc8#constructors-1\",\"411\":\"v-e1fd9cc8#constructor\",\"412\":\"v-e1fd9cc8#parameters\",\"413\":\"v-e1fd9cc8#overrides\",\"414\":\"v-e1fd9cc8#properties-1\",\"415\":\"v-e1fd9cc8#column\",\"416\":\"v-e1fd9cc8#inherited-from\",\"417\":\"v-e1fd9cc8#falsy\",\"418\":\"v-e1fd9cc8#line\",\"419\":\"v-e1fd9cc8#inherited-from-1\",\"420\":\"v-e1fd9cc8#test\",\"421\":\"v-e1fd9cc8#text\",\"422\":\"v-e1fd9cc8#inherited-from-2\",\"423\":\"v-e1fd9cc8#truthy\",\"424\":\"v-e1fd9cc8#methods-1\",\"425\":\"v-e1fd9cc8#compile\",\"426\":\"v-e1fd9cc8#parameters-1\",\"427\":\"v-e1fd9cc8#returns\",\"428\":\"v-e1fd9cc8#overrides-1\",\"429\":\"v-e1fd9cc8#compilewrap\",\"430\":\"v-e1fd9cc8#parameters-2\",\"431\":\"v-e1fd9cc8#returns-1\",\"432\":\"v-e1fd9cc8#inherited-from-3\",\"433\":\"v-548ed604\",\"434\":\"v-548ed604#hierarchy\",\"435\":\"v-548ed604#table-of-contents\",\"436\":\"v-548ed604#constructors\",\"437\":\"v-548ed604#properties\",\"438\":\"v-548ed604#methods\",\"439\":\"v-548ed604#constructors-1\",\"440\":\"v-548ed604#constructor\",\"441\":\"v-548ed604#parameters\",\"442\":\"v-548ed604#overrides\",\"443\":\"v-548ed604#properties-1\",\"444\":\"v-548ed604#column\",\"445\":\"v-548ed604#inherited-from\",\"446\":\"v-548ed604#line\",\"447\":\"v-548ed604#inherited-from-1\",\"448\":\"v-548ed604#text\",\"449\":\"v-548ed604#inherited-from-2\",\"450\":\"v-548ed604#methods-1\",\"451\":\"v-548ed604#compile\",\"452\":\"v-548ed604#parameters-1\",\"453\":\"v-548ed604#returns\",\"454\":\"v-548ed604#overrides-1\",\"455\":\"v-548ed604#compilewrap\",\"456\":\"v-548ed604#parameters-2\",\"457\":\"v-548ed604#returns-1\",\"458\":\"v-548ed604#inherited-from-3\",\"459\":\"v-35b36768\",\"460\":\"v-35b36768#implements\",\"461\":\"v-35b36768#table-of-contents\",\"462\":\"v-35b36768#constructors\",\"463\":\"v-35b36768#methods\",\"464\":\"v-35b36768#constructors-1\",\"465\":\"v-35b36768#constructor\",\"466\":\"v-35b36768#parameters\",\"467\":\"v-35b36768#methods-1\",\"468\":\"v-35b36768#translate\",\"469\":\"v-35b36768#parameters-1\",\"470\":\"v-35b36768#returns\",\"471\":\"v-35b36768#implementation-of\",\"472\":\"v-d0736a32\",\"473\":\"v-69092c87\",\"474\":\"v-73d692d2\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[2,203],\"2\":[1,13],\"3\":[1,10],\"4\":[1,10],\"5\":[1,11],\"6\":[2,21],\"7\":[2,26],\"8\":[1,19],\"9\":[1,20],\"10\":[1,21],\"11\":[1,22],\"12\":[2],\"13\":[3],\"14\":[1,16],\"15\":[1,5],\"16\":[2,17],\"17\":[2],\"18\":[1,8],\"19\":[2,34],\"20\":[1,22],\"21\":[1,11],\"22\":[1,11],\"23\":[1,16],\"24\":[1,8],\"25\":[2,15],\"26\":[1,11],\"27\":[2,30],\"28\":[1,14],\"29\":[1,14],\"30\":[1,23],\"31\":[1,8],\"32\":[2,25],\"33\":[1,14],\"34\":[1,8],\"35\":[2,14],\"36\":[1,6],\"37\":[1,1],\"38\":[1,14],\"39\":[1,7],\"40\":[2,25],\"41\":[1,8],\"42\":[2,25],\"43\":[1,20],\"44\":[1,17],\"45\":[2,57],\"46\":[2,76],\"47\":[1,74],\"48\":[1],\"49\":[2,73],\"50\":[2,105],\"51\":[1,87],\"52\":[1,51],\"53\":[1,70],\"54\":[1],\"55\":[1],\"56\":[1,21],\"57\":[1,9],\"58\":[2,30],\"59\":[1,11],\"60\":[1,6],\"61\":[2,30],\"62\":[1,11],\"63\":[1,6],\"64\":[1,18],\"65\":[1,5],\"66\":[1,8],\"67\":[1,13],\"68\":[1,7],\"69\":[1,6],\"70\":[1,29],\"71\":[1,14],\"72\":[1,35],\"73\":[1,10],\"74\":[1,8],\"75\":[1,8],\"76\":[1,2],\"77\":[1,17],\"78\":[1],\"79\":[1,77],\"80\":[1,43],\"81\":[2,38],\"82\":[2,20],\"83\":[1],\"84\":[1,46],\"85\":[1,80],\"86\":[1,40],\"87\":[1,48],\"88\":[1,48],\"89\":[1,52],\"90\":[2,7],\"91\":[2,1],\"92\":[3],\"93\":[1,1],\"94\":[1],\"95\":[1,16],\"96\":[1,19],\"97\":[1,2],\"98\":[2,7],\"99\":[2,1],\"100\":[3],\"101\":[1,2],\"102\":[1],\"103\":[1,16],\"104\":[1,10],\"105\":[1,1],\"106\":[1,16],\"107\":[1,10],\"108\":[1,2],\"109\":[2,7],\"110\":[2,1],\"111\":[3],\"112\":[1,8],\"113\":[1],\"114\":[1,35],\"115\":[1,26],\"116\":[1,1],\"117\":[1,17],\"118\":[1,20],\"119\":[1,1],\"120\":[1,16],\"121\":[1,20],\"122\":[1,1],\"123\":[1,30],\"124\":[1,3],\"125\":[1,29],\"126\":[1,3],\"127\":[1,75],\"128\":[1,28],\"129\":[1,1],\"130\":[1,12],\"131\":[1,8],\"132\":[1,1],\"133\":[1,14],\"134\":[1,10],\"135\":[1,1],\"136\":[2,7],\"137\":[2,1],\"138\":[3],\"139\":[1,2],\"140\":[1],\"141\":[1,12],\"142\":[1,24],\"143\":[1,1],\"144\":[1,15],\"145\":[1,24],\"146\":[1,1],\"147\":[2,7],\"148\":[2,1],\"149\":[3],\"150\":[1,1],\"151\":[1],\"152\":[1,42],\"153\":[1,13],\"154\":[1,1],\"155\":[2,6],\"156\":[1,1],\"157\":[3],\"158\":[1,1],\"159\":[1,1],\"160\":[1],\"161\":[1,7],\"162\":[1,9],\"163\":[1],\"164\":[1,16],\"165\":[1,19],\"166\":[1,2],\"167\":[2,2],\"168\":[2,12],\"169\":[3],\"170\":[1,1],\"171\":[1,6],\"172\":[1],\"173\":[1,11],\"174\":[1,32],\"175\":[1],\"176\":[1,11],\"177\":[1,12],\"178\":[1,11],\"179\":[1,13],\"180\":[1,14],\"181\":[1,14],\"182\":[2,9],\"183\":[3],\"184\":[1,1],\"185\":[1,1],\"186\":[1],\"187\":[1,7],\"188\":[1,14],\"189\":[1],\"190\":[1,3],\"191\":[2,6],\"192\":[3],\"193\":[1,1],\"194\":[1,1],\"195\":[1],\"196\":[1,7],\"197\":[1,15],\"198\":[1],\"199\":[1,12],\"200\":[2,9],\"201\":[3],\"202\":[1,1],\"203\":[1,1],\"204\":[1],\"205\":[1,7],\"206\":[1,12],\"207\":[1],\"208\":[1,3],\"209\":[2,39],\"210\":[1,3],\"211\":[3],\"212\":[1,1],\"213\":[1,6],\"214\":[1,2],\"215\":[1],\"216\":[1,11],\"217\":[1,39],\"218\":[1,2],\"219\":[1],\"220\":[1,10],\"221\":[2,2],\"222\":[1,3],\"223\":[1,10],\"224\":[2,2],\"225\":[1,3],\"226\":[1,6],\"227\":[1,9],\"228\":[2,2],\"229\":[1],\"230\":[1,12],\"231\":[1,13],\"232\":[1,1],\"233\":[1,2],\"234\":[1,27],\"235\":[1,17],\"236\":[1,1],\"237\":[2,2],\"238\":[2,23],\"239\":[1,3],\"240\":[3],\"241\":[1,1],\"242\":[1,6],\"243\":[1,2],\"244\":[1],\"245\":[1,11],\"246\":[1,25],\"247\":[1,2],\"248\":[1],\"249\":[1,10],\"250\":[2,2],\"251\":[1,3],\"252\":[1,10],\"253\":[2,2],\"254\":[1,3],\"255\":[1,3],\"256\":[1,9],\"257\":[2,2],\"258\":[1],\"259\":[1,12],\"260\":[1,13],\"261\":[1,1],\"262\":[1,2],\"263\":[1,27],\"264\":[1,17],\"265\":[1,1],\"266\":[2,2],\"267\":[2,6],\"268\":[1,1],\"269\":[3],\"270\":[1,1],\"271\":[1,2],\"272\":[1],\"273\":[1,7],\"274\":[1,9],\"275\":[1],\"276\":[1,16],\"277\":[1,10],\"278\":[1,1],\"279\":[2,2],\"280\":[1,16],\"281\":[1,10],\"282\":[1,2],\"283\":[2,2],\"284\":[2,26],\"285\":[3],\"286\":[1,1],\"287\":[1,2],\"288\":[1,2],\"289\":[1],\"290\":[1,3],\"291\":[1],\"292\":[1,15],\"293\":[1,13],\"294\":[1],\"295\":[1,19],\"296\":[1,12],\"297\":[1,1],\"298\":[1,17],\"299\":[1,10],\"300\":[1,1],\"301\":[2,12],\"302\":[1,7],\"303\":[3],\"304\":[1,1],\"305\":[1,3],\"306\":[1,2],\"307\":[1],\"308\":[1,9],\"309\":[1,18],\"310\":[1],\"311\":[1,10],\"312\":[1,10],\"313\":[1,9],\"314\":[1],\"315\":[1,12],\"316\":[1,13],\"317\":[1,1],\"318\":[1,27],\"319\":[1,17],\"320\":[1,1],\"321\":[2,6],\"322\":[1,1],\"323\":[3],\"324\":[1,1],\"325\":[1,8],\"326\":[1],\"327\":[1,7],\"328\":[1,9],\"329\":[1],\"330\":[1,36],\"331\":[1,26],\"332\":[1,1],\"333\":[2,2],\"334\":[1,17],\"335\":[1,20],\"336\":[1,1],\"337\":[2,2],\"338\":[1,16],\"339\":[1,20],\"340\":[1,1],\"341\":[2,2],\"342\":[1,30],\"343\":[1,3],\"344\":[2,2],\"345\":[1,29],\"346\":[1,3],\"347\":[2,2],\"348\":[1,75],\"349\":[1,32],\"350\":[1,1],\"351\":[2,2],\"352\":[1,12],\"353\":[1,8],\"354\":[1,1],\"355\":[2,2],\"356\":[1,14],\"357\":[1,10],\"358\":[1,1],\"359\":[2,2],\"360\":[2,16],\"361\":[1,3],\"362\":[3],\"363\":[1,1],\"364\":[1,4],\"365\":[1,2],\"366\":[1],\"367\":[1,9],\"368\":[1,23],\"369\":[1,2],\"370\":[1],\"371\":[1,10],\"372\":[2,2],\"373\":[1,10],\"374\":[2,2],\"375\":[1,9],\"376\":[2,2],\"377\":[1,6],\"378\":[1],\"379\":[1,12],\"380\":[1,13],\"381\":[1,1],\"382\":[1,2],\"383\":[1,27],\"384\":[1,17],\"385\":[1,1],\"386\":[2,2],\"387\":[2,11],\"388\":[1,1],\"389\":[3],\"390\":[1,1],\"391\":[1,2],\"392\":[1],\"393\":[1,7],\"394\":[1,9],\"395\":[1],\"396\":[1,12],\"397\":[1,24],\"398\":[1,1],\"399\":[2,2],\"400\":[1,15],\"401\":[1,24],\"402\":[1,1],\"403\":[2,2],\"404\":[2,22],\"405\":[1,3],\"406\":[3],\"407\":[1,1],\"408\":[1,6],\"409\":[1,2],\"410\":[1],\"411\":[1,11],\"412\":[1,22],\"413\":[1,2],\"414\":[1],\"415\":[1,10],\"416\":[2,2],\"417\":[1,3],\"418\":[1,10],\"419\":[2,2],\"420\":[1,3],\"421\":[1,9],\"422\":[2,2],\"423\":[1,3],\"424\":[1],\"425\":[1,12],\"426\":[1,13],\"427\":[1,1],\"428\":[1,2],\"429\":[1,27],\"430\":[1,17],\"431\":[1,1],\"432\":[2,2],\"433\":[2,21],\"434\":[1,3],\"435\":[3],\"436\":[1,1],\"437\":[1,3],\"438\":[1,2],\"439\":[1],\"440\":[1,5],\"441\":[1,8],\"442\":[1,2],\"443\":[1],\"444\":[1,10],\"445\":[2,2],\"446\":[1,10],\"447\":[2,2],\"448\":[1,9],\"449\":[2,2],\"450\":[1],\"451\":[1,12],\"452\":[1,13],\"453\":[1,1],\"454\":[1,2],\"455\":[1,27],\"456\":[1,17],\"457\":[1,1],\"458\":[2,2],\"459\":[2,6],\"460\":[1,1],\"461\":[3],\"462\":[1,1],\"463\":[1,1],\"464\":[1],\"465\":[1,7],\"466\":[1,9],\"467\":[1],\"468\":[1,42],\"469\":[1,13],\"470\":[1,1],\"471\":[2,2],\"472\":[1],\"473\":[1],\"474\":[1]},\"averageFieldLength\":[1.263157894736842,13.619999686533909],\"storedFields\":{\"0\":{\"h\":\"Advanced\"},\"1\":{\"h\":\"Key Formatting\",\"t\":[\"When building complex applications it might be smart to employ a contextual key naming strategy. So, instead of using key names which describe the content of the translation, you can use key names which describe the context, i.e. where the key is used or its purpose.\",\"For example, imagine you are listing a sequence of items separated by the word and. You could be tempted to simply use and as key, however, this way it would be very confusing if at some point you decide that the list must be separated by the word or instead, while the key remains and.\",\"Instead, you can use a contextual key name, like list_separator, which would be much more appropriate. In addition, you might want to support multiple types of lists, so you could further change the key to doctor_list_separator or patient_list_separator etc.\",\"The pitfall of this strategy is that translation keys can quickly become very long and hard to read, especially when used in some kind of component structure (like in Vue apps) where all translation keys used in a component all start with the same prefix.\",\"To help with this issue transax provides a way to use short and simple translation keys in your code, while during analysis they will be converted into their full contextual form.\",\"To do this, specify a key formatting function as the keyFormatter option of the Analyzer class. This function will be called for each key found in your code and should return the full contextual key name.\",\"The function will be passed the short key as first argument and the corresponding instance of AnalyzerToken as second argument, which you can use to get additional information about the token.\",\"Here's an example which uses the keyFormatter option to prefix all keys with the name of the file they are used in:\",\"import { Analyzer, Generator } from 'transax'; const generator = new Generator( { translations: { en: { 'path/to/my/custom/component.js@hello': 'Hello world!', }, }, analyzer: new Analyzer( { keyFormatter: ( key, token ) => `${ token.source }@${ key }`, } ), } ); generator.parse( 'console.log( $t( \\\"hello\\\" ) );', 'path/to/my/custom/component.js' ); console.log( generator.getCompiledTranslationsDump() ); // -> { en: { \\\"path/to/my/custom/component.js@hello\\\": ()=>\\\"Hello world!\\\" } } \",\"In this example the path/to/my/custom/component.js file uses $t( \\\"hello\\\" ), which transax will actually \\\"see\\\" as $t( \\\"path/to/my/custom/component.js@hello\\\" ) instead.\",\"Making sure the $t function converts the keys appropriately is your own responsibility.\",\"Tips\",\"In a Vue application for example you can use this.$options.name to get the name of the current\\ncomponent and infer the required key prefix.\"]},\"2\":{\"h\":\"Installation\",\"t\":[\"transax is distributed as a zero-dependency package hosted on npmjs.com.\"]},\"3\":{\"h\":\"npm\",\"t\":[\"Install it using the npm package manager:\",\"npm install transax \"]},\"4\":{\"h\":\"yarn\",\"t\":[\"Install it using the yarn package manager:\",\"yarn add transax \"]},\"5\":{\"h\":\"Introduction\",\"t\":[\"transax is a JavaScript/TypeScript library for content internationalization & localization.\"]},\"6\":{\"h\":\"Framework-agnostic\",\"t\":[\"The project is a pure JavaScript solution, so it can be used directly, or integrated with virtually any framework or library.\"]},\"7\":{\"h\":\"Flavor-agnostic\",\"t\":[\"Due to its simplicity transax is able to recognize and extract keys from any JS-like syntax, including JSX, TSX, Vue SFCs and maybe even future flavors.\"]},\"8\":{\"h\":\"Flexible\",\"t\":[\"Originally written in TypeScript, the package comes bundled with transpiled JavaScript versions for both CommonJS and ESM uses.\"]},\"9\":{\"h\":\"Analysis\",\"t\":[\"Able to analyze your code and look for translation calls, transax will then report back with untranslated and obsolete keys.\"]},\"10\":{\"h\":\"Compilation\",\"t\":[\"Once created your translation dictionary is compiled to a highly optimized and highly performant JavaScript object, ready to be used in production.\"]},\"11\":{\"h\":\"Translation\",\"t\":[\"At runtime, transax uses the compiled dictionary to translate keys into the desired language, performing powerful\\nstring interpolation & formatting of passed data.\"]},\"12\":{\"h\":\"API Reference\"},\"13\":{\"h\":\"Table of contents\"},\"14\":{\"h\":\"Classes\",\"t\":[\"Analyzer\",\"AnalyzerToken\",\"CallExpressionArrayAccess\",\"CallExpressionInvocation\",\"CallExpressionObjectAccess\",\"CallExpressionToken\",\"ComparisonExpressionToken\",\"Compiler\",\"CompilerContext\",\"CompilerToken\",\"Generator\",\"LiteralToken\",\"Logger\",\"TernaryExpressionToken\",\"TextToken\",\"Translator\"]},\"15\":{\"h\":\"Interfaces\",\"t\":[\"AnalyzerInterface\",\"CompilerInterface\",\"GeneratorInterface\",\"LoggerInterface\",\"TranslatorInterface\"]},\"16\":{\"h\":\"Type Aliases\",\"t\":[\"AnalyzerOptions\",\"Catalog\",\"CompiledCatalog\",\"CompiledDictionary\",\"CompiledValue\",\"CompilerOptions\",\"Context\",\"ContextGlobals\",\"ContextParams\",\"Dictionary\",\"GeneratorOptions\",\"Key\",\"KeyFormatter\",\"Locale\",\"LoggerOptions\",\"TranslatorOptions\",\"Value\"]},\"17\":{\"h\":\"Type Aliases\"},\"18\":{\"h\":\"AnalyzerOptions\",\"t\":[\"Ƭ AnalyzerOptions: Object\",\"Options for the Analyzer.\"]},\"19\":{\"h\":\"Type declaration\",\"t\":[\"Name\",\"Type\",\"Description\",\"keyFormatter?\",\"KeyFormatter\",\"A function to format the translation key based on the context. Defaults to ( key => key ).\",\"logger?\",\"LoggerInterface\",\"Optional logger instance. Defaults to new Logger( { namespace: 'TRANSAX:ANALYZER' } ).\",\"names?\",\"string[]\",\"The names of the functions to analyze. Defaults to [ '$t' ].\"]},\"20\":{\"h\":\"Catalog\",\"t\":[\"Ƭ Catalog: Record<Locale, Dictionary>\",\"Catalog of translation entries, keyed by locale.\",\"Example\",\"{ \\\"en_US\\\": { \\\"my.translation.key\\\": \\\"Hello there, nice to meet you!\\\", }, } \"]},\"21\":{\"h\":\"CompiledCatalog\",\"t\":[\"Ƭ CompiledCatalog: Record<Locale, CompiledDictionary>\",\"A compiled version of a Catalog.\"]},\"22\":{\"h\":\"CompiledDictionary\",\"t\":[\"Ƭ CompiledDictionary: Record<Key, CompiledValue>\",\"A compiled version of a Dictionary.\"]},\"23\":{\"h\":\"CompiledValue\",\"t\":[\"Ƭ CompiledValue: (params: ContextParams, globals: ContextGlobals) => string | string\",\"A compiled version of a Value.\"]},\"24\":{\"h\":\"CompilerOptions\",\"t\":[\"Ƭ CompilerOptions: Object\",\"Options for the Compiler.\"]},\"25\":{\"h\":\"Type declaration\",\"t\":[\"Name\",\"Type\",\"Description\",\"logger?\",\"LoggerInterface\",\"Optional logger instance. Defaults to new Logger( { namespace: 'TRANSAX:COMPILER' } ).\"]},\"26\":{\"h\":\"Context\",\"t\":[\"Ƭ Context: Object\",\"Runtime context to be used during translation.\"]},\"27\":{\"h\":\"Type declaration\",\"t\":[\"Name\",\"Type\",\"Description\",\"globals?\",\"ContextGlobals\",\"Hashmap of globals available to translation expressions.\",\"locale?\",\"Locale\",\"The locale to translate to. If not specified, the default locale specified in the translator options will be used.\",\"params?\",\"ContextParams\",\"Hashmap of parameters available to translation expressions.\"]},\"28\":{\"h\":\"ContextGlobals\",\"t\":[\"Ƭ ContextGlobals: Record<string, any>\",\"Hashmap of context globals to be used during translation.\"]},\"29\":{\"h\":\"ContextParams\",\"t\":[\"Ƭ ContextParams: Record<string, any>\",\"Hashmap of context parameters to be used during translation.\"]},\"30\":{\"h\":\"Dictionary\",\"t\":[\"Ƭ Dictionary: Record<Key, Value>\",\"Translation dictionary as a hashmap of key-value pairs.\",\"Example\",\"{ \\\"my.translation.key\\\": \\\"Hello there, nice to meet you!\\\" } \"]},\"31\":{\"h\":\"GeneratorOptions\",\"t\":[\"Ƭ GeneratorOptions: Object\",\"Options for the Generator.\"]},\"32\":{\"h\":\"Type declaration\",\"t\":[\"Name\",\"Type\",\"Description\",\"analyzer?\",\"AnalyzerInterface\",\"Optional analyzer instance. Defaults to new Analyzer().\",\"compiler?\",\"CompilerInterface\",\"Optional compiler instance. Defaults to new Compiler().\",\"logger?\",\"LoggerInterface\",\"Optional logger instance. Defaults to new Logger( { namespace: 'TRANSAX:GENERATOR' } ).\",\"translations?\",\"Catalog\",\"Optional translation catalog. Defaults to {}.\"]},\"33\":{\"h\":\"Key\",\"t\":[\"Ƭ Key: string\",\"Translation key as a string used to identify a translation.\",\"Example\",\"\\\"my.translation.key\\\" \"]},\"34\":{\"h\":\"KeyFormatter\",\"t\":[\"Ƭ KeyFormatter: (key: Key, token: AnalyzerToken) => string\"]},\"35\":{\"h\":\"Type declaration\",\"t\":[\"▸ (key, token): string\",\"A function to format the translation key based on the context.\"]},\"36\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"key\",\"Key\",\"token\",\"AnalyzerToken\"]},\"37\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"38\":{\"h\":\"Locale\",\"t\":[\"Ƭ Locale: string\",\"Translation locale as a string representing a unique language.\",\"Example\",\"\\\"en_US\\\" \"]},\"39\":{\"h\":\"LoggerOptions\",\"t\":[\"Ƭ LoggerOptions: Object\",\"Options for Logger.\"]},\"40\":{\"h\":\"Type declaration\",\"t\":[\"Name\",\"Type\",\"Description\",\"namespace?\",\"string\",\"Specifies a namespace for identifying the purpose of the logger (e.g. Analysis). Defaults to LOG.\",\"verbose?\",\"boolean\",\"Enables verbose logging. Defaults to false.\"]},\"41\":{\"h\":\"TranslatorOptions\",\"t\":[\"Ƭ TranslatorOptions: Object\",\"Options for the Translator.\"]},\"42\":{\"h\":\"Type declaration\",\"t\":[\"Name\",\"Type\",\"Description\",\"fallbackLocale?\",\"Locale\",\"Optional fallback locale. Defaults to undefined.\",\"logger?\",\"LoggerInterface\",\"Optional logger instance. Defaults to new Logger( { namespace: 'TRANSAX:TRANSLATOR' } ).\",\"translations?\",\"CompiledCatalog\",\"Optional compiled translation catalog. Defaults to {}.\"]},\"43\":{\"h\":\"Value\",\"t\":[\"Ƭ Value: string\",\"Translation value as a string translation of its corresponding key.\",\"Example\",\"\\\"Hello there, nice to meet you!\\\" \"]},\"44\":{\"h\":\"Analysis\",\"t\":[\"This feature allows you to scan your source code for translatable strings and extract useful information.\"]},\"45\":{\"h\":\"The problem\",\"t\":[\"Consider the following example:\",\"const hello = $t( 'Hello' ); const greet = $t( 'nice to meet you' ); console.log( `${ hello } John, ${ greet }!` ); \",\"In this code you have two translatable strings: Hello and nice to meet you. Here it is obvious you will need to make sure you translate both of them. But what if you had a hundred strings in your code? Manually keeping track of each of them can be a tedious task.\"]},\"46\":{\"h\":\"The solution\",\"t\":[\"Instead, you can use the analysis feature to extract all the strings from your code and then compare them against your current translations.\",\"This way you can easily find out which strings are missing and need to be translated, or which strings are no longer used and can be removed.\",\"import { Generator } from 'transax'; const generator = new Generator( { translations: { en: { 'nice to meet you': 'nice to meet you', 'unused': 'unused', }, de: { 'Hello': 'Hallo', }, }, } ); generator.parse( '<source code as string>', 'path/to/file1.js' ); generator.parse( '<source code as string>', 'path/to/file2.js' ); console.log( generator.getMissingTranslationKeys() ); // -> { en: [ 'Hello' ], de: [ 'nice to meet you' ] } console.log( generator.getUnusedTranslationKeys() ); // -> { en: [ 'unused' ], de: [] } \",\"Tips\",\"Use this feature at build time to make sure your translations are always up-to-date.\"]},\"47\":{\"h\":\"Limitations\",\"t\":[\"The analysis feature is not perfect. It works in a more generic manner in order to support almost any kind of source code syntax.\",\"This means that it cannot understand the context of your code, nor even its language or flavor. It simply looks for function-like calls to $t with at least one string argument.\",\"By design, it cannot match expressions or interpolation. Translation keys must be string literals (static). It\\ndoes support strings defined with single: '..' and double: \\\"..\\\" quotes, as well as template\\nliterals: `..`.\"]},\"48\":{\"h\":\"Compilation\"},\"49\":{\"h\":\"Translation Dictionary\",\"t\":[\"When you're translating your project, your translation dictionary will look something like this:\",\"const translations = { en: { 'welcome': 'Hello, {{ name }}, welcome to {{ @store }}!', 'unused': 'unused', }, de: { 'Hello': 'Hallo', }, }; \",\"Under the hood you can use any flavor or format you like, but once loaded into your application transax will expect it as a JavaScript object in the above format.\",\"Tips\",\"Check the full specification here: Dictionary.\",\"This format, while readable, does not provide the best possible performance, so during translation (at runtime) transax will actually expect a compiled version of the dictionary instead.\"]},\"50\":{\"h\":\"Compiled Dictionary\",\"t\":[\"Use the provided Generator class to compile your dictionary and save it to a file:\",\"import { writeFileSync } from 'node:fs'; import { Generator } from 'transax'; const generator = new Generator( { translations } ); generator.parse( '<source code as string>', 'path/to/file1.js' ); generator.parse( '<source code as string>', 'path/to/file2.js' ); writeFileSync( 'path/to/compiled-dictionary.js', generator.getCompiledTranslationsDumpAsESMExport(), ); \",\"The code above will convert your translation dictionary into a compiled version that looks something like this:\",\"export default { en: { 'welcome': ( { name }, { store } ) => `Hello, ${ name }, welcome to ${ store }!`, 'unused': () => `unused`, }, de: { 'Hello': () => `Hallo`, }, }; \",\"In this format the Translator can now look up and translate any key, resolving and replacing expressions with their final values without the additional overhead of parsing your dictionary each time.\",\"Tips\",\"Pass true as first argument to:\",\"getCompiledTranslationsDumpAsESMExport()\",\"getCompiledTranslationsDumpAsCJSExport() or\",\"getCompiledTranslationsDump()\",\"to make the generated code contain comments with information about where each key was extracted from.\"]},\"51\":{\"h\":\"Accumulation\",\"t\":[\"By default, when calling parse multiple times with the same value for source, all previously exported keys for that source will be removed prior to extracting new ones. This can be useful when you want to continuously parse a file and update the compiled dictionary as the file contents change.\",\"On the other hand you might need to (for example) stream the source code of a file and call parse multiple times, but accumulate extracted keys instead. To do this, pass true as the third argument to parse.\",\"Note\",\"Keep in mind that parse only analyzes the passed source code during each call, which means that meta information about extracted keys in accumulation code will be incorrect and should be ignored.\",\"If source is omitted, parse will work in accumulation mode regardless of the value of accumulate\\n(the third argument).\"]},\"52\":{\"h\":\"Importing\",\"t\":[\"Since transax supports both CommonJS and ES6 modules, you can import it using the package name. The correct path will be resolved automatically.\",\"If you are using TypeScript, you can even import directly from the source files.\",\"Note\",\"From this point on the documentation will assume you are using the ES6 Module syntax.\\nIf you are using CommonJS, you can still use the same API, but you will need to use the require syntax instead of\\nimport.\"]},\"53\":{\"h\":\"Interpolation\",\"t\":[\"When translating your application your dictionary will most likely contain placeholders you would want to be evaluated and replaced with the actual value at runtime.\",\"A placeholder is any valid expression wrapped by double curly braces: {{ and }}:\",\"Hello {{ name }} \",\"Here, Hello is considered plain (static) text and the rest a placeholder with name as its expression.\",\"When translating this string, the expression name will be evaluated and the result will be inserted in place of the placeholder.\",\"Expressions (the thing between the curly braces) must follow strict syntax rules.\\nIf the expression is invalid, the entire placeholder will be treated as plain text instead (no error is thrown).\"]},\"54\":{\"h\":\"Syntax\"},\"55\":{\"h\":\"Expressions\"},\"56\":{\"h\":\"Expression\",\"t\":[\"Any value (between the curly braces) you are trying to interpolate must be and comply to the syntax rules of an expression.\"]},\"57\":{\"h\":\"Syntax\",\"t\":[\"One of the following:\",\"Ternary expression\",\"Comparison expression\",\"Call expression\",\"Literal expression\"]},\"58\":{\"h\":\"Ternary-Safe\",\"t\":[\"A ternary-safe expression is an Expression that may be wrapped in brackets (depending on the type) in order to avoid syntax conflicts when used as an operand of a Ternary expression.\"]},\"59\":{\"h\":\"Syntax\",\"t\":[\"One of the following:\",\"( followed by Ternary expression followed by )\",\"Comparison expression\",\"Call expression\",\"Literal expression\"]},\"60\":{\"h\":\"Example\",\"t\":[\"{{ ( true ? a : b ) ? 'yes' : 'no' }} \"]},\"61\":{\"h\":\"Comparison-Safe\",\"t\":[\"A comparison-safe expression is an Expression that may be wrapped in brackets (depending on the type) in order to avoid syntax conflicts when used as an operand of a Comparison expression.\"]},\"62\":{\"h\":\"Syntax\",\"t\":[\"One of the following:\",\"( followed by Ternary expression followed by )\",\"( followed by Comparison expression followed by )\",\"Call expression\",\"Literal expression\"]},\"63\":{\"h\":\"Example\",\"t\":[\"{{ ( true ? 0 : 1 ) < 1 }} {{ ( 0 < 1 ) === true }} \"]},\"64\":{\"h\":\"Ternary\",\"t\":[\"A ternary expression is used to return one of two values depending on the result of a comparison.\"]},\"65\":{\"h\":\"Syntax\",\"t\":[\"Ternary-Safe expression followed by ? followed by Ternary-Safe expression followed by : followed by Ternary-Safe expression\"]},\"66\":{\"h\":\"Example\",\"t\":[\"{{ 1 < 2 ? 'yes' : 'no' }} {{ ( 1 < 2 ) !== false ? 'yes' : 'no' }} \"]},\"67\":{\"h\":\"Comparison\",\"t\":[\"A comparison expression is used to compare two values using a comparison operator.\"]},\"68\":{\"h\":\"Syntax\",\"t\":[\"Comparison-Safe expression followed by Comparison Operator primitive followed by Comparison-Safe expression\"]},\"69\":{\"h\":\"Example\",\"t\":[\"{{ 1 < 2 }} {{ ( 1 < 2 ) !== false }} \"]},\"70\":{\"h\":\"Call\",\"t\":[\"A call expression is used to evaluate the value of a translation parameter or global, and optionally invoke it as a function, access its properties (if object), or access its items (if array).\"]},\"71\":{\"h\":\"Syntax\",\"t\":[\"Optional @ followed by Identifier primitive followed by zero or more of the following:\",\". followed by Identifier primitive\",\"[ followed by Expression followed by ]\",\"( followed by Arguments followed by )\"]},\"72\":{\"h\":\"Example\",\"t\":[\"{{ foo }} {{ $foo }} {{ @foo_bar_123 }} {{ value.foo }} {{ value[ 12 ] }} {{ value[ another_value ] }} {{ @value[ another_value[ @some_global ] ][12] }} {{ value.prop[ index ].prop }} {{ foo() }} {{ foo( 123 ) }} {{ foo( 1 )( 2 ) }} {{ foo( null, true, 123, .45, \\\"test\\\", bar( baz[0], baf.test() ) ) }} \",\"Tips\",\"The optional @ symbol is used to reference the value of a global instead of a translation parameter.\"]},\"73\":{\"h\":\"Arguments\",\"t\":[\"Arguments are used to pass values to a function call.\"]},\"74\":{\"h\":\"Syntax\",\"t\":[\"Zero or more Expression separated by commas (,).\"]},\"75\":{\"h\":\"Literal\",\"t\":[\"A literal expression represents a static value.\"]},\"76\":{\"h\":\"Syntax\",\"t\":[\"Literal primitive\"]},\"77\":{\"h\":\"Example\",\"t\":[\"{{ null }} {{ NULL }} {{ true }} {{ TRUE }} {{ false }} {{ FALSE }} {{ 123 }} {{ -123 }} {{ 1.23 }} {{ -1.23 }} {{ .45 }} {{ 1e3 }} {{ -1e+3 }} {{ 2e-4 }} {{ 'string' }} {{ \\\"string\\\" }} {{ `string` }} \"]},\"78\":{\"h\":\"Primitives\"},\"79\":{\"h\":\"Literal\",\"t\":[\"Literals are essentially static values. They can be booleans, strings, numbers or null.\",\"Type\",\"Example\",\"Description\",\"Null\",\"null or NULL\",\"Boolean\",\"true, TRUE, false or FALSE\",\"Number\",\"123, -123, 1.23, -1.23, .45, 1e3, -1e+3, 2e-4\",\"An integer, float or exponent number optionally preceded by a minus sign (-).\",\"String\",\"'string', \\\"string\\\" or `string`\",\"A sequence of characters enclosed in single quotes ('), double quotes (\\\") or backticks (`).\",\"Tips\",\"Quotes in strings using the same type of quote can be escaped with a backslash \\\\:\",\"{{ \\\"this is a \\\\\\\"string\\\\\\\"\\\" }} {{ 'this is a \\\\'string\\\\'' }} {{ `this is a \\\\`string\\\\`` }} \",\"You can also escape backslashes:\",\"{{ \\\"this is a backslash: \\\\\\\\\\\" }} \"]},\"80\":{\"h\":\"Identifier\",\"t\":[\"Identifiers are names usually used to access translation parameters, globals and object properties.\",\"They must be at least 1 symbol long and can contain latin letters (a-z & A-Z), numbers (0-9), underscores (_) and a dollar signs ($).\",\"They cannot start with a number and cannot be reserved words.\"]},\"81\":{\"h\":\"Comparison Operator\",\"t\":[\"Comparison operators are used to compare two values and can be one of the following:\",\"Operator\",\"Description\",\"==\",\"Values are equal.\",\"!=\",\"Values are not equal.\",\"===\",\"Values are identical.\",\"!==\",\"Values are not identical.\",\">\",\"The left value is greater than the right value.\",\">=\",\"The left value is greater than or equal to the right value.\",\"<\",\"The left value is less than the right value.\",\"<=\",\"The left value is less than or equal to the right value.\"]},\"82\":{\"h\":\"Reserved Words\",\"t\":[\"The following are reserved words in transax and cannot be used as identifiers:null, NULL, true, TRUE, false and FALSE .\"]},\"83\":{\"h\":\"Translation\"},\"84\":{\"h\":\"Initialization\",\"t\":[\"Once you've successfully compiled and saved your translations to a JavaScript file, it is now time to load them and initialize the translator in your application.\",\"import { Translator } from 'transax'; import translations from './compiled-translations.js'; const translator = new Translator( { translations } ); \",\"To specify a fallback locale to be used in case of missing translations, use the fallbackLocale option:\",\"const translator = new Translator( { translations, fallbackLocale: 'en', } ); \"]},\"85\":{\"h\":\"Translation\",\"t\":[\"Translating keys is done by calling the translate method of the translator. However, you are most likely going to be using a global function (e.g. $t) instead.\",\"To do so, simply alias the translate method to your global function:\",\"const globals = { ... }; // see section about globals below function $t( key, params, locale ) { return translator.translate( key, { locale, params, globals } ); } window.$t = $t; \",\"Tips\",\"This is just an example. How exactly you choose to invoke translate depends on your application's architecture & is entirely up to you.\",\"To translate a key hello simply pass it as the first argument to the function:\",\"console.log( $t( 'hello' ) ); \",\"Don't forget to specify the locale you want to translate to, or the translator will use the fallback locale:\",\"console.log( $t( 'hello', {}, 'de' ) ); \"]},\"86\":{\"h\":\"Interpolation\",\"t\":[\"The real strength of transax (as with most internationalization libraries) lies in its ability to interpolate values into your translations.\",\"So, instead of static text you can inject values only known at runtime:\",\"// { \\\"hello\\\": \\\"Hello {{ name }}!\\\" } console.log( $t( 'hello', { name: 'John' } ) ); // -> \\\"Hello John!\\\" \"]},\"87\":{\"h\":\"Globals\",\"t\":[\"In addition to parameters you specify when invoking the translation function, you can also define global parameters automatically available to all translations.\",\"These can be interpolated into your translations like regular parameters, except you prepend them with a @ sign:\",\"const globals = { store: 'My Store' }; // { \\\"hello\\\": \\\"Hello {{ name }}, welcome to {{ @store }}!\\\" } console.log( $t( 'hello', { name: 'John' } ) ); // -> \\\"Hello John, welcome to My Store!\\\" \"]},\"88\":{\"h\":\"Performance\",\"t\":[\"During compilationtransax extracts only the referenced parameters / globals from each translation and generates a function that destructures them from the provided parameters / globals objects.\",\"Non-referenced members of these objects are completely ignored.\",\"This means that when you invoke the translation function you can pass virtually any object as parameters / globals without penalty for big objects. You can even pass the entire window as your globals object.\"]},\"89\":{\"h\":\"Limitations\",\"t\":[\"At the moment it is not possible to reference members of parameters & globals with the same name due to the way these are destructured during compilation.\",\"For example, the following will not work & will trigger a SyntaxError when invoked:\",\"// { \\\"hello\\\": \\\"Hello {{ name }}, welcome to {{ @name }}!\\\" } console.log( translator.translate( 'hello', { params: { name: 'John' }, globals: { name: 'My Store' }, } ) ); // -> SyntaxError: Duplicate parameter name not allowed in this context \"]},\"90\":{\"h\":\"Interface: AnalyzerInterface\",\"t\":[\"Defines an interface for Analyzer classes.\"]},\"91\":{\"h\":\"Implemented by\",\"t\":[\"Analyzer\"]},\"92\":{\"h\":\"Table of contents\"},\"93\":{\"h\":\"Methods\",\"t\":[\"analyze\"]},\"94\":{\"h\":\"Methods\"},\"95\":{\"h\":\"analyze\",\"t\":[\"▸ analyze(code, source?): AnalyzerToken[]\",\"Analyzes the given source code and returns a list of parsed tokens.\"]},\"96\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"code\",\"string\",\"The source code to be parsed.\",\"source?\",\"string\",\"Optional origin of the source code, usually a path to the source file.\"]},\"97\":{\"h\":\"Returns\",\"t\":[\"AnalyzerToken[]\"]},\"98\":{\"h\":\"Interface: CompilerInterface\",\"t\":[\"Defines an interface for Compiler classes.\"]},\"99\":{\"h\":\"Implemented by\",\"t\":[\"Compiler\"]},\"100\":{\"h\":\"Table of contents\"},\"101\":{\"h\":\"Methods\",\"t\":[\"compile\",\"tokenize\"]},\"102\":{\"h\":\"Methods\"},\"103\":{\"h\":\"compile\",\"t\":[\"▸ compile(value): string\",\"Tokenizes the given string and then compiles it into an executable ECMAScript6 string.\"]},\"104\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"value\",\"string\",\"The source string to tokenize.\"]},\"105\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"106\":{\"h\":\"tokenize\",\"t\":[\"▸ tokenize(value): CompilerToken[]\",\"Tokenizes the given string converting it into a sequence of CompilerToken instances.\"]},\"107\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"value\",\"string\",\"The source string to tokenize.\"]},\"108\":{\"h\":\"Returns\",\"t\":[\"CompilerToken[]\"]},\"109\":{\"h\":\"Interface: GeneratorInterface\",\"t\":[\"Defines an interface for Generator classes.\"]},\"110\":{\"h\":\"Implemented by\",\"t\":[\"Generator\"]},\"111\":{\"h\":\"Table of contents\"},\"112\":{\"h\":\"Methods\",\"t\":[\"getCompiledTranslationsDump\",\"getCompiledTranslationsDumpAsCJSExport\",\"getCompiledTranslationsDumpAsESMExport\",\"getMissingTranslationKeys\",\"getUnusedTranslationKeys\",\"parse\",\"removeTranslations\",\"setTranslations\"]},\"113\":{\"h\":\"Methods\"},\"114\":{\"h\":\"getCompiledTranslationsDump\",\"t\":[\"▸ getCompiledTranslationsDump(includeMeta?, deduplicationMap?): string\",\"Returns an ECMAScript6 code representation of the compiled translations.\",\"If deduplicationMap is provided, the resulting code will be compressed to use variables for repeating entries. In this case, the deduplicationMap will be populated with the corresponding repeating values.\"]},\"115\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"includeMeta?\",\"boolean\",\"Whether to include meta information about the position of extracted keys in the source code.\",\"deduplicationMap?\",\"string[]\",\"Optional hashmap to store deduplicated keys.\"]},\"116\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"117\":{\"h\":\"getCompiledTranslationsDumpAsCJSExport\",\"t\":[\"▸ getCompiledTranslationsDumpAsCJSExport(includeMeta?): string\",\"Returns an ECMAScript6 code representation of the compiled translations as CommonJS module.\"]},\"118\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"includeMeta?\",\"boolean\",\"Whether to include meta information about the position of extracted keys in the source code.\"]},\"119\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"120\":{\"h\":\"getCompiledTranslationsDumpAsESMExport\",\"t\":[\"▸ getCompiledTranslationsDumpAsESMExport(includeMeta?): string\",\"Returns an ECMAScript6 code representation of the compiled translations as ECMAScript6 module.\"]},\"121\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"includeMeta?\",\"boolean\",\"Whether to include meta information about the position of extracted keys in the source code.\"]},\"122\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"123\":{\"h\":\"getMissingTranslationKeys\",\"t\":[\"▸ getMissingTranslationKeys(): Record<string, string[]>\",\"Returns a hashmap of locale keys and corresponding lists of missing translation keys. Those are keys that are extracted from source code, but not present in the translation catalog.\"]},\"124\":{\"h\":\"Returns\",\"t\":[\"Record<string, string[]>\"]},\"125\":{\"h\":\"getUnusedTranslationKeys\",\"t\":[\"▸ getUnusedTranslationKeys(): Record<string, string[]>\",\"Returns a hashmap of locale keys and corresponding lists of unused translation keys. Those are keys that are present in the translation catalog, but not in the extracted source code.\"]},\"126\":{\"h\":\"Returns\",\"t\":[\"Record<string, string[]>\"]},\"127\":{\"h\":\"parse\",\"t\":[\"▸ parse(code, source?, accumulate?): GeneratorInterface\",\"Parses the given source code extracting translation keys and saves them in the current context.\",\"By default, calling parse() multiple times for the same source will replace previously extracted keys. This is useful when you want to iteratively parse the same file as it changes for example. If you want to accumulate keys instead, for example when streaming source code, you can pass true as the third argument.\",\"Keep in mind that in this case the meta information about the position of extracted keys in the source code will be incorrect as it will be based on each call to parse(), rather an accumulated view of the source code.\",\"If source is not set, parse will accumulate keys regardless of the value of accumulate.\"]},\"128\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"code\",\"string\",\"The source code to be parsed.\",\"source?\",\"string\",\"Optional origin of the source code, usually a path to the source file.\",\"accumulate?\",\"boolean\",\"Whether to accumulate parsed keys with existing ones for the same source.\"]},\"129\":{\"h\":\"Returns\",\"t\":[\"GeneratorInterface\"]},\"130\":{\"h\":\"removeTranslations\",\"t\":[\"▸ removeTranslations(locale): GeneratorInterface\",\"Removes the current translation dictionary for the specified locale.\"]},\"131\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"locale\",\"string\",\"Target translation locale.\"]},\"132\":{\"h\":\"Returns\",\"t\":[\"GeneratorInterface\"]},\"133\":{\"h\":\"setTranslations\",\"t\":[\"▸ setTranslations(locale, dictionary): GeneratorInterface\",\"Adds or replaces the current translation dictionary for the specified locale.\"]},\"134\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"locale\",\"string\",\"Target translation locale.\",\"dictionary\",\"Dictionary\",\"Target translation dictionary.\"]},\"135\":{\"h\":\"Returns\",\"t\":[\"GeneratorInterface\"]},\"136\":{\"h\":\"Interface: LoggerInterface\",\"t\":[\"Defines an interface for Logger classes.\"]},\"137\":{\"h\":\"Implemented by\",\"t\":[\"Logger\"]},\"138\":{\"h\":\"Table of contents\"},\"139\":{\"h\":\"Methods\",\"t\":[\"log\",\"verbose\"]},\"140\":{\"h\":\"Methods\"},\"141\":{\"h\":\"log\",\"t\":[\"▸ log(...args): void\",\"Logs a message unless isSilent is true.\"]},\"142\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"...args\",\"any[]\",\"A list of arguments to log. These can be of any type that the underlying implementation (e.g. console.log ) can handle.\"]},\"143\":{\"h\":\"Returns\",\"t\":[\"void\"]},\"144\":{\"h\":\"verbose\",\"t\":[\"▸ verbose(...args): void\",\"Logs a verbose message unless isSilent is true or isVerbose is false.\"]},\"145\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"...args\",\"any[]\",\"A list of arguments to log. These can be of any type that the underlying implementation (e.g. console.log ) can handle.\"]},\"146\":{\"h\":\"Returns\",\"t\":[\"void\"]},\"147\":{\"h\":\"Interface: TranslatorInterface\",\"t\":[\"Defines an interface for Translator classes.\"]},\"148\":{\"h\":\"Implemented by\",\"t\":[\"Translator\"]},\"149\":{\"h\":\"Table of contents\"},\"150\":{\"h\":\"Methods\",\"t\":[\"translate\"]},\"151\":{\"h\":\"Methods\"},\"152\":{\"h\":\"translate\",\"t\":[\"▸ translate(key, context?): string\",\"Translates the specified key based on the specified translation context & configured translator options.\",\"If no locale is specified in the translation context, or if the specified locale does not exist in the configured translation catalog, the configured fallback locale will be used instead.\",\"If no fallback locale is specified either, or if the fallback locale does not exist in the configured translation catalog, the key will be returned as-is.\",\"If the specified key does not exist in the configured translation catalog for the specified locale, it will be retrieved using the fallback locale instead, and if that fails too, the key will be returned as-is.\"]},\"153\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"key\",\"string\",\"The key to translate.\",\"context?\",\"Context\",\"Optional translation context.\"]},\"154\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"155\":{\"h\":\"Class: Analyzer\",\"t\":[\"Default implementation of the AnalyzerInterface.\"]},\"156\":{\"h\":\"Implements\",\"t\":[\"AnalyzerInterface\"]},\"157\":{\"h\":\"Table of contents\"},\"158\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"159\":{\"h\":\"Methods\",\"t\":[\"analyze\"]},\"160\":{\"h\":\"Constructors\"},\"161\":{\"h\":\"constructor\",\"t\":[\"• new Analyzer(options?)\",\"Creates a new instance.\"]},\"162\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"options\",\"AnalyzerOptions\",\"Customizes the analyzer.\"]},\"163\":{\"h\":\"Methods\"},\"164\":{\"h\":\"analyze\",\"t\":[\"▸ analyze(code, source?): AnalyzerToken[]\",\"Analyzes the given source code and returns a list of parsed tokens.\"]},\"165\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"code\",\"string\",\"The source code to be parsed.\",\"source?\",\"string\",\"Optional origin of the source code, usually a path to the source file.\"]},\"166\":{\"h\":\"Returns\",\"t\":[\"AnalyzerToken[]\"]},\"167\":{\"h\":\"Implementation of\",\"t\":[\"AnalyzerInterface.analyze\"]},\"168\":{\"h\":\"Class: AnalyzerToken\",\"t\":[\"A class representing a single translation invocation within some source code.\"]},\"169\":{\"h\":\"Table of contents\"},\"170\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"171\":{\"h\":\"Properties\",\"t\":[\"column\",\"key\",\"line\",\"name\",\"source\",\"text\"]},\"172\":{\"h\":\"Constructors\"},\"173\":{\"h\":\"constructor\",\"t\":[\"• new AnalyzerToken(name, key, text, location, source?)\",\"Creates a new instance.\"]},\"174\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"name\",\"string\",\"The name of the invoked translation function, e.g. $t.\",\"key\",\"string\",\"The key of the translation, e.g. Hello world!.\",\"text\",\"string\",\"The full text of the invocation, e.g. $t( 'Hello world!' ).\",\"location\",\"LocationRange\",\"The location of the invocation within the source code.\",\"source?\",\"string\",\"The origin of the source code, usually a path to the source file.\"]},\"175\":{\"h\":\"Properties\"},\"176\":{\"h\":\"column\",\"t\":[\"• Readonlycolumn: number\",\"The column number of the invocation within the source code.\"]},\"177\":{\"h\":\"key\",\"t\":[\"• Readonlykey: string\",\"The key of the translation, e.g. Hello world!.\"]},\"178\":{\"h\":\"line\",\"t\":[\"• Readonlyline: number\",\"The line number of the invocation within the source code.\"]},\"179\":{\"h\":\"name\",\"t\":[\"• Readonlyname: string\",\"The name of the invoked translation function, e.g. $t.\"]},\"180\":{\"h\":\"source\",\"t\":[\"• OptionalReadonlysource: string\",\"The origin of the source code, usually a path to the source file.\"]},\"181\":{\"h\":\"text\",\"t\":[\"• Readonlytext: string\",\"The full text of the invocation, e.g. $t( 'Hello world!' ).\"]},\"182\":{\"h\":\"Class: CallExpressionArrayAccess\",\"t\":[\"Represents a call expression accessing an array element.\"]},\"183\":{\"h\":\"Table of contents\"},\"184\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"185\":{\"h\":\"Properties\",\"t\":[\"expr\"]},\"186\":{\"h\":\"Constructors\"},\"187\":{\"h\":\"constructor\",\"t\":[\"• new CallExpressionArrayAccess(expr)\",\"Creates a new instance.\"]},\"188\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"expr\",\"CompilerToken\",\"The expression to be used as array index.\"]},\"189\":{\"h\":\"Properties\"},\"190\":{\"h\":\"expr\",\"t\":[\"• Readonlyexpr: CompilerToken\"]},\"191\":{\"h\":\"Class: CallExpressionInvocation\",\"t\":[\"Represents a call expression invocation.\"]},\"192\":{\"h\":\"Table of contents\"},\"193\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"194\":{\"h\":\"Properties\",\"t\":[\"exprs\"]},\"195\":{\"h\":\"Constructors\"},\"196\":{\"h\":\"constructor\",\"t\":[\"• new CallExpressionInvocation(exprs)\",\"Creates a new instance.\"]},\"197\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"exprs\",\"CompilerToken[]\",\"An array of expressions to be used as arguments.\"]},\"198\":{\"h\":\"Properties\"},\"199\":{\"h\":\"exprs\",\"t\":[\"• Readonlyexprs: CompilerToken[]\",\"An array of expressions to be used as arguments.\"]},\"200\":{\"h\":\"Class: CallExpressionObjectAccess\",\"t\":[\"Represents a call expression accessing an object property.\"]},\"201\":{\"h\":\"Table of contents\"},\"202\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"203\":{\"h\":\"Properties\",\"t\":[\"name\"]},\"204\":{\"h\":\"Constructors\"},\"205\":{\"h\":\"constructor\",\"t\":[\"• new CallExpressionObjectAccess(name)\",\"Creates a new instance.\"]},\"206\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"name\",\"string\",\"The name of the property to access.\"]},\"207\":{\"h\":\"Properties\"},\"208\":{\"h\":\"name\",\"t\":[\"• Readonlyname: string\"]},\"209\":{\"h\":\"Class: CallExpressionToken\",\"t\":[\"Represents a call expression.\",\"It must be represented by an identifier (local or global) optionally followed by one or more of the following:\",\"Object access: . followed by an identifier.\",\"Array access: [ followed by an expression followed by ].\",\"Invocation: ( followed by an optional comma-separated list of expressions followed by ).\",\"Examples: local@globallocal.property@global.propertylocal[0]@global[0]local[0].property@global[0].propertylocal[0].property()@global[0].property()local[0].property(1, 2, 3)@global[0].property(1, 2, 3)\"]},\"210\":{\"h\":\"Hierarchy\",\"t\":[\"CompilerToken\",\"↳ CallExpressionToken\"]},\"211\":{\"h\":\"Table of contents\"},\"212\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"213\":{\"h\":\"Properties\",\"t\":[\"column\",\"global\",\"line\",\"name\",\"tail\",\"text\"]},\"214\":{\"h\":\"Methods\",\"t\":[\"compile\",\"compileWrap\"]},\"215\":{\"h\":\"Constructors\"},\"216\":{\"h\":\"constructor\",\"t\":[\"• new CallExpressionToken(global, name, tail, text, location)\",\"Creates a new instance.\"]},\"217\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"global\",\"boolean\",\"Specifies whether the identifier is a global variable or a parameter.\",\"name\",\"string\",\"The name of the identifier.\",\"tail\",\"(CallExpressionObjectAccess | CallExpressionArrayAccess | CallExpressionInvocation)[]\",\"An array of object accesses, array accesses or invocations.\",\"text\",\"string\",\"The full text (content) of the expression.\",\"location\",\"LocationRange\",\"The location of the invocation within the source code.\"]},\"218\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.constructor\"]},\"219\":{\"h\":\"Properties\"},\"220\":{\"h\":\"column\",\"t\":[\"• column: number\",\"The column number of the expression within the translation message.\"]},\"221\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.column\"]},\"222\":{\"h\":\"global\",\"t\":[\"• Readonlyglobal: boolean\"]},\"223\":{\"h\":\"line\",\"t\":[\"• line: number\",\"The line number of the expression within the translation message.\"]},\"224\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.line\"]},\"225\":{\"h\":\"name\",\"t\":[\"• Readonlyname: string\"]},\"226\":{\"h\":\"tail\",\"t\":[\"• Readonlytail: (CallExpressionObjectAccess | CallExpressionArrayAccess | CallExpressionInvocation)[]\"]},\"227\":{\"h\":\"text\",\"t\":[\"• text: string\",\"The full text (content) of the expression.\"]},\"228\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.text\"]},\"229\":{\"h\":\"Methods\"},\"230\":{\"h\":\"compile\",\"t\":[\"▸ compile(context): string\",\"Compiles the expression into an executable ECMAScript6 string.\"]},\"231\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\"]},\"232\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"233\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.compile\"]},\"234\":{\"h\":\"compileWrap\",\"t\":[\"▸ ProtectedcompileWrap(context, instanceOfs): string\",\"Same as compile() except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.\"]},\"235\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\",\"instanceOfs\",\"Function[]\",\"The types to check for.\"]},\"236\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"237\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.compileWrap\"]},\"238\":{\"h\":\"Class: ComparisonExpressionToken\",\"t\":[\"Represents a comparison expression.\",\"It must consist of two expressions separated by a comparison operator.\",\"Examples: a == ba != ba > ba < ba >= ba <= ba === ba !== b\"]},\"239\":{\"h\":\"Hierarchy\",\"t\":[\"CompilerToken\",\"↳ ComparisonExpressionToken\"]},\"240\":{\"h\":\"Table of contents\"},\"241\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"242\":{\"h\":\"Properties\",\"t\":[\"column\",\"left\",\"line\",\"operator\",\"right\",\"text\"]},\"243\":{\"h\":\"Methods\",\"t\":[\"compile\",\"compileWrap\"]},\"244\":{\"h\":\"Constructors\"},\"245\":{\"h\":\"constructor\",\"t\":[\"• new ComparisonExpressionToken(left, right, operator, text, location)\",\"Creates a new instance.\"]},\"246\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"left\",\"CompilerToken\",\"The left-hand side of the expression.\",\"right\",\"CompilerToken\",\"The right-hand side of the expression.\",\"operator\",\"string\",\"The comparison operator.\",\"text\",\"string\",\"The full text (content) of the expression.\",\"location\",\"LocationRange\",\"The location of the invocation within the source code.\"]},\"247\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.constructor\"]},\"248\":{\"h\":\"Properties\"},\"249\":{\"h\":\"column\",\"t\":[\"• column: number\",\"The column number of the expression within the translation message.\"]},\"250\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.column\"]},\"251\":{\"h\":\"left\",\"t\":[\"• Readonlyleft: CompilerToken\"]},\"252\":{\"h\":\"line\",\"t\":[\"• line: number\",\"The line number of the expression within the translation message.\"]},\"253\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.line\"]},\"254\":{\"h\":\"operator\",\"t\":[\"• Readonlyoperator: string\"]},\"255\":{\"h\":\"right\",\"t\":[\"• Readonlyright: CompilerToken\"]},\"256\":{\"h\":\"text\",\"t\":[\"• text: string\",\"The full text (content) of the expression.\"]},\"257\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.text\"]},\"258\":{\"h\":\"Methods\"},\"259\":{\"h\":\"compile\",\"t\":[\"▸ compile(context): string\",\"Compiles the expression into an executable ECMAScript6 string.\"]},\"260\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\"]},\"261\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"262\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.compile\"]},\"263\":{\"h\":\"compileWrap\",\"t\":[\"▸ ProtectedcompileWrap(context, instanceOfs): string\",\"Same as compile() except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.\"]},\"264\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\",\"instanceOfs\",\"Function[]\",\"The types to check for.\"]},\"265\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"266\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.compileWrap\"]},\"267\":{\"h\":\"Class: Compiler\",\"t\":[\"Default implementation of the CompilerInterface.\"]},\"268\":{\"h\":\"Implements\",\"t\":[\"CompilerInterface\"]},\"269\":{\"h\":\"Table of contents\"},\"270\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"271\":{\"h\":\"Methods\",\"t\":[\"compile\",\"tokenize\"]},\"272\":{\"h\":\"Constructors\"},\"273\":{\"h\":\"constructor\",\"t\":[\"• new Compiler(options?)\",\"Creates a new instance.\"]},\"274\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"options\",\"CompilerOptions\",\"Customizes the compiler.\"]},\"275\":{\"h\":\"Methods\"},\"276\":{\"h\":\"compile\",\"t\":[\"▸ compile(value): string\",\"Tokenizes the given string and then compiles it into an executable ECMAScript6 string.\"]},\"277\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"value\",\"string\",\"The source string to tokenize.\"]},\"278\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"279\":{\"h\":\"Implementation of\",\"t\":[\"CompilerInterface.compile\"]},\"280\":{\"h\":\"tokenize\",\"t\":[\"▸ tokenize(value): CompilerToken[]\",\"Tokenizes the given string converting it into a sequence of CompilerToken instances.\"]},\"281\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"value\",\"string\",\"The source string to tokenize.\"]},\"282\":{\"h\":\"Returns\",\"t\":[\"CompilerToken[]\"]},\"283\":{\"h\":\"Implementation of\",\"t\":[\"CompilerInterface.tokenize\"]},\"284\":{\"h\":\"Class: CompilerContext\",\"t\":[\"A class to hold and represent the context of a translation message compilation. This should be used to keep track of the parameters and globals that are used in messages.\"]},\"285\":{\"h\":\"Table of contents\"},\"286\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"287\":{\"h\":\"Properties\",\"t\":[\"globals\",\"parameters\"]},\"288\":{\"h\":\"Methods\",\"t\":[\"requireGlobal\",\"requireParameter\"]},\"289\":{\"h\":\"Constructors\"},\"290\":{\"h\":\"constructor\",\"t\":[\"• new CompilerContext()\"]},\"291\":{\"h\":\"Properties\"},\"292\":{\"h\":\"globals\",\"t\":[\"• globals: string[] = []\",\"A list of global variable / function names used in the message.\"]},\"293\":{\"h\":\"parameters\",\"t\":[\"• parameters: string[] = []\",\"A list of parameter names used in the message.\"]},\"294\":{\"h\":\"Methods\"},\"295\":{\"h\":\"requireGlobal\",\"t\":[\"▸ requireGlobal(name): CompilerContext\",\"Adds a global variable / function name to the list of referenced globals unless already present.\"]},\"296\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"name\",\"string\",\"The name of the global variable / function.\"]},\"297\":{\"h\":\"Returns\",\"t\":[\"CompilerContext\"]},\"298\":{\"h\":\"requireParameter\",\"t\":[\"▸ requireParameter(name): CompilerContext\",\"Adds a parameter name to the list of referenced parameters unless already present.\"]},\"299\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"name\",\"string\",\"The name of the parameter.\"]},\"300\":{\"h\":\"Returns\",\"t\":[\"CompilerContext\"]},\"301\":{\"h\":\"Class: CompilerToken\",\"t\":[\"An abstract class representing a single evaluable expression within translation messages.\"]},\"302\":{\"h\":\"Hierarchy\",\"t\":[\"CompilerToken\",\"↳ TextToken\",\"↳ LiteralToken\",\"↳ TernaryExpressionToken\",\"↳ ComparisonExpressionToken\",\"↳ CallExpressionToken\"]},\"303\":{\"h\":\"Table of contents\"},\"304\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"305\":{\"h\":\"Properties\",\"t\":[\"column\",\"line\",\"text\"]},\"306\":{\"h\":\"Methods\",\"t\":[\"compile\",\"compileWrap\"]},\"307\":{\"h\":\"Constructors\"},\"308\":{\"h\":\"constructor\",\"t\":[\"• Protectednew CompilerToken(text, location)\",\"Creates a new instance.\"]},\"309\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"text\",\"string\",\"The full text (content) of the expression.\",\"location\",\"LocationRange\",\"The location of the invocation within the source code.\"]},\"310\":{\"h\":\"Properties\"},\"311\":{\"h\":\"column\",\"t\":[\"• column: number\",\"The column number of the expression within the translation message.\"]},\"312\":{\"h\":\"line\",\"t\":[\"• line: number\",\"The line number of the expression within the translation message.\"]},\"313\":{\"h\":\"text\",\"t\":[\"• text: string\",\"The full text (content) of the expression.\"]},\"314\":{\"h\":\"Methods\"},\"315\":{\"h\":\"compile\",\"t\":[\"▸ Abstractcompile(context): string\",\"Compiles the expression into an executable ECMAScript6 string.\"]},\"316\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\"]},\"317\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"318\":{\"h\":\"compileWrap\",\"t\":[\"▸ ProtectedcompileWrap(context, instanceOfs): string\",\"Same as compile() except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.\"]},\"319\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\",\"instanceOfs\",\"Function[]\",\"The types to check for.\"]},\"320\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"321\":{\"h\":\"Class: Generator\",\"t\":[\"Default implementation of the GeneratorInterface.\"]},\"322\":{\"h\":\"Implements\",\"t\":[\"GeneratorInterface\"]},\"323\":{\"h\":\"Table of contents\"},\"324\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"325\":{\"h\":\"Methods\",\"t\":[\"getCompiledTranslationsDump\",\"getCompiledTranslationsDumpAsCJSExport\",\"getCompiledTranslationsDumpAsESMExport\",\"getMissingTranslationKeys\",\"getUnusedTranslationKeys\",\"parse\",\"removeTranslations\",\"setTranslations\"]},\"326\":{\"h\":\"Constructors\"},\"327\":{\"h\":\"constructor\",\"t\":[\"• new Generator(options?)\",\"Creates a new instance.\"]},\"328\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"options\",\"GeneratorOptions\",\"Customizes the generator.\"]},\"329\":{\"h\":\"Methods\"},\"330\":{\"h\":\"getCompiledTranslationsDump\",\"t\":[\"▸ getCompiledTranslationsDump(includeMeta?, deduplicate?): string\",\"Returns an ECMAScript6 code representation of the compiled translations.\",\"If deduplicationMap is provided, the resulting code will be compressed to use variables for repeating entries. In this case, the deduplicationMap will be populated with the corresponding repeating values.\"]},\"331\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"includeMeta?\",\"boolean\",\"Whether to include meta information about the position of extracted keys in the source code.\",\"deduplicate?\",\"string[]\",\"Optional hashmap to store deduplicated keys.\"]},\"332\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"333\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.getCompiledTranslationsDump\"]},\"334\":{\"h\":\"getCompiledTranslationsDumpAsCJSExport\",\"t\":[\"▸ getCompiledTranslationsDumpAsCJSExport(includeMeta?): string\",\"Returns an ECMAScript6 code representation of the compiled translations as CommonJS module.\"]},\"335\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"includeMeta?\",\"boolean\",\"Whether to include meta information about the position of extracted keys in the source code.\"]},\"336\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"337\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.getCompiledTranslationsDumpAsCJSExport\"]},\"338\":{\"h\":\"getCompiledTranslationsDumpAsESMExport\",\"t\":[\"▸ getCompiledTranslationsDumpAsESMExport(includeMeta?): string\",\"Returns an ECMAScript6 code representation of the compiled translations as ECMAScript6 module.\"]},\"339\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"includeMeta?\",\"boolean\",\"Whether to include meta information about the position of extracted keys in the source code.\"]},\"340\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"341\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.getCompiledTranslationsDumpAsESMExport\"]},\"342\":{\"h\":\"getMissingTranslationKeys\",\"t\":[\"▸ getMissingTranslationKeys(): Record<string, string[]>\",\"Returns a hashmap of locale keys and corresponding lists of missing translation keys. Those are keys that are extracted from source code, but not present in the translation catalog.\"]},\"343\":{\"h\":\"Returns\",\"t\":[\"Record<string, string[]>\"]},\"344\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.getMissingTranslationKeys\"]},\"345\":{\"h\":\"getUnusedTranslationKeys\",\"t\":[\"▸ getUnusedTranslationKeys(): Record<string, string[]>\",\"Returns a hashmap of locale keys and corresponding lists of unused translation keys. Those are keys that are present in the translation catalog, but not in the extracted source code.\"]},\"346\":{\"h\":\"Returns\",\"t\":[\"Record<string, string[]>\"]},\"347\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.getUnusedTranslationKeys\"]},\"348\":{\"h\":\"parse\",\"t\":[\"▸ parse(code, source?, accumulate?): Generator\",\"Parses the given source code extracting translation keys and saves them in the current context.\",\"By default, calling parse() multiple times for the same source will replace previously extracted keys. This is useful when you want to iteratively parse the same file as it changes for example. If you want to accumulate keys instead, for example when streaming source code, you can pass true as the third argument.\",\"Keep in mind that in this case the meta information about the position of extracted keys in the source code will be incorrect as it will be based on each call to parse(), rather an accumulated view of the source code.\",\"If source is not set, parse will accumulate keys regardless of the value of accumulate.\"]},\"349\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Default value\",\"Description\",\"code\",\"string\",\"undefined\",\"The source code to be parsed.\",\"source?\",\"string\",\"undefined\",\"Optional origin of the source code, usually a path to the source file.\",\"accumulate\",\"boolean\",\"false\",\"Whether to accumulate parsed keys with existing ones for the same source.\"]},\"350\":{\"h\":\"Returns\",\"t\":[\"Generator\"]},\"351\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.parse\"]},\"352\":{\"h\":\"removeTranslations\",\"t\":[\"▸ removeTranslations(locale): Generator\",\"Removes the current translation dictionary for the specified locale.\"]},\"353\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"locale\",\"string\",\"Target translation locale.\"]},\"354\":{\"h\":\"Returns\",\"t\":[\"Generator\"]},\"355\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.removeTranslations\"]},\"356\":{\"h\":\"setTranslations\",\"t\":[\"▸ setTranslations(locale, dictionary): Generator\",\"Adds or replaces the current translation dictionary for the specified locale.\"]},\"357\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"locale\",\"string\",\"Target translation locale.\",\"dictionary\",\"Dictionary\",\"Target translation dictionary.\"]},\"358\":{\"h\":\"Returns\",\"t\":[\"Generator\"]},\"359\":{\"h\":\"Implementation of\",\"t\":[\"GeneratorInterface.setTranslations\"]},\"360\":{\"h\":\"Class: LiteralToken\",\"t\":[\"Represents a literal (static value) expression, such as a string, number, or null.\",\"Example: \\\"foo\\\", 123, null.\"]},\"361\":{\"h\":\"Hierarchy\",\"t\":[\"CompilerToken\",\"↳ LiteralToken\"]},\"362\":{\"h\":\"Table of contents\"},\"363\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"364\":{\"h\":\"Properties\",\"t\":[\"column\",\"line\",\"text\",\"value\"]},\"365\":{\"h\":\"Methods\",\"t\":[\"compile\",\"compileWrap\"]},\"366\":{\"h\":\"Constructors\"},\"367\":{\"h\":\"constructor\",\"t\":[\"• new LiteralToken(value, text, location)\",\"Creates a new instance.\"]},\"368\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"value\",\"string | number | boolean\",\"The value of the literal.\",\"text\",\"string\",\"The full text (content) of the expression.\",\"location\",\"LocationRange\",\"The location of the invocation within the source code.\"]},\"369\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.constructor\"]},\"370\":{\"h\":\"Properties\"},\"371\":{\"h\":\"column\",\"t\":[\"• column: number\",\"The column number of the expression within the translation message.\"]},\"372\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.column\"]},\"373\":{\"h\":\"line\",\"t\":[\"• line: number\",\"The line number of the expression within the translation message.\"]},\"374\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.line\"]},\"375\":{\"h\":\"text\",\"t\":[\"• text: string\",\"The full text (content) of the expression.\"]},\"376\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.text\"]},\"377\":{\"h\":\"value\",\"t\":[\"• Readonlyvalue: string | number | boolean\"]},\"378\":{\"h\":\"Methods\"},\"379\":{\"h\":\"compile\",\"t\":[\"▸ compile(context): string\",\"Compiles the expression into an executable ECMAScript6 string.\"]},\"380\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\"]},\"381\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"382\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.compile\"]},\"383\":{\"h\":\"compileWrap\",\"t\":[\"▸ ProtectedcompileWrap(context, instanceOfs): string\",\"Same as compile() except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.\"]},\"384\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\",\"instanceOfs\",\"Function[]\",\"The types to check for.\"]},\"385\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"386\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.compileWrap\"]},\"387\":{\"h\":\"Class: Logger\",\"t\":[\"Default implementation of the LoggerInterface. Logs all messages to the console.\"]},\"388\":{\"h\":\"Implements\",\"t\":[\"LoggerInterface\"]},\"389\":{\"h\":\"Table of contents\"},\"390\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"391\":{\"h\":\"Methods\",\"t\":[\"log\",\"verbose\"]},\"392\":{\"h\":\"Constructors\"},\"393\":{\"h\":\"constructor\",\"t\":[\"• new Logger(options?)\",\"Creates a new instance.\"]},\"394\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"options\",\"LoggerOptions\",\"Customizes the logger.\"]},\"395\":{\"h\":\"Methods\"},\"396\":{\"h\":\"log\",\"t\":[\"▸ log(...args): void\",\"Logs a message unless isSilent is true.\"]},\"397\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"...args\",\"any[]\",\"A list of arguments to log. These can be of any type that the underlying implementation (e.g. console.log ) can handle.\"]},\"398\":{\"h\":\"Returns\",\"t\":[\"void\"]},\"399\":{\"h\":\"Implementation of\",\"t\":[\"LoggerInterface.log\"]},\"400\":{\"h\":\"verbose\",\"t\":[\"▸ verbose(...args): void\",\"Logs a verbose message unless isSilent is true or isVerbose is false.\"]},\"401\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"...args\",\"any[]\",\"A list of arguments to log. These can be of any type that the underlying implementation (e.g. console.log ) can handle.\"]},\"402\":{\"h\":\"Returns\",\"t\":[\"void\"]},\"403\":{\"h\":\"Implementation of\",\"t\":[\"LoggerInterface.verbose\"]},\"404\":{\"h\":\"Class: TernaryExpressionToken\",\"t\":[\"Represents a ternary expression that returns the result of the truthy expression if the test expression returns a truthy value, or the result of the falsy expression otherwise.\",\"Examples: a ? b : c( 0 < 1 ) ? b : c\"]},\"405\":{\"h\":\"Hierarchy\",\"t\":[\"CompilerToken\",\"↳ TernaryExpressionToken\"]},\"406\":{\"h\":\"Table of contents\"},\"407\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"408\":{\"h\":\"Properties\",\"t\":[\"column\",\"falsy\",\"line\",\"test\",\"text\",\"truthy\"]},\"409\":{\"h\":\"Methods\",\"t\":[\"compile\",\"compileWrap\"]},\"410\":{\"h\":\"Constructors\"},\"411\":{\"h\":\"constructor\",\"t\":[\"• new TernaryExpressionToken(test, truthy, falsy, text, location)\",\"Creates a new instance.\"]},\"412\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"test\",\"CompilerToken\",\"The test expression.\",\"truthy\",\"CompilerToken\",\"The truthy expression.\",\"falsy\",\"CompilerToken\",\"The falsy expression.\",\"text\",\"string\",\"The full text (content) of the expression.\",\"location\",\"LocationRange\",\"The location of the invocation within the source code.\"]},\"413\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.constructor\"]},\"414\":{\"h\":\"Properties\"},\"415\":{\"h\":\"column\",\"t\":[\"• column: number\",\"The column number of the expression within the translation message.\"]},\"416\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.column\"]},\"417\":{\"h\":\"falsy\",\"t\":[\"• Readonlyfalsy: CompilerToken\"]},\"418\":{\"h\":\"line\",\"t\":[\"• line: number\",\"The line number of the expression within the translation message.\"]},\"419\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.line\"]},\"420\":{\"h\":\"test\",\"t\":[\"• Readonlytest: CompilerToken\"]},\"421\":{\"h\":\"text\",\"t\":[\"• text: string\",\"The full text (content) of the expression.\"]},\"422\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.text\"]},\"423\":{\"h\":\"truthy\",\"t\":[\"• Readonlytruthy: CompilerToken\"]},\"424\":{\"h\":\"Methods\"},\"425\":{\"h\":\"compile\",\"t\":[\"▸ compile(context): string\",\"Compiles the expression into an executable ECMAScript6 string.\"]},\"426\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\"]},\"427\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"428\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.compile\"]},\"429\":{\"h\":\"compileWrap\",\"t\":[\"▸ ProtectedcompileWrap(context, instanceOfs): string\",\"Same as compile() except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.\"]},\"430\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\",\"instanceOfs\",\"Function[]\",\"The types to check for.\"]},\"431\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"432\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.compileWrap\"]},\"433\":{\"h\":\"Class: TextToken\",\"t\":[\"Represents a text token, i.e. any text that is not an evaluable expression (anything outside curly brackets).\",\"Example: Hello world!\"]},\"434\":{\"h\":\"Hierarchy\",\"t\":[\"CompilerToken\",\"↳ TextToken\"]},\"435\":{\"h\":\"Table of contents\"},\"436\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"437\":{\"h\":\"Properties\",\"t\":[\"column\",\"line\",\"text\"]},\"438\":{\"h\":\"Methods\",\"t\":[\"compile\",\"compileWrap\"]},\"439\":{\"h\":\"Constructors\"},\"440\":{\"h\":\"constructor\",\"t\":[\"• new TextToken(text, location)\"]},\"441\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"text\",\"string\",\"location\",\"LocationRange\",\"Inherit Doc\"]},\"442\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.constructor\"]},\"443\":{\"h\":\"Properties\"},\"444\":{\"h\":\"column\",\"t\":[\"• column: number\",\"The column number of the expression within the translation message.\"]},\"445\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.column\"]},\"446\":{\"h\":\"line\",\"t\":[\"• line: number\",\"The line number of the expression within the translation message.\"]},\"447\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.line\"]},\"448\":{\"h\":\"text\",\"t\":[\"• text: string\",\"The full text (content) of the expression.\"]},\"449\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.text\"]},\"450\":{\"h\":\"Methods\"},\"451\":{\"h\":\"compile\",\"t\":[\"▸ compile(context): string\",\"Compiles the expression into an executable ECMAScript6 string.\"]},\"452\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\"]},\"453\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"454\":{\"h\":\"Overrides\",\"t\":[\"CompilerToken.compile\"]},\"455\":{\"h\":\"compileWrap\",\"t\":[\"▸ ProtectedcompileWrap(context, instanceOfs): string\",\"Same as compile() except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.\"]},\"456\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"context\",\"CompilerContext\",\"The context to use for compiling the expression.\",\"instanceOfs\",\"Function[]\",\"The types to check for.\"]},\"457\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"458\":{\"h\":\"Inherited from\",\"t\":[\"CompilerToken.compileWrap\"]},\"459\":{\"h\":\"Class: Translator\",\"t\":[\"Default implementation of the TranslatorInterface.\"]},\"460\":{\"h\":\"Implements\",\"t\":[\"TranslatorInterface\"]},\"461\":{\"h\":\"Table of contents\"},\"462\":{\"h\":\"Constructors\",\"t\":[\"constructor\"]},\"463\":{\"h\":\"Methods\",\"t\":[\"translate\"]},\"464\":{\"h\":\"Constructors\"},\"465\":{\"h\":\"constructor\",\"t\":[\"• new Translator(options?)\",\"Creates a new instance.\"]},\"466\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"options\",\"TranslatorOptions\",\"Customizes the translator.\"]},\"467\":{\"h\":\"Methods\"},\"468\":{\"h\":\"translate\",\"t\":[\"▸ translate(key, context?): string\",\"Translates the specified key based on the specified translation context & configured translator options.\",\"If no locale is specified in the translation context, or if the specified locale does not exist in the configured translation catalog, the configured fallback locale will be used instead.\",\"If no fallback locale is specified either, or if the fallback locale does not exist in the configured translation catalog, the key will be returned as-is.\",\"If the specified key does not exist in the configured translation catalog for the specified locale, it will be retrieved using the fallback locale instead, and if that fails too, the key will be returned as-is.\"]},\"469\":{\"h\":\"Parameters\",\"t\":[\"Name\",\"Type\",\"Description\",\"key\",\"string\",\"The key to translate.\",\"context\",\"Context\",\"Optional translation context.\"]},\"470\":{\"h\":\"Returns\",\"t\":[\"string\"]},\"471\":{\"h\":\"Implementation of\",\"t\":[\"TranslatorInterface.translate\"]},\"472\":{\"h\":\"Usage\"},\"473\":{\"h\":\"Interfaces\"},\"474\":{\"h\":\"Classes\"}},\"dirtCount\":0,\"index\":[[\"↳\",{\"1\":{\"210\":1,\"239\":1,\"302\":5,\"361\":1,\"405\":1,\"434\":1}}],[\"3\",{\"1\":{\"209\":2}}],[\"9\",{\"1\":{\"80\":1}}],[\"z\",{\"1\":{\"80\":2}}],[\"zero\",{\"1\":{\"2\":1,\"71\":1,\"74\":1}}],[\"4\",{\"1\":{\"77\":1,\"79\":1}}],[\"45\",{\"1\":{\"72\":1,\"77\":1,\"79\":1}}],[\"2e\",{\"1\":{\"77\":1,\"79\":1}}],[\"23\",{\"1\":{\"77\":2,\"79\":2}}],[\"2\",{\"1\":{\"66\":2,\"69\":2,\"72\":1,\"209\":2}}],[\"<=\",{\"1\":{\"81\":1,\"238\":1}}],[\"<\",{\"1\":{\"63\":2,\"66\":2,\"69\":2,\"81\":1,\"238\":1,\"404\":1}}],[\"<source\",{\"1\":{\"46\":2,\"50\":2}}],[\"1e+3\",{\"1\":{\"77\":1,\"79\":1}}],[\"1e3\",{\"1\":{\"77\":1,\"79\":1}}],[\"12\",{\"1\":{\"72\":2}}],[\"123\",{\"1\":{\"72\":3,\"77\":2,\"79\":2,\"360\":1}}],[\"1\",{\"1\":{\"63\":3,\"66\":2,\"69\":2,\"72\":1,\"77\":2,\"79\":2,\"80\":1,\"209\":2,\"404\":1}}],[\"0\",{\"1\":{\"63\":2,\"72\":1,\"80\":1,\"209\":8,\"404\":1}}],[\"quote\",{\"1\":{\"79\":1}}],[\"quotes\",{\"1\":{\"47\":1,\"79\":3}}],[\"quickly\",{\"1\":{\"1\":1}}],[\"▸\",{\"1\":{\"35\":1,\"95\":1,\"103\":1,\"106\":1,\"114\":1,\"117\":1,\"120\":1,\"123\":1,\"125\":1,\"127\":1,\"130\":1,\"133\":1,\"141\":1,\"144\":1,\"152\":1,\"164\":1,\"230\":1,\"234\":1,\"259\":1,\"263\":1,\"276\":1,\"280\":1,\"295\":1,\"298\":1,\"315\":1,\"318\":1,\"330\":1,\"334\":1,\"338\":1,\"342\":1,\"345\":1,\"348\":1,\"352\":1,\"356\":1,\"379\":1,\"383\":1,\"396\":1,\"400\":1,\"425\":1,\"429\":1,\"451\":1,\"455\":1,\"468\":1}}],[\"|\",{\"1\":{\"23\":1,\"217\":2,\"226\":2,\"368\":2,\"377\":2}}],[\"given\",{\"1\":{\"95\":1,\"103\":1,\"106\":1,\"127\":1,\"164\":1,\"276\":1,\"280\":1,\"348\":1}}],[\"going\",{\"1\":{\"85\":1}}],[\"greater\",{\"1\":{\"81\":2}}],[\"greet\",{\"1\":{\"45\":2}}],[\"globallocal\",{\"1\":{\"209\":1}}],[\"global\",{\"0\":{\"222\":1},\"1\":{\"70\":1,\"72\":2,\"85\":2,\"87\":1,\"209\":6,\"213\":1,\"216\":1,\"217\":2,\"292\":1,\"295\":1,\"296\":1}}],[\"globals\",{\"0\":{\"87\":1,\"292\":1},\"1\":{\"23\":1,\"27\":2,\"28\":1,\"80\":1,\"85\":3,\"87\":1,\"88\":4,\"89\":2,\"284\":1,\"287\":1,\"292\":1,\"295\":1}}],[\"g\",{\"1\":{\"40\":1,\"85\":1,\"142\":1,\"145\":1,\"174\":3,\"177\":1,\"179\":1,\"181\":1,\"397\":1,\"401\":1}}],[\"generates\",{\"1\":{\"88\":1}}],[\"generated\",{\"1\":{\"50\":1}}],[\"generatoroptions\",{\"0\":{\"31\":1},\"1\":{\"16\":1,\"31\":1,\"328\":1}}],[\"generatorinterface\",{\"0\":{\"109\":1},\"1\":{\"15\":1,\"127\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"135\":1,\"321\":1,\"322\":1,\"333\":1,\"337\":1,\"341\":1,\"344\":1,\"347\":1,\"351\":1,\"355\":1,\"359\":1}}],[\"generator\",{\"0\":{\"321\":1},\"1\":{\"1\":5,\"14\":1,\"31\":1,\"32\":1,\"46\":7,\"50\":7,\"109\":1,\"110\":1,\"327\":1,\"328\":1,\"348\":1,\"350\":1,\"352\":1,\"354\":1,\"356\":1,\"358\":1}}],[\"generic\",{\"1\":{\"47\":1}}],[\"getunusedtranslationkeys\",{\"0\":{\"125\":1,\"345\":1},\"1\":{\"46\":1,\"112\":1,\"125\":1,\"325\":1,\"345\":1,\"347\":1}}],[\"getmissingtranslationkeys\",{\"0\":{\"123\":1,\"342\":1},\"1\":{\"46\":1,\"112\":1,\"123\":1,\"325\":1,\"342\":1,\"344\":1}}],[\"getcompiledtranslationsdumpascjsexport\",{\"0\":{\"117\":1,\"334\":1},\"1\":{\"50\":1,\"112\":1,\"117\":1,\"325\":1,\"334\":1,\"337\":1}}],[\"getcompiledtranslationsdumpasesmexport\",{\"0\":{\"120\":1,\"338\":1},\"1\":{\"50\":2,\"112\":1,\"120\":1,\"325\":1,\"338\":1,\"341\":1}}],[\"getcompiledtranslationsdump\",{\"0\":{\"114\":1,\"330\":1},\"1\":{\"1\":1,\"50\":1,\"112\":1,\"114\":1,\"325\":1,\"330\":1,\"333\":1}}],[\"get\",{\"1\":{\"1\":2}}],[\"ƭ\",{\"1\":{\"18\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"26\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"33\":1,\"34\":1,\"38\":1,\"39\":1,\"41\":1,\"43\":1}}],[\"rather\",{\"1\":{\"127\":1,\"348\":1}}],[\"right\",{\"0\":{\"255\":1},\"1\":{\"81\":4,\"242\":1,\"245\":1,\"246\":2}}],[\"rules\",{\"1\":{\"53\":1,\"56\":1}}],[\"runtime\",{\"1\":{\"11\":1,\"26\":1,\"49\":1,\"53\":1,\"86\":1}}],[\"retrieved\",{\"1\":{\"152\":1,\"468\":1}}],[\"returned\",{\"1\":{\"152\":2,\"468\":2}}],[\"returns\",{\"0\":{\"37\":1,\"97\":1,\"105\":1,\"108\":1,\"116\":1,\"119\":1,\"122\":1,\"124\":1,\"126\":1,\"129\":1,\"132\":1,\"135\":1,\"143\":1,\"146\":1,\"154\":1,\"166\":1,\"232\":1,\"236\":1,\"261\":1,\"265\":1,\"278\":1,\"282\":1,\"297\":1,\"300\":1,\"317\":1,\"320\":1,\"332\":1,\"336\":1,\"340\":1,\"343\":1,\"346\":1,\"350\":1,\"354\":1,\"358\":1,\"381\":1,\"385\":1,\"398\":1,\"402\":1,\"427\":1,\"431\":1,\"453\":1,\"457\":1,\"470\":1},\"1\":{\"95\":1,\"114\":1,\"117\":1,\"120\":1,\"123\":1,\"125\":1,\"164\":1,\"330\":1,\"334\":1,\"338\":1,\"342\":1,\"345\":1,\"404\":2}}],[\"return\",{\"1\":{\"1\":1,\"64\":1,\"85\":1}}],[\"regular\",{\"1\":{\"87\":1}}],[\"regardless\",{\"1\":{\"51\":1,\"127\":1,\"348\":1}}],[\"real\",{\"1\":{\"86\":1}}],[\"readonlyfalsy\",{\"1\":{\"417\":1}}],[\"readonlyvalue\",{\"1\":{\"377\":1}}],[\"readonlyright\",{\"1\":{\"255\":1}}],[\"readonlyoperator\",{\"1\":{\"254\":1}}],[\"readonlyleft\",{\"1\":{\"251\":1}}],[\"readonlyline\",{\"1\":{\"178\":1}}],[\"readonlytruthy\",{\"1\":{\"423\":1}}],[\"readonlytest\",{\"1\":{\"420\":1}}],[\"readonlytext\",{\"1\":{\"181\":1}}],[\"readonlytail\",{\"1\":{\"226\":1}}],[\"readonlyglobal\",{\"1\":{\"222\":1}}],[\"readonlyexprs\",{\"1\":{\"199\":1}}],[\"readonlyexpr\",{\"1\":{\"190\":1}}],[\"readonlyname\",{\"1\":{\"179\":1,\"208\":1,\"225\":1}}],[\"readonlykey\",{\"1\":{\"177\":1}}],[\"readonlycolumn\",{\"1\":{\"176\":1}}],[\"readable\",{\"1\":{\"49\":1}}],[\"ready\",{\"1\":{\"10\":1}}],[\"read\",{\"1\":{\"1\":1}}],[\"requireparameter\",{\"0\":{\"298\":1},\"1\":{\"288\":1,\"298\":1}}],[\"requireglobal\",{\"0\":{\"295\":1},\"1\":{\"288\":1,\"295\":1}}],[\"require\",{\"1\":{\"52\":1}}],[\"required\",{\"1\":{\"1\":1}}],[\"reserved\",{\"0\":{\"82\":1},\"1\":{\"80\":1,\"82\":1}}],[\"resulting\",{\"1\":{\"114\":1,\"330\":1}}],[\"result\",{\"1\":{\"53\":1,\"64\":1,\"404\":2}}],[\"rest\",{\"1\":{\"53\":1}}],[\"resolved\",{\"1\":{\"52\":1}}],[\"resolving\",{\"1\":{\"50\":1}}],[\"responsibility\",{\"1\":{\"1\":1}}],[\"re\",{\"1\":{\"49\":1}}],[\"removes\",{\"1\":{\"130\":1,\"352\":1}}],[\"removetranslations\",{\"0\":{\"130\":1,\"352\":1},\"1\":{\"112\":1,\"130\":1,\"325\":1,\"352\":1,\"355\":1}}],[\"removed\",{\"1\":{\"46\":1,\"51\":1}}],[\"remains\",{\"1\":{\"1\":1}}],[\"repeating\",{\"1\":{\"114\":2,\"330\":2}}],[\"represent\",{\"1\":{\"284\":1}}],[\"represented\",{\"1\":{\"209\":1}}],[\"representation\",{\"1\":{\"114\":1,\"117\":1,\"120\":1,\"330\":1,\"334\":1,\"338\":1}}],[\"represents\",{\"1\":{\"75\":1,\"182\":1,\"191\":1,\"200\":1,\"209\":1,\"238\":1,\"360\":1,\"404\":1,\"433\":1}}],[\"representing\",{\"1\":{\"38\":1,\"168\":1,\"301\":1}}],[\"replaces\",{\"1\":{\"133\":1,\"356\":1}}],[\"replace\",{\"1\":{\"127\":1,\"348\":1}}],[\"replaced\",{\"1\":{\"53\":1}}],[\"replacing\",{\"1\":{\"50\":1}}],[\"report\",{\"1\":{\"9\":1}}],[\"record<string\",{\"1\":{\"28\":1,\"29\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"342\":1,\"343\":1,\"345\":1,\"346\":1}}],[\"record<key\",{\"1\":{\"22\":1,\"30\":1}}],[\"record<locale\",{\"1\":{\"20\":1,\"21\":1}}],[\"recognize\",{\"1\":{\"7\":1}}],[\"referenced\",{\"1\":{\"88\":2,\"295\":1,\"298\":1}}],[\"reference\",{\"0\":{\"12\":1},\"1\":{\"72\":1,\"89\":1}}],[\"update\",{\"1\":{\"51\":1}}],[\"up\",{\"1\":{\"46\":1,\"50\":1,\"85\":1}}],[\"unless\",{\"1\":{\"141\":1,\"144\":1,\"295\":1,\"298\":1,\"396\":1,\"400\":1}}],[\"underlying\",{\"1\":{\"142\":1,\"145\":1,\"397\":1,\"401\":1}}],[\"underscores\",{\"1\":{\"80\":1}}],[\"understand\",{\"1\":{\"47\":1}}],[\"under\",{\"1\":{\"49\":1}}],[\"undefined\",{\"1\":{\"42\":1,\"349\":2}}],[\"unused\",{\"1\":{\"46\":3,\"49\":2,\"50\":1,\"125\":1,\"345\":1}}],[\"unique\",{\"1\":{\"38\":1}}],[\"untranslated\",{\"1\":{\"9\":1}}],[\"usage\",{\"0\":{\"472\":1}}],[\"usually\",{\"1\":{\"80\":1,\"96\":1,\"128\":1,\"165\":1,\"174\":1,\"180\":1,\"349\":1}}],[\"us\",{\"1\":{\"20\":1,\"38\":1}}],[\"useful\",{\"1\":{\"44\":1,\"51\":1,\"127\":1,\"348\":1}}],[\"uses\",{\"1\":{\"1\":2,\"8\":1,\"11\":1}}],[\"used\",{\"1\":{\"1\":4,\"6\":1,\"10\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"33\":1,\"46\":1,\"58\":1,\"61\":1,\"64\":1,\"67\":1,\"70\":1,\"72\":1,\"73\":1,\"80\":1,\"81\":1,\"82\":1,\"84\":1,\"152\":1,\"188\":1,\"197\":1,\"199\":1,\"284\":2,\"292\":1,\"293\":1,\"468\":1}}],[\"use\",{\"1\":{\"1\":6,\"46\":2,\"49\":1,\"50\":1,\"52\":2,\"84\":1,\"85\":1,\"114\":1,\"231\":1,\"235\":1,\"260\":1,\"264\":1,\"316\":1,\"319\":1,\"330\":1,\"380\":1,\"384\":1,\"426\":1,\"430\":1,\"452\":1,\"456\":1}}],[\"using\",{\"1\":{\"1\":1,\"3\":1,\"4\":1,\"52\":4,\"67\":1,\"79\":1,\"85\":1,\"152\":1,\"468\":1}}],[\"just\",{\"1\":{\"85\":1}}],[\"john\",{\"1\":{\"45\":1,\"86\":2,\"87\":2,\"89\":1}}],[\"javascript\",{\"1\":{\"5\":1,\"6\":1,\"8\":1,\"10\":1,\"49\":1,\"84\":1}}],[\"jsx\",{\"1\":{\"7\":1}}],[\"js\",{\"1\":{\"1\":5,\"7\":1,\"46\":2,\"50\":3,\"84\":1}}],[\"yes\",{\"1\":{\"60\":1,\"66\":2}}],[\"yarn\",{\"0\":{\"4\":1},\"1\":{\"4\":2}}],[\"your\",{\"1\":{\"1\":3,\"9\":1,\"10\":1,\"44\":1,\"45\":1,\"46\":3,\"47\":1,\"49\":3,\"50\":3,\"53\":2,\"84\":2,\"85\":2,\"86\":1,\"87\":1,\"88\":1}}],[\"you\",{\"1\":{\"1\":9,\"20\":1,\"30\":1,\"43\":1,\"44\":1,\"45\":6,\"46\":5,\"49\":3,\"51\":2,\"52\":7,\"53\":1,\"56\":1,\"79\":1,\"84\":1,\"85\":4,\"86\":1,\"87\":3,\"88\":3,\"127\":3,\"348\":3}}],[\">=\",{\"1\":{\"81\":1,\"238\":1}}],[\">\",{\"1\":{\"1\":1,\"46\":2,\"81\":1,\"86\":1,\"87\":1,\"89\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"238\":1,\"342\":1,\"343\":1,\"345\":1,\"346\":1}}],[\"``\",{\"1\":{\"79\":1}}],[\"`string\",{\"1\":{\"79\":1}}],[\"`string`\",{\"1\":{\"77\":1,\"79\":1}}],[\"`this\",{\"1\":{\"79\":1}}],[\"`hallo`\",{\"1\":{\"50\":1}}],[\"`hello\",{\"1\":{\"50\":1}}],[\"`unused`\",{\"1\":{\"50\":1}}],[\"`\",{\"1\":{\"1\":1,\"45\":1,\"47\":2,\"50\":1,\"79\":1}}],[\"`$\",{\"1\":{\"1\":1,\"45\":1}}],[\"$foo\",{\"1\":{\"72\":1}}],[\"$options\",{\"1\":{\"1\":1}}],[\"$t\",{\"1\":{\"1\":4,\"19\":1,\"45\":2,\"47\":1,\"85\":6,\"86\":1,\"87\":1,\"174\":2,\"179\":1,\"181\":1}}],[\"$\",{\"1\":{\"1\":1,\"45\":1,\"50\":2,\"80\":1}}],[\"number\",{\"1\":{\"79\":2,\"80\":1,\"176\":2,\"178\":2,\"220\":2,\"223\":2,\"249\":2,\"252\":2,\"311\":2,\"312\":2,\"360\":1,\"368\":1,\"371\":2,\"373\":2,\"377\":1,\"415\":2,\"418\":2,\"444\":2,\"446\":2}}],[\"numbers\",{\"1\":{\"79\":1,\"80\":1}}],[\"null\",{\"1\":{\"72\":1,\"77\":2,\"79\":4,\"82\":2,\"360\":2}}],[\"non\",{\"1\":{\"88\":1}}],[\"now\",{\"1\":{\"50\":1,\"84\":1}}],[\"node\",{\"1\":{\"50\":1}}],[\"nor\",{\"1\":{\"47\":1}}],[\"no\",{\"1\":{\"46\":1,\"53\":1,\"60\":1,\"66\":2,\"152\":2,\"468\":2}}],[\"note\",{\"1\":{\"51\":1,\"52\":1}}],[\"not\",{\"1\":{\"27\":1,\"47\":1,\"49\":1,\"81\":2,\"89\":3,\"123\":1,\"125\":1,\"127\":1,\"152\":3,\"342\":1,\"345\":1,\"348\":1,\"433\":1,\"468\":3}}],[\"need\",{\"1\":{\"45\":1,\"46\":1,\"51\":1,\"52\":1}}],[\"new\",{\"1\":{\"1\":2,\"19\":1,\"25\":1,\"32\":3,\"42\":1,\"46\":1,\"50\":1,\"51\":1,\"84\":2,\"161\":2,\"173\":2,\"187\":2,\"196\":2,\"205\":2,\"216\":2,\"245\":2,\"273\":2,\"290\":1,\"308\":1,\"327\":2,\"367\":2,\"393\":2,\"411\":2,\"440\":1,\"465\":2}}],[\"nice\",{\"1\":{\"20\":1,\"30\":1,\"43\":1,\"45\":2,\"46\":3}}],[\"npm\",{\"0\":{\"3\":1},\"1\":{\"3\":2}}],[\"npmjs\",{\"1\":{\"2\":1}}],[\"name\",{\"0\":{\"179\":1,\"208\":1,\"225\":1},\"1\":{\"1\":5,\"19\":1,\"25\":1,\"27\":1,\"32\":1,\"36\":1,\"40\":1,\"42\":1,\"49\":1,\"50\":2,\"52\":1,\"53\":3,\"86\":2,\"87\":2,\"89\":6,\"96\":1,\"104\":1,\"107\":1,\"115\":1,\"118\":1,\"121\":1,\"128\":1,\"131\":1,\"134\":1,\"142\":1,\"145\":1,\"153\":1,\"162\":1,\"165\":1,\"171\":1,\"173\":1,\"174\":3,\"179\":1,\"188\":1,\"197\":1,\"203\":1,\"205\":1,\"206\":3,\"213\":1,\"216\":1,\"217\":3,\"231\":1,\"235\":1,\"246\":1,\"260\":1,\"264\":1,\"274\":1,\"277\":1,\"281\":1,\"295\":2,\"296\":3,\"298\":2,\"299\":3,\"309\":1,\"316\":1,\"319\":1,\"328\":1,\"331\":1,\"335\":1,\"339\":1,\"349\":1,\"353\":1,\"357\":1,\"368\":1,\"380\":1,\"384\":1,\"394\":1,\"397\":1,\"401\":1,\"412\":1,\"426\":1,\"430\":1,\"441\":1,\"452\":1,\"456\":1,\"466\":1,\"469\":1}}],[\"namespace\",{\"1\":{\"19\":1,\"25\":1,\"32\":1,\"40\":2,\"42\":1}}],[\"names\",{\"1\":{\"1\":2,\"19\":2,\"80\":1,\"292\":1,\"293\":1}}],[\"naming\",{\"1\":{\"1\":1}}],[\"==\",{\"1\":{\"66\":1,\"69\":1,\"81\":2,\"238\":2}}],[\"===\",{\"1\":{\"63\":1,\"81\":1,\"238\":1}}],[\"=>\",{\"1\":{\"1\":2,\"19\":1,\"23\":1,\"34\":1,\"50\":3}}],[\"=\",{\"1\":{\"1\":1,\"45\":2,\"46\":1,\"49\":1,\"50\":1,\"81\":1,\"84\":2,\"85\":2,\"87\":1,\"238\":1,\"292\":1,\"293\":1}}],[\"void\",{\"1\":{\"141\":1,\"143\":1,\"144\":1,\"146\":1,\"396\":1,\"398\":1,\"400\":1,\"402\":1}}],[\"view\",{\"1\":{\"127\":1,\"348\":1}}],[\"virtually\",{\"1\":{\"6\":1,\"88\":1}}],[\"variable\",{\"1\":{\"217\":1,\"292\":1,\"295\":1,\"296\":1}}],[\"variables\",{\"1\":{\"114\":1,\"330\":1}}],[\"valid\",{\"1\":{\"53\":1}}],[\"values\",{\"1\":{\"50\":1,\"64\":1,\"67\":1,\"73\":1,\"79\":1,\"81\":5,\"86\":2,\"114\":1,\"330\":1}}],[\"value>\",{\"1\":{\"30\":1}}],[\"value\",{\"0\":{\"43\":1,\"377\":1},\"1\":{\"16\":1,\"23\":1,\"30\":1,\"43\":2,\"51\":2,\"53\":1,\"56\":1,\"70\":1,\"72\":8,\"75\":1,\"81\":8,\"103\":1,\"104\":1,\"106\":1,\"107\":1,\"127\":1,\"276\":1,\"277\":1,\"280\":1,\"281\":1,\"348\":1,\"349\":1,\"360\":1,\"364\":1,\"367\":1,\"368\":2,\"404\":1}}],[\"ve\",{\"1\":{\"84\":1}}],[\"verbose\",{\"0\":{\"144\":1,\"400\":1},\"1\":{\"40\":2,\"139\":1,\"144\":2,\"391\":1,\"400\":2,\"403\":1}}],[\"version\",{\"1\":{\"21\":1,\"22\":1,\"23\":1,\"49\":1,\"50\":1}}],[\"versions\",{\"1\":{\"8\":1}}],[\"very\",{\"1\":{\"1\":2}}],[\"vue\",{\"1\":{\"1\":2,\"7\":1}}],[\"known\",{\"1\":{\"86\":1}}],[\"keep\",{\"1\":{\"51\":1,\"127\":1,\"284\":1,\"348\":1}}],[\"keeping\",{\"1\":{\"45\":1}}],[\"keyed\",{\"1\":{\"20\":1}}],[\"keyformatter\",{\"0\":{\"34\":1},\"1\":{\"1\":3,\"16\":1,\"19\":2,\"34\":1}}],[\"keys\",{\"1\":{\"1\":5,\"7\":1,\"9\":1,\"11\":1,\"47\":1,\"51\":3,\"85\":1,\"115\":2,\"118\":1,\"121\":1,\"123\":3,\"125\":3,\"127\":5,\"128\":1,\"331\":2,\"335\":1,\"339\":1,\"342\":3,\"345\":3,\"348\":5,\"349\":1}}],[\"key\",{\"0\":{\"1\":1,\"33\":1,\"177\":1},\"1\":{\"1\":15,\"16\":1,\"19\":3,\"20\":1,\"30\":2,\"33\":3,\"34\":2,\"35\":2,\"36\":2,\"43\":1,\"50\":2,\"85\":3,\"152\":5,\"153\":2,\"171\":1,\"173\":1,\"174\":2,\"177\":1,\"468\":5,\"469\":2}}],[\"kind\",{\"1\":{\"1\":1,\"47\":1}}],[\"hierarchy\",{\"0\":{\"210\":1,\"239\":1,\"302\":1,\"361\":1,\"405\":1,\"434\":1}}],[\"highly\",{\"1\":{\"10\":2}}],[\"hundred\",{\"1\":{\"45\":1}}],[\"handle\",{\"1\":{\"142\":1,\"145\":1,\"397\":1,\"401\":1}}],[\"hand\",{\"1\":{\"51\":1,\"246\":2}}],[\"hallo\",{\"1\":{\"46\":1,\"49\":1}}],[\"had\",{\"1\":{\"45\":1}}],[\"have\",{\"1\":{\"45\":1}}],[\"hashmap\",{\"1\":{\"27\":2,\"28\":1,\"29\":1,\"30\":1,\"115\":1,\"123\":1,\"125\":1,\"331\":1,\"342\":1,\"345\":1}}],[\"hard\",{\"1\":{\"1\":1}}],[\"hold\",{\"1\":{\"284\":1}}],[\"how\",{\"1\":{\"85\":1}}],[\"however\",{\"1\":{\"1\":1,\"85\":1}}],[\"hood\",{\"1\":{\"49\":1}}],[\"hosted\",{\"1\":{\"2\":1}}],[\"hello\",{\"1\":{\"1\":7,\"20\":1,\"30\":1,\"43\":1,\"45\":4,\"46\":2,\"49\":2,\"50\":1,\"53\":2,\"85\":3,\"86\":4,\"87\":4,\"89\":3,\"174\":2,\"177\":1,\"181\":1,\"433\":1}}],[\"help\",{\"1\":{\"1\":1}}],[\"here\",{\"1\":{\"1\":1,\"45\":1,\"49\":1,\"53\":1}}],[\"less\",{\"1\":{\"81\":2}}],[\"left\",{\"0\":{\"251\":1},\"1\":{\"81\":4,\"242\":1,\"245\":1,\"246\":2}}],[\"letters\",{\"1\":{\"80\":1}}],[\"least\",{\"1\":{\"47\":1,\"80\":1}}],[\"latin\",{\"1\":{\"80\":1}}],[\"language\",{\"1\":{\"11\":1,\"38\":1,\"47\":1}}],[\"locationrange\",{\"1\":{\"174\":1,\"217\":1,\"246\":1,\"309\":1,\"368\":1,\"412\":1,\"441\":1}}],[\"location\",{\"1\":{\"173\":1,\"174\":2,\"216\":1,\"217\":2,\"245\":1,\"246\":2,\"308\":1,\"309\":2,\"367\":1,\"368\":2,\"411\":1,\"412\":2,\"440\":1,\"441\":1}}],[\"local\",{\"1\":{\"209\":4}}],[\"locale\",{\"0\":{\"38\":1},\"1\":{\"16\":1,\"20\":1,\"27\":4,\"38\":2,\"42\":2,\"84\":1,\"85\":4,\"123\":1,\"125\":1,\"130\":2,\"131\":2,\"133\":2,\"134\":2,\"152\":7,\"342\":1,\"345\":1,\"352\":2,\"353\":2,\"356\":2,\"357\":2,\"468\":7}}],[\"localization\",{\"1\":{\"5\":1}}],[\"load\",{\"1\":{\"84\":1}}],[\"loaded\",{\"1\":{\"49\":1}}],[\"looks\",{\"1\":{\"47\":1,\"50\":1}}],[\"look\",{\"1\":{\"9\":1,\"49\":1,\"50\":1}}],[\"logs\",{\"1\":{\"141\":1,\"144\":1,\"387\":1,\"396\":1,\"400\":1}}],[\"logging\",{\"1\":{\"40\":1}}],[\"loggeroptions\",{\"0\":{\"39\":1},\"1\":{\"16\":1,\"39\":1,\"394\":1}}],[\"loggerinterface\",{\"0\":{\"136\":1},\"1\":{\"15\":1,\"19\":1,\"25\":1,\"32\":1,\"42\":1,\"387\":1,\"388\":1,\"399\":1,\"403\":1}}],[\"logger\",{\"0\":{\"387\":1},\"1\":{\"14\":1,\"19\":3,\"25\":3,\"32\":3,\"39\":1,\"40\":1,\"42\":3,\"136\":1,\"137\":1,\"393\":1,\"394\":1}}],[\"log\",{\"0\":{\"141\":1,\"396\":1},\"1\":{\"1\":2,\"40\":1,\"45\":1,\"46\":2,\"85\":2,\"86\":1,\"87\":1,\"89\":1,\"139\":1,\"141\":1,\"142\":2,\"145\":2,\"391\":1,\"396\":1,\"397\":2,\"399\":1,\"401\":2}}],[\"longer\",{\"1\":{\"46\":1}}],[\"long\",{\"1\":{\"1\":1,\"80\":1}}],[\"line\",{\"0\":{\"178\":1,\"223\":1,\"252\":1,\"312\":1,\"373\":1,\"418\":1,\"446\":1},\"1\":{\"171\":1,\"178\":1,\"213\":1,\"223\":2,\"224\":1,\"242\":1,\"252\":2,\"253\":1,\"305\":1,\"312\":2,\"364\":1,\"373\":2,\"374\":1,\"408\":1,\"418\":2,\"419\":1,\"437\":1,\"446\":2,\"447\":1}}],[\"lies\",{\"1\":{\"86\":1}}],[\"libraries\",{\"1\":{\"86\":1}}],[\"library\",{\"1\":{\"5\":1,\"6\":1}}],[\"literal\",{\"0\":{\"75\":1,\"79\":1},\"1\":{\"57\":1,\"59\":1,\"62\":1,\"75\":1,\"76\":1,\"360\":1,\"368\":1}}],[\"literals\",{\"1\":{\"47\":2,\"79\":1}}],[\"literaltoken\",{\"0\":{\"360\":1},\"1\":{\"14\":1,\"302\":1,\"361\":1,\"367\":1}}],[\"limitations\",{\"0\":{\"47\":1,\"89\":1}}],[\"likely\",{\"1\":{\"53\":1,\"85\":1}}],[\"like\",{\"1\":{\"1\":2,\"7\":1,\"47\":1,\"49\":2,\"50\":1,\"87\":1}}],[\"lists\",{\"1\":{\"1\":1,\"123\":1,\"125\":1,\"342\":1,\"345\":1}}],[\"list\",{\"1\":{\"1\":4,\"95\":1,\"142\":1,\"145\":1,\"164\":1,\"209\":1,\"292\":1,\"293\":1,\"295\":1,\"298\":1,\"397\":1,\"401\":1}}],[\"listing\",{\"1\":{\"1\":1}}],[\"date\",{\"1\":{\"46\":1}}],[\"data\",{\"1\":{\"11\":1}}],[\"duplicate\",{\"1\":{\"89\":1}}],[\"due\",{\"1\":{\"7\":1,\"89\":1}}],[\"during\",{\"1\":{\"1\":1,\"26\":1,\"28\":1,\"29\":1,\"49\":1,\"51\":1,\"88\":1,\"89\":1}}],[\"dictionary>\",{\"1\":{\"20\":1}}],[\"dictionary\",{\"0\":{\"30\":1,\"49\":1,\"50\":1},\"1\":{\"10\":1,\"11\":1,\"16\":1,\"22\":1,\"30\":2,\"49\":3,\"50\":4,\"51\":1,\"53\":1,\"130\":1,\"133\":2,\"134\":3,\"352\":1,\"356\":2,\"357\":3}}],[\"directly\",{\"1\":{\"6\":1,\"52\":1}}],[\"distributed\",{\"1\":{\"2\":1}}],[\"don\",{\"1\":{\"85\":1}}],[\"done\",{\"1\":{\"85\":1}}],[\"dollar\",{\"1\":{\"80\":1}}],[\"doc\",{\"1\":{\"441\":1}}],[\"documentation\",{\"1\":{\"52\":1}}],[\"doctor\",{\"1\":{\"1\":1}}],[\"double\",{\"1\":{\"47\":1,\"53\":1,\"79\":1}}],[\"does\",{\"1\":{\"47\":1,\"49\":1,\"152\":3,\"468\":3}}],[\"do\",{\"1\":{\"1\":1,\"51\":1,\"85\":1}}],[\"deduplicate\",{\"1\":{\"330\":1,\"331\":1}}],[\"deduplicated\",{\"1\":{\"115\":1,\"331\":1}}],[\"deduplicationmap\",{\"1\":{\"114\":3,\"115\":1,\"330\":2}}],[\"depends\",{\"1\":{\"85\":1}}],[\"depending\",{\"1\":{\"58\":1,\"61\":1,\"64\":1}}],[\"dependency\",{\"1\":{\"2\":1}}],[\"defines\",{\"1\":{\"90\":1,\"98\":1,\"109\":1,\"136\":1,\"147\":1}}],[\"define\",{\"1\":{\"87\":1}}],[\"defined\",{\"1\":{\"47\":1}}],[\"default\",{\"1\":{\"27\":1,\"50\":1,\"51\":1,\"127\":1,\"155\":1,\"267\":1,\"321\":1,\"348\":1,\"349\":1,\"387\":1,\"459\":1}}],[\"defaults\",{\"1\":{\"19\":3,\"25\":1,\"32\":4,\"40\":2,\"42\":3}}],[\"de\",{\"1\":{\"46\":3,\"49\":1,\"50\":1,\"85\":1}}],[\"declaration\",{\"0\":{\"19\":1,\"25\":1,\"27\":1,\"32\":1,\"35\":1,\"40\":1,\"42\":1}}],[\"decide\",{\"1\":{\"1\":1}}],[\"destructured\",{\"1\":{\"89\":1}}],[\"destructures\",{\"1\":{\"88\":1}}],[\"design\",{\"1\":{\"47\":1}}],[\"desired\",{\"1\":{\"11\":1}}],[\"description\",{\"1\":{\"19\":1,\"25\":1,\"27\":1,\"32\":1,\"40\":1,\"42\":1,\"79\":1,\"81\":1,\"96\":1,\"104\":1,\"107\":1,\"115\":1,\"118\":1,\"121\":1,\"128\":1,\"131\":1,\"134\":1,\"142\":1,\"145\":1,\"153\":1,\"162\":1,\"165\":1,\"174\":1,\"188\":1,\"197\":1,\"206\":1,\"217\":1,\"231\":1,\"235\":1,\"246\":1,\"260\":1,\"264\":1,\"274\":1,\"277\":1,\"281\":1,\"296\":1,\"299\":1,\"309\":1,\"316\":1,\"319\":1,\"328\":1,\"331\":1,\"335\":1,\"339\":1,\"349\":1,\"353\":1,\"357\":1,\"368\":1,\"380\":1,\"384\":1,\"394\":1,\"397\":1,\"401\":1,\"412\":1,\"426\":1,\"430\":1,\"452\":1,\"456\":1,\"466\":1,\"469\":1}}],[\"describe\",{\"1\":{\"1\":2}}],[\"fails\",{\"1\":{\"152\":1,\"468\":1}}],[\"falsy\",{\"0\":{\"417\":1},\"1\":{\"404\":1,\"408\":1,\"411\":1,\"412\":2}}],[\"false\",{\"1\":{\"40\":1,\"66\":1,\"69\":1,\"77\":2,\"79\":2,\"82\":2,\"144\":1,\"349\":1,\"400\":1}}],[\"fallback\",{\"1\":{\"42\":1,\"84\":1,\"85\":1,\"152\":4,\"468\":4}}],[\"fallbacklocale\",{\"1\":{\"42\":1,\"84\":2}}],[\"fs\",{\"1\":{\"50\":1}}],[\"feature\",{\"1\":{\"44\":1,\"46\":2,\"47\":1}}],[\"float\",{\"1\":{\"79\":1}}],[\"flexible\",{\"0\":{\"8\":1}}],[\"flavors\",{\"1\":{\"7\":1}}],[\"flavor\",{\"0\":{\"7\":1},\"1\":{\"47\":1,\"49\":1}}],[\"framework\",{\"0\":{\"6\":1},\"1\":{\"6\":1}}],[\"from\",{\"0\":{\"221\":1,\"224\":1,\"228\":1,\"237\":1,\"250\":1,\"253\":1,\"257\":1,\"266\":1,\"372\":1,\"374\":1,\"376\":1,\"386\":1,\"416\":1,\"419\":1,\"422\":1,\"432\":1,\"445\":1,\"447\":1,\"449\":1,\"458\":1},\"1\":{\"1\":1,\"7\":1,\"46\":2,\"50\":3,\"52\":2,\"84\":2,\"88\":2,\"123\":1,\"342\":1}}],[\"final\",{\"1\":{\"50\":1}}],[\"find\",{\"1\":{\"46\":1}}],[\"files\",{\"1\":{\"52\":1}}],[\"file2\",{\"1\":{\"46\":1,\"50\":1}}],[\"file1\",{\"1\":{\"46\":1,\"50\":1}}],[\"file\",{\"1\":{\"1\":2,\"50\":1,\"51\":3,\"84\":1,\"96\":1,\"127\":1,\"128\":1,\"165\":1,\"174\":1,\"180\":1,\"348\":1,\"349\":1}}],[\"first\",{\"1\":{\"1\":1,\"50\":1,\"85\":1}}],[\"foo\",{\"1\":{\"72\":7,\"360\":1}}],[\"followed\",{\"1\":{\"59\":2,\"62\":4,\"65\":4,\"68\":2,\"71\":7,\"209\":6}}],[\"follow\",{\"1\":{\"53\":1}}],[\"following\",{\"1\":{\"45\":1,\"57\":1,\"59\":1,\"62\":1,\"71\":1,\"81\":1,\"82\":1,\"89\":1,\"209\":1}}],[\"found\",{\"1\":{\"1\":1}}],[\"forget\",{\"1\":{\"85\":1}}],[\"format\",{\"1\":{\"19\":1,\"35\":1,\"49\":3,\"50\":1}}],[\"formatting\",{\"0\":{\"1\":1},\"1\":{\"1\":1,\"11\":1}}],[\"form\",{\"1\":{\"1\":1}}],[\"for\",{\"1\":{\"1\":3,\"5\":1,\"8\":1,\"9\":1,\"18\":1,\"24\":1,\"31\":1,\"39\":1,\"40\":1,\"41\":1,\"44\":1,\"47\":1,\"51\":3,\"88\":1,\"89\":1,\"90\":1,\"98\":1,\"109\":1,\"114\":1,\"127\":3,\"128\":1,\"130\":1,\"133\":1,\"136\":1,\"147\":1,\"152\":1,\"231\":1,\"235\":2,\"260\":1,\"264\":2,\"316\":1,\"319\":2,\"330\":1,\"348\":3,\"349\":1,\"352\":1,\"356\":1,\"380\":1,\"384\":2,\"426\":1,\"430\":2,\"452\":1,\"456\":2,\"468\":1}}],[\"future\",{\"1\":{\"7\":1}}],[\"functions\",{\"1\":{\"19\":1}}],[\"function\",{\"1\":{\"1\":4,\"19\":1,\"35\":1,\"47\":1,\"70\":1,\"73\":1,\"85\":4,\"87\":1,\"88\":2,\"174\":1,\"179\":1,\"235\":1,\"264\":1,\"292\":1,\"295\":1,\"296\":1,\"319\":1,\"384\":1,\"430\":1,\"456\":1}}],[\"full\",{\"1\":{\"1\":2,\"49\":1,\"174\":1,\"181\":1,\"217\":1,\"227\":1,\"246\":1,\"256\":1,\"309\":1,\"313\":1,\"368\":1,\"375\":1,\"412\":1,\"421\":1,\"448\":1}}],[\"further\",{\"1\":{\"1\":1}}],[\"moment\",{\"1\":{\"89\":1}}],[\"most\",{\"1\":{\"53\":1,\"85\":1,\"86\":1}}],[\"module\",{\"1\":{\"52\":1,\"117\":1,\"120\":1,\"334\":1,\"338\":1}}],[\"modules\",{\"1\":{\"52\":1}}],[\"mode\",{\"1\":{\"51\":1}}],[\"more\",{\"1\":{\"1\":1,\"47\":1,\"71\":1,\"74\":1,\"209\":1}}],[\"messages\",{\"1\":{\"284\":1,\"301\":1,\"387\":1}}],[\"message\",{\"1\":{\"141\":1,\"144\":1,\"220\":1,\"223\":1,\"249\":1,\"252\":1,\"284\":1,\"292\":1,\"293\":1,\"311\":1,\"312\":1,\"371\":1,\"373\":1,\"396\":1,\"400\":1,\"415\":1,\"418\":1,\"444\":1,\"446\":1}}],[\"members\",{\"1\":{\"88\":1,\"89\":1}}],[\"methods\",{\"0\":{\"93\":1,\"94\":1,\"101\":1,\"102\":1,\"112\":1,\"113\":1,\"139\":1,\"140\":1,\"150\":1,\"151\":1,\"159\":1,\"163\":1,\"214\":1,\"229\":1,\"243\":1,\"258\":1,\"271\":1,\"275\":1,\"288\":1,\"294\":1,\"306\":1,\"314\":1,\"325\":1,\"329\":1,\"365\":1,\"378\":1,\"391\":1,\"395\":1,\"409\":1,\"424\":1,\"438\":1,\"450\":1,\"463\":1,\"467\":1}}],[\"method\",{\"1\":{\"85\":2}}],[\"meta\",{\"1\":{\"51\":1,\"115\":1,\"118\":1,\"121\":1,\"127\":1,\"331\":1,\"335\":1,\"339\":1,\"348\":1}}],[\"means\",{\"1\":{\"47\":1,\"51\":1,\"88\":1}}],[\"meet\",{\"1\":{\"20\":1,\"30\":1,\"43\":1,\"45\":2,\"46\":3}}],[\"minus\",{\"1\":{\"79\":1}}],[\"mind\",{\"1\":{\"51\":1,\"127\":1,\"348\":1}}],[\"missing\",{\"1\":{\"46\":1,\"84\":1,\"123\":1,\"342\":1}}],[\"might\",{\"1\":{\"1\":2,\"51\":1}}],[\"may\",{\"1\":{\"58\":1,\"61\":1}}],[\"maybe\",{\"1\":{\"7\":1}}],[\"match\",{\"1\":{\"47\":1}}],[\"manner\",{\"1\":{\"47\":1}}],[\"manually\",{\"1\":{\"45\":1}}],[\"manager\",{\"1\":{\"3\":1,\"4\":1}}],[\"make\",{\"1\":{\"45\":1,\"46\":1,\"50\":1}}],[\"making\",{\"1\":{\"1\":1}}],[\"my\",{\"1\":{\"1\":5,\"20\":1,\"30\":1,\"33\":1,\"87\":2,\"89\":1}}],[\"multiple\",{\"1\":{\"1\":1,\"51\":2,\"127\":1,\"348\":1}}],[\"much\",{\"1\":{\"1\":1}}],[\"must\",{\"1\":{\"1\":1,\"47\":1,\"53\":1,\"56\":1,\"80\":1,\"209\":1,\"238\":1}}],[\"penalty\",{\"1\":{\"88\":1}}],[\"perfect\",{\"1\":{\"47\":1}}],[\"performance\",{\"0\":{\"88\":1},\"1\":{\"49\":1}}],[\"performant\",{\"1\":{\"10\":1}}],[\"performing\",{\"1\":{\"11\":1}}],[\"place\",{\"1\":{\"53\":1}}],[\"placeholder\",{\"1\":{\"53\":4}}],[\"placeholders\",{\"1\":{\"53\":1}}],[\"plain\",{\"1\":{\"53\":2}}],[\"position\",{\"1\":{\"115\":1,\"118\":1,\"121\":1,\"127\":1,\"331\":1,\"335\":1,\"339\":1,\"348\":1}}],[\"possible\",{\"1\":{\"49\":1,\"89\":1}}],[\"populated\",{\"1\":{\"114\":1,\"330\":1}}],[\"powerful\",{\"1\":{\"11\":1}}],[\"point\",{\"1\":{\"1\":1,\"52\":1}}],[\"pure\",{\"1\":{\"6\":1}}],[\"purpose\",{\"1\":{\"1\":1,\"40\":1}}],[\"pass\",{\"1\":{\"50\":1,\"51\":1,\"73\":1,\"85\":1,\"88\":2,\"127\":1,\"348\":1}}],[\"passed\",{\"1\":{\"1\":1,\"11\":1,\"51\":1}}],[\"pairs\",{\"1\":{\"30\":1}}],[\"parentheses\",{\"1\":{\"234\":1,\"263\":1,\"318\":1,\"383\":1,\"429\":1,\"455\":1}}],[\"parsing\",{\"1\":{\"50\":1}}],[\"parses\",{\"1\":{\"127\":1,\"348\":1}}],[\"parsed\",{\"1\":{\"95\":1,\"96\":1,\"128\":2,\"164\":1,\"165\":1,\"349\":2}}],[\"parse\",{\"0\":{\"127\":1,\"348\":1},\"1\":{\"1\":1,\"46\":2,\"50\":2,\"51\":6,\"112\":1,\"127\":5,\"325\":1,\"348\":5,\"351\":1}}],[\"parameter\",{\"1\":{\"70\":1,\"72\":1,\"89\":1,\"217\":1,\"293\":1,\"298\":1,\"299\":1}}],[\"parameters\",{\"0\":{\"36\":1,\"96\":1,\"104\":1,\"107\":1,\"115\":1,\"118\":1,\"121\":1,\"128\":1,\"131\":1,\"134\":1,\"142\":1,\"145\":1,\"153\":1,\"162\":1,\"165\":1,\"174\":1,\"188\":1,\"197\":1,\"206\":1,\"217\":1,\"231\":1,\"235\":1,\"246\":1,\"260\":1,\"264\":1,\"274\":1,\"277\":1,\"281\":1,\"293\":1,\"296\":1,\"299\":1,\"309\":1,\"316\":1,\"319\":1,\"328\":1,\"331\":1,\"335\":1,\"339\":1,\"349\":1,\"353\":1,\"357\":1,\"368\":1,\"380\":1,\"384\":1,\"394\":1,\"397\":1,\"401\":1,\"412\":1,\"426\":1,\"430\":1,\"441\":1,\"452\":1,\"456\":1,\"466\":1,\"469\":1},\"1\":{\"27\":1,\"29\":1,\"80\":1,\"87\":3,\"88\":3,\"89\":1,\"284\":1,\"287\":1,\"293\":1,\"298\":1}}],[\"params\",{\"1\":{\"23\":1,\"27\":1,\"85\":2,\"89\":1}}],[\"package\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"8\":1,\"52\":1}}],[\"path\",{\"1\":{\"1\":5,\"46\":2,\"50\":3,\"52\":1,\"96\":1,\"128\":1,\"165\":1,\"174\":1,\"180\":1,\"349\":1}}],[\"patient\",{\"1\":{\"1\":1}}],[\"primitives\",{\"0\":{\"78\":1}}],[\"primitive\",{\"1\":{\"68\":1,\"71\":2,\"76\":1}}],[\"prior\",{\"1\":{\"51\":1}}],[\"present\",{\"1\":{\"123\":1,\"125\":1,\"295\":1,\"298\":1,\"342\":1,\"345\":1}}],[\"prepend\",{\"1\":{\"87\":1}}],[\"preceded\",{\"1\":{\"79\":1}}],[\"previously\",{\"1\":{\"51\":1,\"127\":1,\"348\":1}}],[\"prefix\",{\"1\":{\"1\":3}}],[\"protectednew\",{\"1\":{\"308\":1}}],[\"protectedcompilewrap\",{\"1\":{\"234\":1,\"263\":1,\"318\":1,\"383\":1,\"429\":1,\"455\":1}}],[\"propertylocal\",{\"1\":{\"209\":2}}],[\"property\",{\"1\":{\"200\":1,\"206\":1,\"209\":6}}],[\"properties\",{\"0\":{\"171\":1,\"175\":1,\"185\":1,\"189\":1,\"194\":1,\"198\":1,\"203\":1,\"207\":1,\"213\":1,\"219\":1,\"242\":1,\"248\":1,\"287\":1,\"291\":1,\"305\":1,\"310\":1,\"364\":1,\"370\":1,\"408\":1,\"414\":1,\"437\":1,\"443\":1},\"1\":{\"70\":1,\"80\":1}}],[\"prop\",{\"1\":{\"72\":2}}],[\"provided\",{\"1\":{\"50\":1,\"88\":1,\"114\":1,\"330\":1}}],[\"provide\",{\"1\":{\"49\":1}}],[\"provides\",{\"1\":{\"1\":1}}],[\"problem\",{\"0\":{\"45\":1}}],[\"production\",{\"1\":{\"10\":1}}],[\"project\",{\"1\":{\"6\":1,\"49\":1}}],[\"pitfall\",{\"1\":{\"1\":1}}],[\"wraps\",{\"1\":{\"234\":1,\"263\":1,\"318\":1,\"383\":1,\"429\":1,\"455\":1}}],[\"wrapped\",{\"1\":{\"53\":1,\"58\":1,\"61\":1}}],[\"writefilesync\",{\"1\":{\"50\":2}}],[\"written\",{\"1\":{\"8\":1}}],[\"welcome\",{\"1\":{\"49\":2,\"50\":2,\"87\":2,\"89\":1}}],[\"well\",{\"1\":{\"47\":1}}],[\"window\",{\"1\":{\"85\":1,\"88\":1}}],[\"will\",{\"1\":{\"1\":4,\"9\":1,\"27\":1,\"45\":1,\"49\":3,\"50\":1,\"51\":3,\"52\":3,\"53\":4,\"85\":1,\"89\":2,\"114\":2,\"127\":4,\"152\":4,\"330\":2,\"348\":4,\"468\":4}}],[\"within\",{\"1\":{\"168\":1,\"174\":1,\"176\":1,\"178\":1,\"217\":1,\"220\":1,\"223\":1,\"246\":1,\"249\":1,\"252\":1,\"301\":1,\"309\":1,\"311\":1,\"312\":1,\"368\":1,\"371\":1,\"373\":1,\"412\":1,\"415\":1,\"418\":1,\"444\":1,\"446\":1}}],[\"without\",{\"1\":{\"50\":1,\"88\":1}}],[\"with\",{\"1\":{\"1\":3,\"6\":1,\"8\":1,\"9\":1,\"47\":2,\"50\":2,\"51\":1,\"53\":2,\"79\":1,\"80\":1,\"86\":1,\"87\":1,\"89\":1,\"114\":1,\"128\":1,\"330\":1,\"349\":1}}],[\"was\",{\"1\":{\"50\":1}}],[\"want\",{\"1\":{\"1\":1,\"51\":1,\"53\":1,\"85\":1,\"127\":2,\"348\":2}}],[\"way\",{\"1\":{\"1\":2,\"46\":1,\"89\":1}}],[\"work\",{\"1\":{\"51\":1,\"89\":1}}],[\"works\",{\"1\":{\"47\":1}}],[\"world\",{\"1\":{\"1\":2,\"174\":2,\"177\":1,\"181\":1,\"433\":1}}],[\"words\",{\"0\":{\"82\":1},\"1\":{\"80\":1,\"82\":1}}],[\"word\",{\"1\":{\"1\":2}}],[\"would\",{\"1\":{\"1\":2,\"53\":1}}],[\"what\",{\"1\":{\"45\":1}}],[\"while\",{\"1\":{\"1\":2,\"49\":1}}],[\"which\",{\"1\":{\"1\":6,\"46\":2,\"51\":1}}],[\"whether\",{\"1\":{\"115\":1,\"118\":1,\"121\":1,\"128\":1,\"217\":1,\"331\":1,\"335\":1,\"339\":1,\"349\":1}}],[\"where\",{\"1\":{\"1\":2,\"50\":1}}],[\"when\",{\"1\":{\"1\":2,\"49\":1,\"51\":2,\"53\":2,\"58\":1,\"61\":1,\"87\":1,\"88\":1,\"89\":1,\"127\":2,\"348\":2}}],[\"overrides\",{\"0\":{\"218\":1,\"233\":1,\"247\":1,\"262\":1,\"369\":1,\"382\":1,\"413\":1,\"428\":1,\"442\":1,\"454\":1}}],[\"overhead\",{\"1\":{\"50\":1}}],[\"operators\",{\"1\":{\"81\":1}}],[\"operator\",{\"0\":{\"81\":1,\"254\":1},\"1\":{\"67\":1,\"68\":1,\"81\":1,\"238\":1,\"242\":1,\"245\":1,\"246\":2}}],[\"operand\",{\"1\":{\"58\":1,\"61\":1}}],[\"optimized\",{\"1\":{\"10\":1}}],[\"optionalreadonlysource\",{\"1\":{\"180\":1}}],[\"optionally\",{\"1\":{\"70\":1,\"79\":1,\"209\":1}}],[\"optional\",{\"1\":{\"19\":1,\"25\":1,\"32\":4,\"42\":3,\"71\":1,\"72\":1,\"96\":1,\"115\":1,\"128\":1,\"153\":1,\"165\":1,\"209\":1,\"331\":1,\"349\":1,\"469\":1}}],[\"options\",{\"1\":{\"18\":1,\"24\":1,\"27\":1,\"31\":1,\"39\":1,\"41\":1,\"152\":1,\"161\":1,\"162\":1,\"273\":1,\"274\":1,\"327\":1,\"328\":1,\"393\":1,\"394\":1,\"465\":1,\"466\":1,\"468\":1}}],[\"option\",{\"1\":{\"1\":2,\"84\":1}}],[\"omitted\",{\"1\":{\"51\":1}}],[\"otherwise\",{\"1\":{\"404\":1}}],[\"other\",{\"1\":{\"51\":1}}],[\"outside\",{\"1\":{\"433\":1}}],[\"out\",{\"1\":{\"46\":1}}],[\"obvious\",{\"1\":{\"45\":1}}],[\"objects\",{\"1\":{\"88\":3}}],[\"object\",{\"1\":{\"10\":1,\"18\":1,\"24\":1,\"26\":1,\"31\":1,\"39\":1,\"41\":1,\"49\":1,\"70\":1,\"80\":1,\"88\":2,\"200\":1,\"209\":1,\"217\":1}}],[\"obsolete\",{\"1\":{\"9\":1}}],[\"only\",{\"1\":{\"51\":1,\"86\":1,\"88\":1}}],[\"ones\",{\"1\":{\"51\":1,\"128\":1,\"349\":1}}],[\"one\",{\"1\":{\"47\":1,\"57\":1,\"59\":1,\"62\":1,\"64\":1,\"81\":1,\"209\":1}}],[\"once\",{\"1\":{\"10\":1,\"49\":1,\"84\":1}}],[\"on\",{\"1\":{\"2\":1,\"19\":1,\"35\":1,\"51\":1,\"52\":1,\"58\":1,\"61\":1,\"64\":1,\"85\":1,\"127\":1,\"152\":1,\"348\":1,\"468\":1}}],[\"own\",{\"1\":{\"1\":1}}],[\"origin\",{\"1\":{\"96\":1,\"128\":1,\"165\":1,\"174\":1,\"180\":1,\"349\":1}}],[\"originally\",{\"1\":{\"8\":1}}],[\"order\",{\"1\":{\"47\":1,\"58\":1,\"61\":1}}],[\"or\",{\"1\":{\"1\":3,\"6\":2,\"46\":1,\"47\":2,\"49\":1,\"50\":1,\"70\":2,\"71\":1,\"74\":1,\"79\":6,\"81\":2,\"85\":1,\"133\":1,\"144\":1,\"152\":2,\"209\":2,\"217\":2,\"356\":1,\"360\":1,\"400\":1,\"404\":1,\"468\":2}}],[\"of\",{\"0\":{\"13\":1,\"92\":1,\"100\":1,\"111\":1,\"138\":1,\"149\":1,\"157\":1,\"167\":1,\"169\":1,\"183\":1,\"192\":1,\"201\":1,\"211\":1,\"240\":1,\"269\":1,\"279\":1,\"283\":1,\"285\":1,\"303\":1,\"323\":1,\"333\":1,\"337\":1,\"341\":1,\"344\":1,\"347\":1,\"351\":1,\"355\":1,\"359\":1,\"362\":1,\"389\":1,\"399\":1,\"403\":1,\"406\":1,\"435\":1,\"461\":1,\"471\":1},\"1\":{\"1\":10,\"11\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"27\":2,\"28\":1,\"29\":1,\"30\":1,\"40\":1,\"43\":1,\"45\":3,\"47\":2,\"49\":1,\"50\":1,\"51\":3,\"52\":1,\"53\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":1,\"64\":2,\"70\":1,\"71\":1,\"72\":2,\"79\":2,\"81\":1,\"84\":1,\"85\":1,\"86\":2,\"88\":1,\"89\":1,\"95\":1,\"96\":1,\"106\":1,\"114\":1,\"115\":1,\"117\":1,\"118\":1,\"120\":1,\"121\":1,\"123\":2,\"125\":2,\"127\":4,\"128\":1,\"142\":2,\"145\":2,\"155\":1,\"164\":1,\"165\":1,\"174\":5,\"176\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"197\":1,\"199\":1,\"206\":1,\"209\":2,\"217\":4,\"220\":1,\"223\":1,\"227\":1,\"234\":1,\"238\":1,\"246\":4,\"249\":1,\"252\":1,\"256\":1,\"263\":1,\"267\":1,\"280\":1,\"284\":2,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"298\":1,\"299\":1,\"309\":2,\"311\":1,\"312\":1,\"313\":1,\"318\":1,\"321\":1,\"330\":1,\"331\":1,\"334\":1,\"335\":1,\"338\":1,\"339\":1,\"342\":2,\"345\":2,\"348\":4,\"349\":1,\"368\":3,\"371\":1,\"373\":1,\"375\":1,\"383\":1,\"387\":1,\"397\":2,\"401\":2,\"404\":2,\"412\":2,\"415\":1,\"418\":1,\"421\":1,\"429\":1,\"444\":1,\"446\":1,\"448\":1,\"455\":1,\"459\":1}}],[\"element\",{\"1\":{\"182\":1}}],[\"either\",{\"1\":{\"152\":1,\"468\":1}}],[\"ecmascript6\",{\"1\":{\"103\":1,\"114\":1,\"117\":1,\"120\":2,\"230\":1,\"259\":1,\"276\":1,\"315\":1,\"330\":1,\"334\":1,\"338\":2,\"379\":1,\"425\":1,\"451\":1}}],[\"equal\",{\"1\":{\"81\":4}}],[\"error\",{\"1\":{\"53\":1}}],[\"evaluable\",{\"1\":{\"301\":1,\"433\":1}}],[\"evaluate\",{\"1\":{\"70\":1}}],[\"evaluated\",{\"1\":{\"53\":2}}],[\"even\",{\"1\":{\"7\":1,\"47\":1,\"52\":1,\"88\":1}}],[\"easily\",{\"1\":{\"46\":1}}],[\"each\",{\"1\":{\"1\":1,\"45\":1,\"50\":2,\"51\":1,\"88\":1,\"127\":1,\"348\":1}}],[\"escape\",{\"1\":{\"79\":1}}],[\"escaped\",{\"1\":{\"79\":1}}],[\"essentially\",{\"1\":{\"79\":1}}],[\"es6\",{\"1\":{\"52\":2}}],[\"esm\",{\"1\":{\"8\":1}}],[\"especially\",{\"1\":{\"1\":1}}],[\"exist\",{\"1\":{\"152\":3,\"468\":3}}],[\"existing\",{\"1\":{\"128\":1,\"349\":1}}],[\"executable\",{\"1\":{\"103\":1,\"230\":1,\"259\":1,\"276\":1,\"315\":1,\"379\":1,\"425\":1,\"451\":1}}],[\"except\",{\"1\":{\"87\":1,\"234\":1,\"263\":1,\"318\":1,\"383\":1,\"429\":1,\"455\":1}}],[\"exactly\",{\"1\":{\"85\":1}}],[\"examples\",{\"1\":{\"209\":1,\"238\":1,\"404\":1}}],[\"example\",{\"0\":{\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"77\":1},\"1\":{\"1\":4,\"20\":1,\"30\":1,\"33\":1,\"38\":1,\"43\":1,\"45\":1,\"51\":1,\"79\":1,\"85\":1,\"89\":1,\"127\":2,\"348\":2,\"360\":1,\"433\":1}}],[\"exprs\",{\"0\":{\"199\":1},\"1\":{\"194\":1,\"196\":1,\"197\":1}}],[\"expr\",{\"0\":{\"190\":1},\"1\":{\"185\":1,\"187\":1,\"188\":1}}],[\"expression\",{\"0\":{\"56\":1},\"1\":{\"53\":4,\"56\":1,\"57\":4,\"58\":3,\"59\":4,\"61\":3,\"62\":4,\"64\":1,\"65\":3,\"67\":1,\"68\":2,\"70\":1,\"71\":1,\"74\":1,\"75\":1,\"182\":1,\"188\":1,\"191\":1,\"200\":1,\"209\":2,\"217\":1,\"220\":1,\"223\":1,\"227\":1,\"230\":1,\"231\":1,\"234\":1,\"235\":1,\"238\":1,\"246\":3,\"249\":1,\"252\":1,\"256\":1,\"259\":1,\"260\":1,\"263\":1,\"264\":1,\"301\":1,\"309\":1,\"311\":1,\"312\":1,\"313\":1,\"315\":1,\"316\":1,\"318\":1,\"319\":1,\"360\":1,\"368\":1,\"371\":1,\"373\":1,\"375\":1,\"379\":1,\"380\":1,\"383\":1,\"384\":1,\"404\":4,\"412\":4,\"415\":1,\"418\":1,\"421\":1,\"425\":1,\"426\":1,\"429\":1,\"430\":1,\"433\":1,\"444\":1,\"446\":1,\"448\":1,\"451\":1,\"452\":1,\"455\":1,\"456\":1}}],[\"expressions\",{\"0\":{\"55\":1},\"1\":{\"27\":2,\"47\":1,\"50\":1,\"53\":1,\"197\":1,\"199\":1,\"209\":1,\"238\":1}}],[\"exponent\",{\"1\":{\"79\":1}}],[\"exported\",{\"1\":{\"51\":1}}],[\"export\",{\"1\":{\"50\":1}}],[\"expect\",{\"1\":{\"49\":2}}],[\"extracts\",{\"1\":{\"88\":1}}],[\"extracting\",{\"1\":{\"51\":1,\"127\":1,\"348\":1}}],[\"extracted\",{\"1\":{\"50\":1,\"51\":2,\"115\":1,\"118\":1,\"121\":1,\"123\":1,\"125\":1,\"127\":2,\"331\":1,\"335\":1,\"339\":1,\"342\":1,\"345\":1,\"348\":2}}],[\"extract\",{\"1\":{\"7\":1,\"44\":1,\"46\":1}}],[\"enclosed\",{\"1\":{\"79\":1}}],[\"entirely\",{\"1\":{\"85\":1}}],[\"entire\",{\"1\":{\"53\":1,\"88\":1}}],[\"entries\",{\"1\":{\"20\":1,\"114\":1,\"330\":1}}],[\"enables\",{\"1\":{\"40\":1}}],[\"en\",{\"1\":{\"1\":2,\"20\":1,\"38\":1,\"46\":3,\"49\":1,\"50\":1,\"84\":1}}],[\"etc\",{\"1\":{\"1\":1}}],[\"e\",{\"1\":{\"1\":1,\"40\":1,\"85\":1,\"142\":1,\"145\":1,\"174\":3,\"177\":1,\"179\":1,\"181\":1,\"397\":1,\"401\":1,\"433\":1}}],[\"employ\",{\"1\":{\"1\":1}}],[\"c\",{\"1\":{\"404\":2}}],[\"creates\",{\"1\":{\"161\":1,\"173\":1,\"187\":1,\"196\":1,\"205\":1,\"216\":1,\"245\":1,\"273\":1,\"308\":1,\"327\":1,\"367\":1,\"393\":1,\"411\":1,\"465\":1}}],[\"created\",{\"1\":{\"10\":1}}],[\"choose\",{\"1\":{\"85\":1}}],[\"characters\",{\"1\":{\"79\":1}}],[\"changes\",{\"1\":{\"127\":1,\"348\":1}}],[\"change\",{\"1\":{\"1\":1,\"51\":1}}],[\"check\",{\"1\":{\"49\":1,\"235\":1,\"264\":1,\"319\":1,\"384\":1,\"430\":1,\"456\":1}}],[\"curly\",{\"1\":{\"53\":2,\"56\":1,\"433\":1}}],[\"current\",{\"1\":{\"1\":1,\"46\":1,\"127\":1,\"130\":1,\"133\":1,\"234\":1,\"263\":1,\"318\":1,\"348\":1,\"352\":1,\"356\":1,\"383\":1,\"429\":1,\"455\":1}}],[\"customizes\",{\"1\":{\"162\":1,\"274\":1,\"328\":1,\"394\":1,\"466\":1}}],[\"custom\",{\"1\":{\"1\":5}}],[\"case\",{\"1\":{\"84\":1,\"114\":1,\"127\":1,\"330\":1,\"348\":1}}],[\"catalog\",{\"0\":{\"20\":1},\"1\":{\"16\":1,\"20\":2,\"21\":1,\"32\":2,\"42\":1,\"123\":1,\"125\":1,\"152\":3,\"342\":1,\"345\":1,\"468\":3}}],[\"call\",{\"0\":{\"70\":1},\"1\":{\"51\":2,\"57\":1,\"59\":1,\"62\":1,\"70\":1,\"73\":1,\"127\":1,\"182\":1,\"191\":1,\"200\":1,\"209\":1,\"348\":1}}],[\"calling\",{\"1\":{\"51\":1,\"85\":1,\"127\":1,\"348\":1}}],[\"callexpressiontoken\",{\"0\":{\"209\":1},\"1\":{\"14\":1,\"210\":1,\"216\":1,\"302\":1}}],[\"callexpressionobjectaccess\",{\"0\":{\"200\":1},\"1\":{\"14\":1,\"205\":1,\"217\":1,\"226\":1}}],[\"callexpressioninvocation\",{\"0\":{\"191\":1},\"1\":{\"14\":1,\"196\":1,\"217\":1,\"226\":1}}],[\"callexpressionarrayaccess\",{\"0\":{\"182\":1},\"1\":{\"14\":1,\"187\":1,\"217\":1,\"226\":1}}],[\"called\",{\"1\":{\"1\":1}}],[\"calls\",{\"1\":{\"9\":1,\"47\":1}}],[\"cannot\",{\"1\":{\"47\":2,\"80\":2,\"82\":1}}],[\"can\",{\"1\":{\"1\":5,\"6\":1,\"45\":1,\"46\":3,\"49\":1,\"50\":1,\"51\":1,\"52\":3,\"79\":3,\"80\":1,\"81\":1,\"86\":1,\"87\":2,\"88\":2,\"127\":1,\"142\":2,\"145\":2,\"348\":1,\"397\":2,\"401\":2}}],[\"classes\",{\"0\":{\"14\":1,\"474\":1},\"1\":{\"90\":1,\"98\":1,\"109\":1,\"136\":1,\"147\":1}}],[\"class\",{\"0\":{\"155\":1,\"168\":1,\"182\":1,\"191\":1,\"200\":1,\"209\":1,\"238\":1,\"267\":1,\"284\":1,\"301\":1,\"321\":1,\"360\":1,\"387\":1,\"404\":1,\"433\":1,\"459\":1},\"1\":{\"1\":1,\"50\":1,\"168\":1,\"284\":1,\"301\":1}}],[\"column\",{\"0\":{\"176\":1,\"220\":1,\"249\":1,\"311\":1,\"371\":1,\"415\":1,\"444\":1},\"1\":{\"171\":1,\"176\":1,\"213\":1,\"220\":2,\"221\":1,\"242\":1,\"249\":2,\"250\":1,\"305\":1,\"311\":2,\"364\":1,\"371\":2,\"372\":1,\"408\":1,\"415\":2,\"416\":1,\"437\":1,\"444\":2,\"445\":1}}],[\"correct\",{\"1\":{\"52\":1}}],[\"corresponding\",{\"1\":{\"1\":1,\"43\":1,\"114\":1,\"123\":1,\"125\":1,\"330\":1,\"342\":1,\"345\":1}}],[\"comma\",{\"1\":{\"209\":1}}],[\"commas\",{\"1\":{\"74\":1}}],[\"comments\",{\"1\":{\"50\":1}}],[\"commonjs\",{\"1\":{\"8\":1,\"52\":2,\"117\":1,\"334\":1}}],[\"comes\",{\"1\":{\"8\":1}}],[\"com\",{\"1\":{\"2\":1}}],[\"compressed\",{\"1\":{\"114\":1,\"330\":1}}],[\"completely\",{\"1\":{\"88\":1}}],[\"complex\",{\"1\":{\"1\":1}}],[\"comply\",{\"1\":{\"56\":1}}],[\"comparison\",{\"0\":{\"61\":1,\"67\":1,\"81\":1},\"1\":{\"57\":1,\"59\":1,\"61\":2,\"62\":1,\"64\":1,\"67\":2,\"68\":3,\"81\":1,\"238\":2,\"246\":1}}],[\"comparisonexpressiontoken\",{\"0\":{\"238\":1},\"1\":{\"14\":1,\"239\":1,\"245\":1,\"302\":1}}],[\"compare\",{\"1\":{\"46\":1,\"67\":1,\"81\":1}}],[\"compiling\",{\"1\":{\"231\":1,\"235\":1,\"260\":1,\"264\":1,\"316\":1,\"319\":1,\"380\":1,\"384\":1,\"426\":1,\"430\":1,\"452\":1,\"456\":1}}],[\"compilewrap\",{\"0\":{\"234\":1,\"263\":1,\"318\":1,\"383\":1,\"429\":1,\"455\":1},\"1\":{\"214\":1,\"237\":1,\"243\":1,\"266\":1,\"306\":1,\"365\":1,\"386\":1,\"409\":1,\"432\":1,\"438\":1,\"458\":1}}],[\"compiles\",{\"1\":{\"103\":1,\"230\":1,\"259\":1,\"276\":1,\"315\":1,\"379\":1,\"425\":1,\"451\":1}}],[\"compile\",{\"0\":{\"103\":1,\"230\":1,\"259\":1,\"276\":1,\"315\":1,\"379\":1,\"425\":1,\"451\":1},\"1\":{\"50\":1,\"101\":1,\"103\":1,\"214\":1,\"230\":1,\"233\":1,\"234\":1,\"243\":1,\"259\":1,\"262\":1,\"263\":1,\"271\":1,\"276\":1,\"279\":1,\"306\":1,\"318\":1,\"365\":1,\"379\":1,\"382\":1,\"383\":1,\"409\":1,\"425\":1,\"428\":1,\"429\":1,\"438\":1,\"451\":1,\"454\":1,\"455\":1}}],[\"compileroptions\",{\"0\":{\"24\":1},\"1\":{\"16\":1,\"24\":1,\"274\":1}}],[\"compilerinterface\",{\"0\":{\"98\":1},\"1\":{\"15\":1,\"32\":1,\"267\":1,\"268\":1,\"279\":1,\"283\":1}}],[\"compilertoken\",{\"0\":{\"301\":1},\"1\":{\"14\":1,\"106\":2,\"108\":1,\"188\":1,\"190\":1,\"197\":1,\"199\":1,\"210\":1,\"218\":1,\"221\":1,\"224\":1,\"228\":1,\"233\":1,\"237\":1,\"239\":1,\"246\":2,\"247\":1,\"250\":1,\"251\":1,\"253\":1,\"255\":1,\"257\":1,\"262\":1,\"266\":1,\"280\":2,\"282\":1,\"302\":1,\"308\":1,\"361\":1,\"369\":1,\"372\":1,\"374\":1,\"376\":1,\"382\":1,\"386\":1,\"405\":1,\"412\":3,\"413\":1,\"416\":1,\"417\":1,\"419\":1,\"420\":1,\"422\":1,\"423\":1,\"428\":1,\"432\":1,\"434\":1,\"442\":1,\"445\":1,\"447\":1,\"449\":1,\"454\":1,\"458\":1}}],[\"compilercontext\",{\"0\":{\"284\":1},\"1\":{\"14\":1,\"231\":1,\"235\":1,\"260\":1,\"264\":1,\"290\":1,\"295\":1,\"297\":1,\"298\":1,\"300\":1,\"316\":1,\"319\":1,\"380\":1,\"384\":1,\"426\":1,\"430\":1,\"452\":1,\"456\":1}}],[\"compiler\",{\"0\":{\"267\":1},\"1\":{\"14\":1,\"24\":1,\"25\":1,\"32\":3,\"98\":1,\"99\":1,\"273\":1,\"274\":1}}],[\"compiledvalue>\",{\"1\":{\"22\":1}}],[\"compiledvalue\",{\"0\":{\"23\":1},\"1\":{\"16\":1,\"23\":1}}],[\"compileddictionary>\",{\"1\":{\"21\":1}}],[\"compileddictionary\",{\"0\":{\"22\":1},\"1\":{\"16\":1,\"22\":1}}],[\"compiledcatalog\",{\"0\":{\"21\":1},\"1\":{\"16\":1,\"21\":1,\"42\":1}}],[\"compiled\",{\"0\":{\"50\":1},\"1\":{\"10\":1,\"11\":1,\"21\":1,\"22\":1,\"23\":1,\"42\":1,\"49\":1,\"50\":2,\"51\":1,\"84\":2,\"114\":1,\"117\":1,\"120\":1,\"234\":1,\"263\":1,\"318\":1,\"330\":1,\"334\":1,\"338\":1,\"383\":1,\"429\":1,\"455\":1}}],[\"compilationtransax\",{\"1\":{\"88\":1}}],[\"compilation\",{\"0\":{\"10\":1,\"48\":1},\"1\":{\"89\":1,\"284\":1}}],[\"component\",{\"1\":{\"1\":8}}],[\"code\",{\"1\":{\"1\":2,\"9\":1,\"44\":1,\"45\":2,\"46\":3,\"47\":2,\"50\":4,\"51\":3,\"95\":2,\"96\":3,\"114\":2,\"115\":1,\"117\":1,\"118\":1,\"120\":1,\"121\":1,\"123\":1,\"125\":1,\"127\":5,\"128\":3,\"164\":2,\"165\":3,\"168\":1,\"174\":2,\"176\":1,\"178\":1,\"180\":1,\"217\":1,\"246\":1,\"309\":1,\"330\":2,\"331\":1,\"334\":1,\"335\":1,\"338\":1,\"339\":1,\"342\":1,\"345\":1,\"348\":5,\"349\":3,\"368\":1,\"412\":1}}],[\"configured\",{\"1\":{\"152\":5,\"468\":5}}],[\"conflicts\",{\"1\":{\"58\":1,\"61\":1}}],[\"confusing\",{\"1\":{\"1\":1}}],[\"continuously\",{\"1\":{\"51\":1}}],[\"contain\",{\"1\":{\"50\":1,\"53\":1,\"80\":1}}],[\"contextparams\",{\"0\":{\"29\":1},\"1\":{\"16\":1,\"23\":1,\"27\":1,\"29\":1}}],[\"contextglobals\",{\"0\":{\"28\":1},\"1\":{\"16\":1,\"23\":1,\"27\":1,\"28\":1}}],[\"context\",{\"0\":{\"26\":1},\"1\":{\"1\":1,\"16\":1,\"19\":1,\"26\":2,\"28\":1,\"29\":1,\"35\":1,\"47\":1,\"89\":1,\"127\":1,\"152\":3,\"153\":3,\"230\":1,\"231\":2,\"234\":1,\"235\":2,\"259\":1,\"260\":2,\"263\":1,\"264\":2,\"284\":1,\"315\":1,\"316\":2,\"318\":1,\"319\":2,\"348\":1,\"379\":1,\"380\":2,\"383\":1,\"384\":2,\"425\":1,\"426\":2,\"429\":1,\"430\":2,\"451\":1,\"452\":2,\"455\":1,\"456\":2,\"468\":3,\"469\":3}}],[\"contextual\",{\"1\":{\"1\":4}}],[\"contents\",{\"0\":{\"13\":1,\"92\":1,\"100\":1,\"111\":1,\"138\":1,\"149\":1,\"157\":1,\"169\":1,\"183\":1,\"192\":1,\"201\":1,\"211\":1,\"240\":1,\"269\":1,\"285\":1,\"303\":1,\"323\":1,\"362\":1,\"389\":1,\"406\":1,\"435\":1,\"461\":1},\"1\":{\"51\":1}}],[\"content\",{\"1\":{\"1\":1,\"5\":1,\"217\":1,\"227\":1,\"246\":1,\"256\":1,\"309\":1,\"313\":1,\"368\":1,\"375\":1,\"412\":1,\"421\":1,\"448\":1}}],[\"converting\",{\"1\":{\"106\":1,\"280\":1}}],[\"convert\",{\"1\":{\"50\":1}}],[\"converts\",{\"1\":{\"1\":1}}],[\"converted\",{\"1\":{\"1\":1}}],[\"consist\",{\"1\":{\"238\":1}}],[\"considered\",{\"1\":{\"53\":1}}],[\"consider\",{\"1\":{\"45\":1}}],[\"console\",{\"1\":{\"1\":2,\"45\":1,\"46\":2,\"85\":2,\"86\":1,\"87\":1,\"89\":1,\"142\":1,\"145\":1,\"387\":1,\"397\":1,\"401\":1}}],[\"constructor\",{\"0\":{\"161\":1,\"173\":1,\"187\":1,\"196\":1,\"205\":1,\"216\":1,\"245\":1,\"273\":1,\"290\":1,\"308\":1,\"327\":1,\"367\":1,\"393\":1,\"411\":1,\"440\":1,\"465\":1},\"1\":{\"158\":1,\"170\":1,\"184\":1,\"193\":1,\"202\":1,\"212\":1,\"218\":1,\"241\":1,\"247\":1,\"270\":1,\"286\":1,\"304\":1,\"324\":1,\"363\":1,\"369\":1,\"390\":1,\"407\":1,\"413\":1,\"436\":1,\"442\":1,\"462\":1}}],[\"constructors\",{\"0\":{\"158\":1,\"160\":1,\"170\":1,\"172\":1,\"184\":1,\"186\":1,\"193\":1,\"195\":1,\"202\":1,\"204\":1,\"212\":1,\"215\":1,\"241\":1,\"244\":1,\"270\":1,\"272\":1,\"286\":1,\"289\":1,\"304\":1,\"307\":1,\"324\":1,\"326\":1,\"363\":1,\"366\":1,\"390\":1,\"392\":1,\"407\":1,\"410\":1,\"436\":1,\"439\":1,\"462\":1,\"464\":1}}],[\"const\",{\"1\":{\"1\":1,\"45\":2,\"46\":1,\"49\":1,\"50\":1,\"84\":2,\"85\":1,\"87\":1}}],[\"could\",{\"1\":{\"1\":2}}],[\"t\",{\"1\":{\"85\":1}}],[\"truthy\",{\"0\":{\"423\":1},\"1\":{\"404\":2,\"408\":1,\"411\":1,\"412\":2}}],[\"true\",{\"1\":{\"50\":1,\"51\":1,\"60\":1,\"63\":2,\"72\":1,\"77\":2,\"79\":2,\"82\":2,\"127\":1,\"141\":1,\"144\":1,\"348\":1,\"396\":1,\"400\":1}}],[\"trigger\",{\"1\":{\"89\":1}}],[\"trying\",{\"1\":{\"56\":1}}],[\"treated\",{\"1\":{\"53\":1}}],[\"track\",{\"1\":{\"45\":1,\"284\":1}}],[\"translating\",{\"1\":{\"49\":1,\"53\":2,\"85\":1}}],[\"translations\",{\"1\":{\"1\":1,\"32\":1,\"42\":1,\"46\":3,\"49\":1,\"50\":1,\"84\":6,\"86\":1,\"87\":2,\"114\":1,\"117\":1,\"120\":1,\"330\":1,\"334\":1,\"338\":1}}],[\"translation\",{\"0\":{\"11\":1,\"49\":1,\"83\":1,\"85\":1},\"1\":{\"1\":4,\"9\":1,\"10\":1,\"19\":1,\"20\":2,\"26\":1,\"27\":2,\"28\":1,\"29\":1,\"30\":2,\"32\":1,\"33\":3,\"35\":1,\"38\":1,\"42\":1,\"43\":2,\"47\":1,\"49\":2,\"50\":1,\"70\":1,\"72\":1,\"80\":1,\"87\":1,\"88\":2,\"123\":2,\"125\":2,\"127\":1,\"130\":1,\"131\":1,\"133\":1,\"134\":2,\"152\":5,\"153\":1,\"168\":1,\"174\":2,\"177\":1,\"179\":1,\"220\":1,\"223\":1,\"249\":1,\"252\":1,\"284\":1,\"301\":1,\"311\":1,\"312\":1,\"342\":2,\"345\":2,\"348\":1,\"352\":1,\"353\":1,\"356\":1,\"357\":2,\"371\":1,\"373\":1,\"415\":1,\"418\":1,\"444\":1,\"446\":1,\"468\":5,\"469\":1}}],[\"translatable\",{\"1\":{\"44\":1,\"45\":1}}],[\"translatoroptions\",{\"0\":{\"41\":1},\"1\":{\"16\":1,\"41\":1,\"466\":1}}],[\"translatorinterface\",{\"0\":{\"147\":1},\"1\":{\"15\":1,\"459\":1,\"460\":1,\"471\":1}}],[\"translator\",{\"0\":{\"459\":1},\"1\":{\"14\":1,\"27\":1,\"41\":1,\"42\":1,\"50\":1,\"84\":6,\"85\":3,\"89\":1,\"147\":1,\"148\":1,\"152\":1,\"465\":1,\"466\":1,\"468\":1}}],[\"translates\",{\"1\":{\"152\":1,\"468\":1}}],[\"translated\",{\"1\":{\"46\":1}}],[\"translate\",{\"0\":{\"152\":1,\"468\":1},\"1\":{\"11\":1,\"27\":1,\"45\":1,\"50\":1,\"85\":6,\"89\":1,\"150\":1,\"152\":1,\"153\":1,\"463\":1,\"468\":1,\"469\":1,\"471\":1}}],[\"transpiled\",{\"1\":{\"8\":1}}],[\"transax\",{\"1\":{\"1\":3,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"7\":1,\"9\":1,\"11\":1,\"19\":1,\"25\":1,\"32\":1,\"42\":1,\"46\":1,\"49\":2,\"50\":1,\"52\":1,\"82\":1,\"84\":1,\"86\":1}}],[\"times\",{\"1\":{\"51\":2,\"127\":1,\"348\":1}}],[\"time\",{\"1\":{\"46\":1,\"50\":1,\"84\":1}}],[\"tips\",{\"1\":{\"1\":1,\"46\":1,\"49\":1,\"50\":1,\"72\":1,\"79\":1,\"85\":1}}],[\"tail\",{\"0\":{\"226\":1},\"1\":{\"213\":1,\"216\":1,\"217\":1}}],[\"target\",{\"1\":{\"131\":1,\"134\":2,\"353\":1,\"357\":2}}],[\"task\",{\"1\":{\"45\":1}}],[\"table\",{\"0\":{\"13\":1,\"92\":1,\"100\":1,\"111\":1,\"138\":1,\"149\":1,\"157\":1,\"169\":1,\"183\":1,\"192\":1,\"201\":1,\"211\":1,\"240\":1,\"269\":1,\"285\":1,\"303\":1,\"323\":1,\"362\":1,\"389\":1,\"406\":1,\"435\":1,\"461\":1}}],[\"two\",{\"1\":{\"45\":1,\"64\":1,\"67\":1,\"81\":1,\"238\":1}}],[\"type\",{\"0\":{\"16\":1,\"17\":1,\"19\":1,\"25\":1,\"27\":1,\"32\":1,\"35\":1,\"40\":1,\"42\":1},\"1\":{\"19\":1,\"25\":1,\"27\":1,\"32\":1,\"36\":1,\"40\":1,\"42\":1,\"58\":1,\"61\":1,\"79\":2,\"96\":1,\"104\":1,\"107\":1,\"115\":1,\"118\":1,\"121\":1,\"128\":1,\"131\":1,\"134\":1,\"142\":2,\"145\":2,\"153\":1,\"162\":1,\"165\":1,\"174\":1,\"188\":1,\"197\":1,\"206\":1,\"217\":1,\"231\":1,\"235\":1,\"246\":1,\"260\":1,\"264\":1,\"274\":1,\"277\":1,\"281\":1,\"296\":1,\"299\":1,\"309\":1,\"316\":1,\"319\":1,\"328\":1,\"331\":1,\"335\":1,\"339\":1,\"349\":1,\"353\":1,\"357\":1,\"368\":1,\"380\":1,\"384\":1,\"394\":1,\"397\":2,\"401\":2,\"412\":1,\"426\":1,\"430\":1,\"441\":1,\"452\":1,\"456\":1,\"466\":1,\"469\":1}}],[\"typescript\",{\"1\":{\"5\":1,\"8\":1,\"52\":1}}],[\"types\",{\"1\":{\"1\":1,\"234\":1,\"235\":1,\"263\":1,\"264\":1,\"318\":1,\"319\":1,\"383\":1,\"384\":1,\"429\":1,\"430\":1,\"455\":1,\"456\":1}}],[\"test\",{\"0\":{\"420\":1},\"1\":{\"72\":2,\"404\":1,\"408\":1,\"411\":1,\"412\":2}}],[\"ternary\",{\"0\":{\"58\":1,\"64\":1},\"1\":{\"57\":1,\"58\":2,\"59\":1,\"62\":1,\"64\":1,\"65\":3,\"404\":1}}],[\"ternaryexpressiontoken\",{\"0\":{\"404\":1},\"1\":{\"14\":1,\"302\":1,\"405\":1,\"411\":1}}],[\"text\",{\"0\":{\"181\":1,\"227\":1,\"256\":1,\"313\":1,\"375\":1,\"421\":1,\"448\":1},\"1\":{\"53\":2,\"86\":1,\"171\":1,\"173\":1,\"174\":2,\"181\":1,\"213\":1,\"216\":1,\"217\":2,\"227\":2,\"228\":1,\"242\":1,\"245\":1,\"246\":2,\"256\":2,\"257\":1,\"305\":1,\"308\":1,\"309\":2,\"313\":2,\"364\":1,\"367\":1,\"368\":2,\"375\":2,\"376\":1,\"408\":1,\"411\":1,\"412\":2,\"421\":2,\"422\":1,\"433\":2,\"437\":1,\"440\":1,\"441\":1,\"448\":2,\"449\":1}}],[\"texttoken\",{\"0\":{\"433\":1},\"1\":{\"14\":1,\"302\":1,\"434\":1,\"440\":1}}],[\"template\",{\"1\":{\"47\":1}}],[\"tempted\",{\"1\":{\"1\":1}}],[\"tedious\",{\"1\":{\"45\":1}}],[\"tsx\",{\"1\":{\"7\":1}}],[\"those\",{\"1\":{\"123\":1,\"125\":1,\"342\":1,\"345\":1}}],[\"than\",{\"1\":{\"81\":4}}],[\"that\",{\"1\":{\"1\":2,\"47\":1,\"50\":1,\"51\":3,\"58\":1,\"61\":1,\"88\":2,\"123\":1,\"125\":1,\"127\":1,\"142\":1,\"145\":1,\"152\":1,\"234\":1,\"263\":1,\"284\":1,\"318\":1,\"342\":1,\"345\":1,\"348\":1,\"383\":1,\"397\":1,\"401\":1,\"404\":1,\"429\":1,\"433\":1,\"455\":1,\"468\":1}}],[\"thrown\",{\"1\":{\"53\":1}}],[\"thing\",{\"1\":{\"53\":1}}],[\"third\",{\"1\":{\"51\":2,\"127\":1,\"348\":1}}],[\"this\",{\"1\":{\"1\":7,\"44\":1,\"45\":1,\"46\":2,\"47\":1,\"49\":2,\"50\":2,\"51\":2,\"52\":1,\"53\":1,\"79\":3,\"85\":1,\"88\":1,\"89\":1,\"114\":1,\"127\":2,\"284\":1,\"330\":1,\"348\":2}}],[\"these\",{\"1\":{\"87\":1,\"88\":1,\"89\":1,\"142\":1,\"145\":1,\"397\":1,\"401\":1}}],[\"them\",{\"1\":{\"45\":2,\"46\":1,\"84\":1,\"87\":1,\"88\":1,\"127\":1,\"348\":1}}],[\"there\",{\"1\":{\"20\":1,\"30\":1,\"43\":1}}],[\"then\",{\"1\":{\"9\":1,\"46\":1,\"103\":1,\"276\":1}}],[\"their\",{\"1\":{\"1\":1,\"50\":1}}],[\"they\",{\"1\":{\"1\":2,\"79\":1,\"80\":2}}],[\"the\",{\"0\":{\"45\":1,\"46\":1},\"1\":{\"1\":27,\"3\":1,\"4\":1,\"6\":1,\"8\":1,\"11\":2,\"18\":1,\"19\":4,\"24\":1,\"27\":3,\"31\":1,\"35\":2,\"40\":2,\"41\":1,\"45\":1,\"46\":2,\"47\":2,\"49\":5,\"50\":5,\"51\":9,\"52\":7,\"53\":9,\"56\":2,\"57\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":1,\"64\":1,\"70\":1,\"71\":1,\"72\":2,\"79\":1,\"81\":9,\"82\":1,\"84\":2,\"85\":8,\"86\":1,\"87\":1,\"88\":4,\"89\":4,\"95\":1,\"96\":3,\"103\":1,\"104\":1,\"106\":1,\"107\":1,\"114\":4,\"115\":2,\"117\":1,\"118\":2,\"120\":1,\"121\":2,\"123\":1,\"125\":2,\"127\":10,\"128\":4,\"130\":2,\"133\":2,\"142\":1,\"145\":1,\"152\":14,\"153\":1,\"155\":1,\"162\":1,\"164\":1,\"165\":3,\"174\":12,\"176\":3,\"177\":2,\"178\":3,\"179\":2,\"180\":3,\"181\":2,\"188\":1,\"206\":2,\"209\":1,\"217\":8,\"220\":3,\"223\":3,\"227\":2,\"230\":1,\"231\":2,\"234\":3,\"235\":3,\"246\":10,\"249\":3,\"252\":3,\"256\":2,\"259\":1,\"260\":2,\"263\":3,\"264\":3,\"267\":1,\"274\":1,\"276\":1,\"277\":1,\"280\":1,\"281\":1,\"284\":2,\"292\":1,\"293\":1,\"295\":1,\"296\":2,\"298\":1,\"299\":2,\"309\":5,\"311\":3,\"312\":3,\"313\":2,\"315\":1,\"316\":2,\"318\":3,\"319\":3,\"321\":1,\"328\":1,\"330\":4,\"331\":2,\"334\":1,\"335\":2,\"338\":1,\"339\":2,\"342\":1,\"345\":2,\"348\":10,\"349\":4,\"352\":2,\"356\":2,\"368\":7,\"371\":3,\"373\":3,\"375\":2,\"379\":1,\"380\":2,\"383\":3,\"384\":3,\"387\":2,\"394\":1,\"397\":1,\"401\":1,\"404\":5,\"412\":8,\"415\":3,\"418\":3,\"421\":2,\"425\":1,\"426\":2,\"429\":3,\"430\":3,\"444\":3,\"446\":3,\"448\":2,\"451\":1,\"452\":2,\"455\":3,\"456\":3,\"459\":1,\"466\":1,\"468\":14,\"469\":1}}],[\"too\",{\"1\":{\"152\":1,\"468\":1}}],[\"tokenizes\",{\"1\":{\"103\":1,\"106\":1,\"276\":1,\"280\":1}}],[\"tokenize\",{\"0\":{\"106\":1,\"280\":1},\"1\":{\"101\":1,\"104\":1,\"106\":1,\"107\":1,\"271\":1,\"277\":1,\"280\":1,\"281\":1,\"283\":1}}],[\"tokens\",{\"1\":{\"95\":1,\"164\":1}}],[\"token\",{\"1\":{\"1\":3,\"34\":1,\"35\":1,\"36\":1,\"234\":1,\"263\":1,\"318\":1,\"383\":1,\"429\":1,\"433\":1,\"455\":1}}],[\"to\",{\"1\":{\"1\":16,\"7\":2,\"9\":1,\"10\":2,\"11\":1,\"19\":5,\"20\":1,\"25\":1,\"26\":1,\"27\":4,\"28\":1,\"29\":1,\"30\":1,\"32\":4,\"33\":1,\"35\":1,\"40\":2,\"42\":3,\"43\":1,\"44\":1,\"45\":3,\"46\":9,\"47\":2,\"49\":1,\"50\":8,\"51\":5,\"52\":1,\"53\":1,\"56\":2,\"58\":1,\"61\":1,\"64\":1,\"67\":1,\"70\":1,\"72\":1,\"73\":2,\"80\":1,\"81\":3,\"84\":4,\"85\":10,\"86\":1,\"87\":4,\"89\":3,\"96\":2,\"104\":1,\"107\":1,\"114\":1,\"115\":2,\"118\":1,\"121\":1,\"127\":3,\"128\":3,\"142\":1,\"145\":1,\"153\":1,\"165\":2,\"174\":1,\"180\":1,\"188\":1,\"197\":1,\"199\":1,\"206\":1,\"231\":1,\"235\":2,\"260\":1,\"264\":2,\"277\":1,\"281\":1,\"284\":2,\"295\":1,\"298\":1,\"316\":1,\"319\":2,\"330\":1,\"331\":2,\"335\":1,\"339\":1,\"348\":3,\"349\":3,\"380\":1,\"384\":2,\"387\":1,\"397\":1,\"401\":1,\"426\":1,\"430\":2,\"452\":1,\"456\":2,\"469\":1}}],[\"identical\",{\"1\":{\"81\":2}}],[\"identifiers\",{\"1\":{\"80\":1,\"82\":1}}],[\"identifier\",{\"0\":{\"80\":1},\"1\":{\"71\":2,\"209\":2,\"217\":2}}],[\"identifying\",{\"1\":{\"40\":1}}],[\"identify\",{\"1\":{\"33\":1}}],[\"ignored\",{\"1\":{\"51\":1,\"88\":1}}],[\"implements\",{\"0\":{\"156\":1,\"268\":1,\"322\":1,\"388\":1,\"460\":1}}],[\"implementation\",{\"0\":{\"167\":1,\"279\":1,\"283\":1,\"333\":1,\"337\":1,\"341\":1,\"344\":1,\"347\":1,\"351\":1,\"355\":1,\"359\":1,\"399\":1,\"403\":1,\"471\":1},\"1\":{\"142\":1,\"145\":1,\"155\":1,\"267\":1,\"321\":1,\"387\":1,\"397\":1,\"401\":1,\"459\":1}}],[\"implemented\",{\"0\":{\"91\":1,\"99\":1,\"110\":1,\"137\":1,\"148\":1}}],[\"importing\",{\"0\":{\"52\":1}}],[\"import\",{\"1\":{\"1\":1,\"46\":1,\"50\":2,\"52\":3,\"84\":2}}],[\"imagine\",{\"1\":{\"1\":1}}],[\"inherit\",{\"1\":{\"441\":1}}],[\"inherited\",{\"0\":{\"221\":1,\"224\":1,\"228\":1,\"237\":1,\"250\":1,\"253\":1,\"257\":1,\"266\":1,\"372\":1,\"374\":1,\"376\":1,\"386\":1,\"416\":1,\"419\":1,\"422\":1,\"432\":1,\"445\":1,\"447\":1,\"449\":1,\"458\":1}}],[\"inject\",{\"1\":{\"86\":1}}],[\"initialize\",{\"1\":{\"84\":1}}],[\"initialization\",{\"0\":{\"84\":1}}],[\"index\",{\"1\":{\"72\":1,\"188\":1}}],[\"invocations\",{\"1\":{\"217\":1}}],[\"invocation\",{\"1\":{\"168\":1,\"174\":2,\"176\":1,\"178\":1,\"181\":1,\"191\":1,\"209\":1,\"217\":1,\"246\":1,\"309\":1,\"368\":1,\"412\":1}}],[\"invoking\",{\"1\":{\"87\":1}}],[\"invoked\",{\"1\":{\"89\":1,\"174\":1,\"179\":1}}],[\"invoke\",{\"1\":{\"70\":1,\"85\":1,\"88\":1}}],[\"invalid\",{\"1\":{\"53\":1}}],[\"inserted\",{\"1\":{\"53\":1}}],[\"install\",{\"1\":{\"3\":2,\"4\":1}}],[\"installation\",{\"0\":{\"2\":1}}],[\"instanceofs\",{\"1\":{\"234\":1,\"235\":1,\"263\":1,\"264\":1,\"318\":1,\"319\":1,\"383\":1,\"384\":1,\"429\":1,\"430\":1,\"455\":1,\"456\":1}}],[\"instances\",{\"1\":{\"106\":1,\"280\":1}}],[\"instance\",{\"1\":{\"1\":1,\"19\":1,\"25\":1,\"32\":3,\"42\":1,\"161\":1,\"173\":1,\"187\":1,\"196\":1,\"205\":1,\"216\":1,\"234\":1,\"245\":1,\"263\":1,\"273\":1,\"308\":1,\"318\":1,\"327\":1,\"367\":1,\"383\":1,\"393\":1,\"411\":1,\"429\":1,\"455\":1,\"465\":1}}],[\"instead\",{\"1\":{\"1\":4,\"46\":1,\"49\":1,\"51\":1,\"52\":1,\"53\":1,\"72\":1,\"85\":1,\"86\":1,\"127\":1,\"152\":2,\"348\":1,\"468\":2}}],[\"include\",{\"1\":{\"115\":1,\"118\":1,\"121\":1,\"331\":1,\"335\":1,\"339\":1}}],[\"includemeta\",{\"1\":{\"114\":1,\"115\":1,\"117\":1,\"118\":1,\"120\":1,\"121\":1,\"330\":1,\"331\":1,\"334\":1,\"335\":1,\"338\":1,\"339\":1}}],[\"including\",{\"1\":{\"7\":1}}],[\"incorrect\",{\"1\":{\"51\":1,\"127\":1,\"348\":1}}],[\"integer\",{\"1\":{\"79\":1}}],[\"integrated\",{\"1\":{\"6\":1}}],[\"interface\",{\"0\":{\"90\":1,\"98\":1,\"109\":1,\"136\":1,\"147\":1},\"1\":{\"90\":1,\"98\":1,\"109\":1,\"136\":1,\"147\":1}}],[\"interfaces\",{\"0\":{\"15\":1,\"473\":1}}],[\"interpolated\",{\"1\":{\"87\":1}}],[\"interpolate\",{\"1\":{\"56\":1,\"86\":1}}],[\"interpolation\",{\"0\":{\"53\":1,\"86\":1},\"1\":{\"11\":1,\"47\":1}}],[\"internationalization\",{\"1\":{\"5\":1,\"86\":1}}],[\"introduction\",{\"0\":{\"5\":1}}],[\"into\",{\"1\":{\"1\":1,\"11\":1,\"49\":1,\"50\":1,\"86\":1,\"87\":1,\"103\":1,\"106\":1,\"230\":1,\"259\":1,\"276\":1,\"280\":1,\"315\":1,\"379\":1,\"425\":1,\"451\":1}}],[\"infer\",{\"1\":{\"1\":1}}],[\"information\",{\"1\":{\"1\":1,\"44\":1,\"50\":1,\"51\":1,\"115\":1,\"118\":1,\"121\":1,\"127\":1,\"331\":1,\"335\":1,\"339\":1,\"348\":1}}],[\"in\",{\"1\":{\"1\":9,\"8\":1,\"10\":1,\"27\":1,\"45\":2,\"47\":2,\"49\":1,\"50\":1,\"51\":3,\"53\":1,\"58\":2,\"61\":2,\"79\":2,\"82\":1,\"84\":2,\"86\":1,\"87\":1,\"89\":1,\"114\":1,\"115\":1,\"118\":1,\"121\":1,\"123\":1,\"125\":2,\"127\":4,\"152\":4,\"234\":1,\"263\":1,\"284\":1,\"292\":1,\"293\":1,\"318\":1,\"330\":1,\"331\":1,\"335\":1,\"339\":1,\"342\":1,\"345\":2,\"348\":4,\"383\":1,\"429\":1,\"455\":1,\"468\":4}}],[\"if\",{\"1\":{\"1\":1,\"27\":1,\"45\":1,\"51\":1,\"52\":2,\"53\":1,\"70\":2,\"114\":1,\"127\":2,\"152\":6,\"234\":1,\"263\":1,\"318\":1,\"330\":1,\"348\":2,\"383\":1,\"404\":1,\"429\":1,\"455\":1,\"468\":6}}],[\"isverbose\",{\"1\":{\"144\":1,\"400\":1}}],[\"issilent\",{\"1\":{\"141\":1,\"144\":1,\"396\":1,\"400\":1}}],[\"issue\",{\"1\":{\"1\":1}}],[\"is\",{\"1\":{\"1\":3,\"2\":1,\"5\":1,\"6\":1,\"7\":1,\"10\":1,\"45\":1,\"47\":1,\"51\":1,\"53\":4,\"58\":1,\"61\":1,\"64\":1,\"67\":1,\"70\":1,\"72\":1,\"79\":4,\"81\":4,\"84\":1,\"85\":3,\"89\":1,\"114\":1,\"127\":2,\"141\":1,\"144\":2,\"152\":4,\"217\":1,\"234\":1,\"263\":1,\"318\":1,\"330\":1,\"348\":2,\"383\":1,\"396\":1,\"400\":2,\"429\":1,\"433\":1,\"455\":1,\"468\":4}}],[\"i\",{\"1\":{\"1\":1,\"433\":1}}],[\"iteratively\",{\"1\":{\"127\":1,\"348\":1}}],[\"items\",{\"1\":{\"1\":1,\"70\":1}}],[\"its\",{\"1\":{\"1\":1,\"7\":1,\"43\":1,\"47\":1,\"53\":1,\"70\":2,\"86\":1}}],[\"it\",{\"1\":{\"1\":2,\"3\":1,\"4\":1,\"6\":1,\"45\":1,\"47\":5,\"49\":1,\"50\":1,\"52\":1,\"70\":1,\"84\":1,\"85\":1,\"89\":1,\"103\":1,\"106\":1,\"127\":2,\"152\":1,\"209\":1,\"234\":1,\"238\":1,\"263\":1,\"276\":1,\"280\":1,\"318\":1,\"348\":2,\"383\":1,\"429\":1,\"455\":1,\"468\":1}}],[\"symbol\",{\"1\":{\"72\":1,\"80\":1}}],[\"syntaxerror\",{\"1\":{\"89\":2}}],[\"syntax\",{\"0\":{\"54\":1,\"57\":1,\"59\":1,\"62\":1,\"65\":1,\"68\":1,\"71\":1,\"74\":1,\"76\":1},\"1\":{\"7\":1,\"47\":1,\"52\":2,\"53\":1,\"56\":1,\"58\":1,\"61\":1}}],[\"safe\",{\"0\":{\"58\":1,\"61\":1},\"1\":{\"58\":1,\"61\":1,\"65\":3,\"68\":2}}],[\"saves\",{\"1\":{\"127\":1,\"348\":1}}],[\"saved\",{\"1\":{\"84\":1}}],[\"save\",{\"1\":{\"50\":1}}],[\"same\",{\"1\":{\"1\":1,\"51\":1,\"52\":1,\"79\":1,\"89\":1,\"127\":2,\"128\":1,\"234\":1,\"263\":1,\"318\":1,\"348\":2,\"349\":1,\"383\":1,\"429\":1,\"455\":1}}],[\"side\",{\"1\":{\"246\":2}}],[\"signs\",{\"1\":{\"80\":1}}],[\"sign\",{\"1\":{\"79\":1,\"87\":1}}],[\"since\",{\"1\":{\"52\":1}}],[\"single\",{\"1\":{\"47\":1,\"79\":1,\"168\":1,\"301\":1}}],[\"simplicity\",{\"1\":{\"7\":1}}],[\"simple\",{\"1\":{\"1\":1}}],[\"simply\",{\"1\":{\"1\":1,\"47\":1,\"85\":2}}],[\"scan\",{\"1\":{\"44\":1}}],[\"specification\",{\"1\":{\"49\":1}}],[\"specifies\",{\"1\":{\"40\":1,\"217\":1}}],[\"specified\",{\"1\":{\"27\":2,\"130\":1,\"133\":1,\"152\":7,\"234\":1,\"263\":1,\"318\":1,\"352\":1,\"356\":1,\"383\":1,\"429\":1,\"455\":1,\"468\":7}}],[\"specify\",{\"1\":{\"1\":1,\"84\":1,\"85\":1,\"87\":1}}],[\"sfcs\",{\"1\":{\"7\":1}}],[\"such\",{\"1\":{\"360\":1}}],[\"successfully\",{\"1\":{\"84\":1}}],[\"sure\",{\"1\":{\"1\":1,\"45\":1,\"46\":1}}],[\"supports\",{\"1\":{\"52\":1}}],[\"support\",{\"1\":{\"1\":1,\"47\":2}}],[\"s\",{\"1\":{\"1\":1,\"85\":1}}],[\"should\",{\"1\":{\"1\":1,\"51\":1,\"284\":1}}],[\"short\",{\"1\":{\"1\":2}}],[\"still\",{\"1\":{\"52\":1}}],[\"store\",{\"1\":{\"49\":1,\"50\":2,\"87\":4,\"89\":1,\"115\":1,\"331\":1}}],[\"static\",{\"1\":{\"47\":1,\"53\":1,\"75\":1,\"79\":1,\"86\":1,\"360\":1}}],[\"start\",{\"1\":{\"1\":1,\"80\":1}}],[\"strength\",{\"1\":{\"86\":1}}],[\"streaming\",{\"1\":{\"127\":1,\"348\":1}}],[\"stream\",{\"1\":{\"51\":1}}],[\"strict\",{\"1\":{\"53\":1}}],[\"string>\",{\"1\":{\"46\":2,\"50\":2}}],[\"strings\",{\"1\":{\"44\":1,\"45\":2,\"46\":3,\"47\":1,\"79\":2}}],[\"string\",{\"1\":{\"11\":1,\"19\":1,\"23\":2,\"33\":2,\"34\":1,\"35\":1,\"37\":1,\"38\":2,\"40\":1,\"43\":2,\"47\":2,\"53\":1,\"77\":2,\"79\":5,\"96\":2,\"103\":3,\"104\":2,\"105\":1,\"106\":1,\"107\":2,\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"119\":1,\"120\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"128\":2,\"131\":1,\"134\":1,\"152\":1,\"153\":1,\"154\":1,\"165\":2,\"174\":4,\"177\":1,\"179\":1,\"180\":1,\"181\":1,\"206\":1,\"208\":1,\"217\":2,\"225\":1,\"227\":1,\"230\":2,\"232\":1,\"234\":1,\"236\":1,\"246\":2,\"254\":1,\"256\":1,\"259\":2,\"261\":1,\"263\":1,\"265\":1,\"276\":3,\"277\":2,\"278\":1,\"280\":1,\"281\":2,\"292\":1,\"293\":1,\"296\":1,\"299\":1,\"309\":1,\"313\":1,\"315\":2,\"317\":1,\"318\":1,\"320\":1,\"330\":1,\"331\":1,\"332\":1,\"334\":1,\"336\":1,\"338\":1,\"340\":1,\"342\":1,\"343\":1,\"345\":1,\"346\":1,\"349\":2,\"353\":1,\"357\":1,\"360\":1,\"368\":2,\"375\":1,\"377\":1,\"379\":2,\"381\":1,\"383\":1,\"385\":1,\"412\":1,\"421\":1,\"425\":2,\"427\":1,\"429\":1,\"431\":1,\"441\":1,\"448\":1,\"451\":2,\"453\":1,\"455\":1,\"457\":1,\"468\":1,\"469\":1,\"470\":1}}],[\"structure\",{\"1\":{\"1\":1}}],[\"strategy\",{\"1\":{\"1\":2}}],[\"set\",{\"1\":{\"127\":1,\"348\":1}}],[\"settranslations\",{\"0\":{\"133\":1,\"356\":1},\"1\":{\"112\":1,\"133\":1,\"325\":1,\"356\":1,\"359\":1}}],[\"section\",{\"1\":{\"85\":1}}],[\"second\",{\"1\":{\"1\":1}}],[\"see\",{\"1\":{\"1\":1,\"85\":1}}],[\"separator\",{\"1\":{\"1\":3}}],[\"separated\",{\"1\":{\"1\":2,\"74\":1,\"209\":1,\"238\":1}}],[\"sequence\",{\"1\":{\"1\":1,\"79\":1,\"106\":1,\"280\":1}}],[\"solution\",{\"0\":{\"46\":1},\"1\":{\"6\":1}}],[\"source\",{\"0\":{\"180\":1},\"1\":{\"1\":1,\"44\":1,\"47\":1,\"51\":5,\"52\":1,\"95\":2,\"96\":4,\"104\":1,\"107\":1,\"115\":1,\"118\":1,\"121\":1,\"123\":1,\"125\":1,\"127\":7,\"128\":5,\"164\":2,\"165\":4,\"168\":1,\"171\":1,\"173\":1,\"174\":4,\"176\":1,\"178\":1,\"180\":2,\"217\":1,\"246\":1,\"277\":1,\"281\":1,\"309\":1,\"331\":1,\"335\":1,\"339\":1,\"342\":1,\"345\":1,\"348\":7,\"349\":5,\"368\":1,\"412\":1}}],[\"something\",{\"1\":{\"49\":1,\"50\":1}}],[\"some\",{\"1\":{\"1\":2,\"72\":1,\"168\":1}}],[\"so\",{\"1\":{\"1\":2,\"6\":1,\"49\":1,\"85\":1,\"86\":1}}],[\"smart\",{\"1\":{\"1\":1}}],[\"big\",{\"1\":{\"88\":1}}],[\"b\",{\"1\":{\"60\":1,\"238\":1,\"404\":2}}],[\"brackets\",{\"1\":{\"58\":1,\"61\":1,\"433\":1}}],[\"braces\",{\"1\":{\"53\":2,\"56\":1}}],[\"booleans\",{\"1\":{\"79\":1}}],[\"boolean\",{\"1\":{\"40\":1,\"79\":1,\"115\":1,\"118\":1,\"121\":1,\"128\":1,\"217\":1,\"222\":1,\"331\":1,\"335\":1,\"339\":1,\"349\":1,\"368\":1,\"377\":1}}],[\"both\",{\"1\":{\"8\":1,\"45\":1,\"52\":1}}],[\"ba\",{\"1\":{\"238\":7}}],[\"baf\",{\"1\":{\"72\":1}}],[\"baz\",{\"1\":{\"72\":1}}],[\"bar\",{\"1\":{\"72\":2}}],[\"based\",{\"1\":{\"19\":1,\"35\":1,\"127\":1,\"152\":1,\"348\":1,\"468\":1}}],[\"backslashes\",{\"1\":{\"79\":1}}],[\"backslash\",{\"1\":{\"79\":2}}],[\"backticks\",{\"1\":{\"79\":1}}],[\"back\",{\"1\":{\"9\":1}}],[\"build\",{\"1\":{\"46\":1}}],[\"building\",{\"1\":{\"1\":1}}],[\"but\",{\"1\":{\"45\":1,\"49\":1,\"51\":1,\"52\":1,\"123\":1,\"125\":1,\"342\":1,\"345\":1}}],[\"bundled\",{\"1\":{\"8\":1}}],[\"by\",{\"0\":{\"91\":1,\"99\":1,\"110\":1,\"137\":1,\"148\":1},\"1\":{\"1\":2,\"20\":1,\"47\":1,\"51\":1,\"53\":1,\"59\":2,\"62\":4,\"65\":4,\"68\":2,\"71\":7,\"74\":1,\"79\":1,\"85\":1,\"127\":1,\"209\":7,\"238\":1,\"348\":1}}],[\"below\",{\"1\":{\"85\":1}}],[\"between\",{\"1\":{\"53\":1,\"56\":1}}],[\"best\",{\"1\":{\"49\":1}}],[\"become\",{\"1\":{\"1\":1}}],[\"be\",{\"1\":{\"1\":8,\"6\":1,\"10\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"45\":1,\"46\":2,\"47\":1,\"51\":4,\"52\":1,\"53\":4,\"56\":1,\"58\":1,\"61\":1,\"79\":2,\"80\":2,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"87\":1,\"96\":1,\"114\":2,\"127\":2,\"128\":1,\"142\":1,\"145\":1,\"152\":4,\"165\":1,\"188\":1,\"197\":1,\"199\":1,\"209\":1,\"284\":1,\"330\":2,\"348\":2,\"349\":1,\"397\":1,\"401\":1,\"468\":4}}],[\"avoid\",{\"1\":{\"58\":1,\"61\":1}}],[\"available\",{\"1\":{\"27\":2,\"87\":1}}],[\"automatically\",{\"1\":{\"52\":1,\"87\":1}}],[\"accesses\",{\"1\":{\"217\":2}}],[\"accessing\",{\"1\":{\"182\":1,\"200\":1}}],[\"access\",{\"1\":{\"70\":2,\"80\":1,\"206\":1,\"209\":2}}],[\"accumulated\",{\"1\":{\"127\":1,\"348\":1}}],[\"accumulate\",{\"1\":{\"51\":2,\"127\":4,\"128\":2,\"348\":4,\"349\":2}}],[\"accumulation\",{\"0\":{\"51\":1},\"1\":{\"51\":2}}],[\"actual\",{\"1\":{\"53\":1}}],[\"actually\",{\"1\":{\"1\":1,\"49\":1}}],[\"against\",{\"1\":{\"46\":1}}],[\"agnostic\",{\"0\":{\"6\":1,\"7\":1}}],[\"already\",{\"1\":{\"295\":1,\"298\":1}}],[\"alias\",{\"1\":{\"85\":1}}],[\"aliases\",{\"0\":{\"16\":1,\"17\":1}}],[\"also\",{\"1\":{\"79\":1,\"87\":1}}],[\"almost\",{\"1\":{\"47\":1}}],[\"always\",{\"1\":{\"46\":1}}],[\"allowed\",{\"1\":{\"89\":1}}],[\"allows\",{\"1\":{\"44\":1}}],[\"all\",{\"1\":{\"1\":3,\"46\":1,\"51\":1,\"87\":1,\"387\":1}}],[\"api\",{\"0\":{\"12\":1},\"1\":{\"52\":1}}],[\"application\",{\"1\":{\"1\":1,\"49\":1,\"53\":1,\"84\":1,\"85\":1}}],[\"applications\",{\"1\":{\"1\":1}}],[\"apps\",{\"1\":{\"1\":1}}],[\"appropriately\",{\"1\":{\"1\":1}}],[\"appropriate\",{\"1\":{\"1\":1}}],[\"abstractcompile\",{\"1\":{\"315\":1}}],[\"abstract\",{\"1\":{\"301\":1}}],[\"ability\",{\"1\":{\"86\":1}}],[\"above\",{\"1\":{\"49\":1,\"50\":1}}],[\"about\",{\"1\":{\"1\":1,\"50\":1,\"51\":1,\"85\":1,\"115\":1,\"118\":1,\"121\":1,\"127\":1,\"331\":1,\"335\":1,\"339\":1,\"348\":1}}],[\"able\",{\"1\":{\"7\":1,\"9\":1}}],[\"args\",{\"1\":{\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"396\":1,\"397\":1,\"400\":1,\"401\":1}}],[\"arguments\",{\"0\":{\"73\":1},\"1\":{\"71\":1,\"73\":1,\"142\":1,\"145\":1,\"197\":1,\"199\":1,\"397\":1,\"401\":1}}],[\"argument\",{\"1\":{\"1\":2,\"47\":1,\"50\":1,\"51\":2,\"85\":1,\"127\":1,\"348\":1}}],[\"architecture\",{\"1\":{\"85\":1}}],[\"array\",{\"1\":{\"70\":1,\"182\":1,\"188\":1,\"197\":1,\"199\":1,\"209\":1,\"217\":2}}],[\"are\",{\"1\":{\"1\":2,\"46\":3,\"52\":3,\"56\":1,\"73\":1,\"79\":1,\"80\":1,\"81\":5,\"82\":1,\"85\":1,\"88\":1,\"89\":1,\"123\":2,\"125\":2,\"284\":1,\"342\":2,\"345\":2}}],[\"another\",{\"1\":{\"72\":2}}],[\"anything\",{\"1\":{\"433\":1}}],[\"any>\",{\"1\":{\"28\":1,\"29\":1}}],[\"any\",{\"1\":{\"6\":1,\"7\":1,\"47\":1,\"49\":1,\"50\":1,\"53\":1,\"56\":1,\"88\":1,\"142\":2,\"145\":2,\"397\":2,\"401\":2,\"433\":1}}],[\"an\",{\"1\":{\"1\":1,\"56\":1,\"58\":2,\"61\":2,\"79\":1,\"85\":1,\"90\":1,\"98\":1,\"103\":1,\"109\":1,\"114\":1,\"117\":1,\"120\":1,\"127\":1,\"136\":1,\"147\":1,\"182\":1,\"197\":1,\"199\":1,\"200\":1,\"209\":4,\"217\":1,\"230\":1,\"234\":1,\"259\":1,\"263\":1,\"276\":1,\"301\":1,\"315\":1,\"318\":1,\"330\":1,\"334\":1,\"338\":1,\"348\":1,\"379\":1,\"383\":1,\"425\":1,\"429\":1,\"433\":1,\"451\":1,\"455\":1}}],[\"analyzes\",{\"1\":{\"51\":1,\"95\":1,\"164\":1}}],[\"analyze\",{\"0\":{\"95\":1,\"164\":1},\"1\":{\"9\":1,\"19\":1,\"93\":1,\"95\":1,\"159\":1,\"164\":1,\"167\":1}}],[\"analyzeroptions\",{\"0\":{\"18\":1},\"1\":{\"16\":1,\"18\":1,\"162\":1}}],[\"analyzerinterface\",{\"0\":{\"90\":1},\"1\":{\"15\":1,\"32\":1,\"155\":1,\"156\":1,\"167\":1}}],[\"analyzertoken\",{\"0\":{\"168\":1},\"1\":{\"1\":1,\"14\":1,\"34\":1,\"36\":1,\"95\":1,\"97\":1,\"164\":1,\"166\":1,\"173\":1}}],[\"analyzer\",{\"0\":{\"155\":1},\"1\":{\"1\":4,\"14\":1,\"18\":1,\"19\":1,\"32\":3,\"90\":1,\"91\":1,\"161\":1,\"162\":1}}],[\"analysis\",{\"0\":{\"9\":1,\"44\":1},\"1\":{\"1\":1,\"40\":1,\"46\":1,\"47\":1}}],[\"and\",{\"1\":{\"1\":8,\"7\":2,\"8\":1,\"9\":2,\"10\":1,\"44\":1,\"45\":1,\"46\":3,\"47\":1,\"50\":3,\"51\":3,\"52\":1,\"53\":4,\"56\":1,\"70\":1,\"80\":4,\"81\":1,\"82\":2,\"84\":2,\"88\":1,\"95\":1,\"103\":1,\"123\":1,\"125\":1,\"127\":1,\"152\":1,\"164\":1,\"276\":1,\"284\":2,\"342\":1,\"345\":1,\"348\":1,\"468\":1}}],[\"adds\",{\"1\":{\"133\":1,\"295\":1,\"298\":1,\"356\":1}}],[\"add\",{\"1\":{\"4\":1}}],[\"additional\",{\"1\":{\"1\":1,\"50\":1}}],[\"addition\",{\"1\":{\"1\":1,\"87\":1}}],[\"advanced\",{\"0\":{\"0\":1}}],[\"at\",{\"1\":{\"1\":1,\"11\":1,\"46\":1,\"47\":1,\"49\":1,\"53\":1,\"80\":1,\"86\":1,\"89\":1}}],[\"assume\",{\"1\":{\"52\":1}}],[\"as\",{\"1\":{\"1\":5,\"2\":1,\"30\":1,\"33\":1,\"38\":1,\"43\":1,\"46\":2,\"47\":2,\"49\":1,\"50\":3,\"51\":2,\"53\":2,\"58\":1,\"61\":1,\"70\":1,\"82\":1,\"85\":1,\"86\":1,\"88\":2,\"117\":1,\"120\":1,\"127\":3,\"152\":2,\"188\":1,\"197\":1,\"199\":1,\"234\":1,\"263\":1,\"318\":1,\"334\":1,\"338\":1,\"348\":3,\"360\":1,\"383\":1,\"429\":1,\"455\":1,\"468\":2}}],[\"a\",{\"1\":{\"1\":7,\"2\":1,\"5\":1,\"6\":1,\"10\":1,\"19\":1,\"21\":2,\"22\":2,\"23\":2,\"30\":1,\"33\":2,\"35\":1,\"38\":2,\"40\":1,\"43\":1,\"45\":2,\"47\":1,\"49\":2,\"50\":2,\"51\":2,\"53\":2,\"58\":2,\"60\":1,\"61\":2,\"64\":2,\"67\":2,\"70\":3,\"72\":2,\"73\":1,\"75\":2,\"79\":7,\"80\":4,\"84\":2,\"85\":2,\"87\":1,\"88\":1,\"89\":1,\"95\":1,\"96\":1,\"106\":1,\"123\":1,\"125\":1,\"128\":1,\"141\":1,\"142\":1,\"144\":1,\"145\":1,\"161\":1,\"164\":1,\"165\":1,\"168\":2,\"173\":1,\"174\":1,\"180\":1,\"182\":1,\"187\":1,\"191\":1,\"196\":1,\"200\":1,\"205\":1,\"209\":1,\"216\":1,\"217\":2,\"238\":3,\"245\":1,\"273\":1,\"280\":1,\"284\":2,\"292\":1,\"293\":1,\"295\":1,\"298\":1,\"301\":1,\"308\":1,\"327\":1,\"342\":1,\"345\":1,\"349\":1,\"360\":2,\"367\":1,\"393\":1,\"396\":1,\"397\":1,\"400\":1,\"401\":1,\"404\":3,\"411\":1,\"433\":1,\"465\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
