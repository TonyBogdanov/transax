import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as i,c,a as e,d as n,w as s,b as t,e as l}from"./app-FYuzNta1.js";const d={},h=e("h1",{id:"interface-compilerinterface",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-compilerinterface"},[e("span",null,"Interface: CompilerInterface")])],-1),p=e("p",null,[t("Defines an interface for "),e("strong",null,"Compiler"),t(" classes.")],-1),m=e("h2",{id:"implemented-by",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implemented-by"},[e("span",null,"Implemented by")])],-1),f=e("code",null,"Compiler",-1),u=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents"},[e("span",null,"Table of contents")])],-1),_=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods"},[e("span",null,"Methods")])],-1),x=l('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h2><h3 id="compile" tabindex="-1"><a class="header-anchor" href="#compile"><span>compile</span></a></h3><p>▸ <strong>compile</strong>(<code>value</code>): <code>string</code></p><p>Tokenizes the given string and then compiles it into an executable ECMAScript6 string.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The source string to tokenize.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>string</code></p><hr><h3 id="tokenize" tabindex="-1"><a class="header-anchor" href="#tokenize"><span>tokenize</span></a></h3>',10),g=e("strong",null,"tokenize",-1),b=e("code",null,"value",-1),y=e("code",null,"CompilerToken",-1),k=l('<h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The source string to tokenize.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4>',3),C=e("code",null,"CompilerToken",-1);function T(v,z){const a=r("RouterLink");return i(),c("div",null,[h,p,m,e("ul",null,[e("li",null,[n(a,{to:"/api/classes/Compiler.html"},{default:s(()=>[f]),_:1})])]),u,_,e("ul",null,[e("li",null,[n(a,{to:"/api/interfaces/CompilerInterface.html#compile"},{default:s(()=>[t("compile")]),_:1})]),e("li",null,[n(a,{to:"/api/interfaces/CompilerInterface.html#tokenize"},{default:s(()=>[t("tokenize")]),_:1})])]),x,e("p",null,[t("▸ "),g,t("("),b,t("): "),n(a,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[y]),_:1}),t("[]")]),e("p",null,[t("Tokenizes the given string converting it into a sequence of "),n(a,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[t("CompilerToken")]),_:1}),t(" instances.")]),k,e("p",null,[n(a,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[C]),_:1}),t("[]")])])}const R=o(d,[["render",T],["__file","CompilerInterface.html.vue"]]);export{R as default};
