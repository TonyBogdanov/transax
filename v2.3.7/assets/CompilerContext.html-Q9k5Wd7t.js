import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as d,c as h,a as e,d as a,w as s,b as r,e as o}from"./app-FYuzNta1.js";const c={},i=o('<h1 id="class-compilercontext" tabindex="-1"><a class="header-anchor" href="#class-compilercontext"><span>Class: CompilerContext</span></a></h1><p>A class to hold and represent the context of a translation message compilation. This should be used to keep track of the parameters and globals that are used in messages.</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents"><span>Table of contents</span></a></h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h3>',4),p=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties"},[e("span",null,"Properties")])],-1),u=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods"},[e("span",null,"Methods")])],-1),m=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1"},[e("span",null,"Constructors")])],-1),f=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor"},[e("span",null,"constructor")])],-1),b=e("strong",null,"new CompilerContext",-1),x=e("code",null,"CompilerContext",-1),g=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1),_=e("code",null,"CompilerContext",-1),C=o('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1"><span>Properties</span></a></h2><h3 id="globals" tabindex="-1"><a class="header-anchor" href="#globals"><span>globals</span></a></h3><p>• <strong>globals</strong>: <code>string</code>[] = <code>[]</code></p><p>A list of global variable / function names used in the message.</p><hr><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>parameters</span></a></h3><p>• <strong>parameters</strong>: <code>string</code>[] = <code>[]</code></p><p>A list of parameter names used in the message.</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h2><h3 id="requireglobal" tabindex="-1"><a class="header-anchor" href="#requireglobal"><span>requireGlobal</span></a></h3><p>▸ <strong>requireGlobal</strong>(<code>name</code>): <code>this</code></p><p>Adds a global variable / function name to the list of referenced globals unless already present.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of the global variable / function.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><hr><h3 id="requireparameter" tabindex="-1"><a class="header-anchor" href="#requireparameter"><span>requireParameter</span></a></h3><p>▸ <strong>requireParameter</strong>(<code>name</code>): <code>this</code></p><p>Adds a parameter name to the list of referenced parameters unless already present.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of the parameter.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>this</code></p>',24);function y(q,P){const t=l("RouterLink");return d(),h("div",null,[i,e("ul",null,[e("li",null,[a(t,{to:"/api/classes/CompilerContext.html#constructor"},{default:s(()=>[r("constructor")]),_:1})])]),p,e("ul",null,[e("li",null,[a(t,{to:"/api/classes/CompilerContext.html#globals"},{default:s(()=>[r("globals")]),_:1})]),e("li",null,[a(t,{to:"/api/classes/CompilerContext.html#parameters"},{default:s(()=>[r("parameters")]),_:1})])]),u,e("ul",null,[e("li",null,[a(t,{to:"/api/classes/CompilerContext.html#requireglobal"},{default:s(()=>[r("requireGlobal")]),_:1})]),e("li",null,[a(t,{to:"/api/classes/CompilerContext.html#requireparameter"},{default:s(()=>[r("requireParameter")]),_:1})])]),m,f,e("p",null,[r("• "),b,r("(): "),a(t,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[x]),_:1})]),g,e("p",null,[a(t,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[_]),_:1})]),C])}const v=n(c,[["render",y],["__file","CompilerContext.html.vue"]]);export{v as default};
