import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c as d,a as e,b as t,d as o,w as n,e as l}from"./app-d72a7329.js";const c={},h=e("h1",{id:"class-compiler",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-compiler","aria-hidden":"true"},"#"),t(" Class: Compiler")],-1),p=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements","aria-hidden":"true"},"#"),t(" Implements")],-1),m=e("code",null,"CompilerInterface",-1),u=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),f=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),_=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),x=l('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new Compiler</strong>(<code>options?</code>)</p><p>Creates a new instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',5),g=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),b=e("td",{style:{"text-align":"left"}},[e("code",null,"options")],-1),C={style:{"text-align":"left"}},y=e("code",null,"CompilerOptions",-1),k=e("td",{style:{"text-align":"left"}},"Customizes the compiler.",-1),T=l('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="compile" tabindex="-1"><a class="header-anchor" href="#compile" aria-hidden="true">#</a> compile</h3><p>▸ <strong>compile</strong>(<code>value</code>): <code>string</code></p><p>Tokenizes the given string and then compiles it into an executable ECMAScript6 string.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The source string to tokenize.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of" aria-hidden="true">#</a> Implementation of</h4>',9),z=e("hr",null,null,-1),I=e("h3",{id:"tokenize",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tokenize","aria-hidden":"true"},"#"),t(" tokenize")],-1),v=e("strong",null,"tokenize",-1),N=e("code",null,"value",-1),w=e("code",null,"CompilerToken",-1),D=l('<h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The source string to tokenize.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',3),R=e("code",null,"CompilerToken",-1),V=e("h4",{id:"implementation-of-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-1","aria-hidden":"true"},"#"),t(" Implementation of")],-1);function B(M,P){const a=r("RouterLink");return s(),d("div",null,[h,e("p",null,[t("Default implementation of the "),o(a,{to:"/api/interfaces/CompilerInterface.html"},{default:n(()=>[t("CompilerInterface")]),_:1}),t(".")]),p,e("ul",null,[e("li",null,[o(a,{to:"/api/interfaces/CompilerInterface.html"},{default:n(()=>[m]),_:1})])]),u,f,e("ul",null,[e("li",null,[o(a,{to:"/api/classes/Compiler.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),_,e("ul",null,[e("li",null,[o(a,{to:"/api/classes/Compiler.html#compile"},{default:n(()=>[t("compile")]),_:1})]),e("li",null,[o(a,{to:"/api/classes/Compiler.html#tokenize"},{default:n(()=>[t("tokenize")]),_:1})])]),x,e("table",null,[g,e("tbody",null,[e("tr",null,[b,e("td",C,[o(a,{to:"/api/#compileroptions"},{default:n(()=>[y]),_:1})]),k])])]),T,e("p",null,[o(a,{to:"/api/interfaces/CompilerInterface.html"},{default:n(()=>[t("CompilerInterface")]),_:1}),t("."),o(a,{to:"/api/interfaces/CompilerInterface.html#compile"},{default:n(()=>[t("compile")]),_:1})]),z,I,e("p",null,[t("▸ "),v,t("("),N,t("): "),o(a,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[w]),_:1}),t("[]")]),e("p",null,[t("Tokenizes the given string converting it into a sequence of "),o(a,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[t("CompilerToken")]),_:1}),t(" instances.")]),D,e("p",null,[o(a,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[R]),_:1}),t("[]")]),V,e("p",null,[o(a,{to:"/api/interfaces/CompilerInterface.html"},{default:n(()=>[t("CompilerInterface")]),_:1}),t("."),o(a,{to:"/api/interfaces/CompilerInterface.html#tokenize"},{default:n(()=>[t("tokenize")]),_:1})])])}const S=i(c,[["render",B],["__file","Compiler.html.vue"]]);export{S as default};
