import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as s,c as l,a as e,d as o,w as r,b as t,e as i}from"./app-d72a7329.js";const c={},h=e("h1",{id:"interface-loggerinterface",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-loggerinterface","aria-hidden":"true"},"#"),t(" Interface: LoggerInterface")],-1),g=e("p",null,[t("Defines an interface for "),e("strong",null,"Logger"),t(" classes.")],-1),f=e("h2",{id:"implemented-by",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implemented-by","aria-hidden":"true"},"#"),t(" Implemented by")],-1),u=e("code",null,"Logger",-1),m=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),p=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),b=i('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log" aria-hidden="true">#</a> log</h3><p>▸ <strong>log</strong>(<code>...args</code>): <code>void</code></p><p>Logs a message unless <code>isSilent</code> is <code>true</code>.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">A list of arguments to log. These can be of any type that the underlying implementation (e.g. <code>console.log</code> ) can handle.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><hr><h3 id="verbose" tabindex="-1"><a class="header-anchor" href="#verbose" aria-hidden="true">#</a> verbose</h3><p>▸ <strong>verbose</strong>(<code>...args</code>): <code>void</code></p><p>Logs a verbose message unless <code>isSilent</code> is <code>true</code> or <code>isVerbose</code> is <code>false</code>.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">A list of arguments to log. These can be of any type that the underlying implementation (e.g. <code>console.log</code> ) can handle.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p>',16);function _(y,x){const a=n("RouterLink");return s(),l("div",null,[h,g,f,e("ul",null,[e("li",null,[o(a,{to:"/api/classes/Logger.html"},{default:r(()=>[u]),_:1})])]),m,p,e("ul",null,[e("li",null,[o(a,{to:"/api/interfaces/LoggerInterface.html#log"},{default:r(()=>[t("log")]),_:1})]),e("li",null,[o(a,{to:"/api/interfaces/LoggerInterface.html#verbose"},{default:r(()=>[t("verbose")]),_:1})])]),b])}const I=d(c,[["render",_],["__file","LoggerInterface.html.vue"]]);export{I as default};
