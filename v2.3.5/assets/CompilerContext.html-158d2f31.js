import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as d,c as i,a as e,d as r,w as s,b as t,e as o}from"./app-bf65b795.js";const h={},c=o('<h1 id="class-compilercontext" tabindex="-1"><a class="header-anchor" href="#class-compilercontext" aria-hidden="true">#</a> Class: CompilerContext</h1><p>A class to hold and represent the context of a translation message compilation. This should be used to keep track of the parameters and globals that are used in messages.</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>',4),u=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),p=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),m=o('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new CompilerContext</strong>()</p><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="globals" tabindex="-1"><a class="header-anchor" href="#globals" aria-hidden="true">#</a> globals</h3><p>• <strong>globals</strong>: <code>string</code>[] = <code>[]</code></p><p>A list of global variable / function names used in the message.</p><hr><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> parameters</h3><p>• <strong>parameters</strong>: <code>string</code>[] = <code>[]</code></p><p>A list of parameter names used in the message.</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="requireglobal" tabindex="-1"><a class="header-anchor" href="#requireglobal" aria-hidden="true">#</a> requireGlobal</h3>',13),f=e("strong",null,"requireGlobal",-1),_=e("code",null,"name",-1),x=e("code",null,"CompilerContext",-1),b=o('<p>Adds a global variable / function name to the list of referenced globals unless already present.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of the global variable / function.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',4),g=e("code",null,"CompilerContext",-1),C=e("hr",null,null,-1),y=e("h3",{id:"requireparameter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#requireparameter","aria-hidden":"true"},"#"),t(" requireParameter")],-1),q=e("strong",null,"requireParameter",-1),P=e("code",null,"name",-1),T=e("code",null,"CompilerContext",-1),k=o('<p>Adds a parameter name to the list of referenced parameters unless already present.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The name of the parameter.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',4),v=e("code",null,"CompilerContext",-1);function N(A,R){const a=n("RouterLink");return d(),i("div",null,[c,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/CompilerContext.html#constructor"},{default:s(()=>[t("constructor")]),_:1})])]),u,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/CompilerContext.html#globals"},{default:s(()=>[t("globals")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/CompilerContext.html#parameters"},{default:s(()=>[t("parameters")]),_:1})])]),p,e("ul",null,[e("li",null,[r(a,{to:"/api/classes/CompilerContext.html#requireglobal"},{default:s(()=>[t("requireGlobal")]),_:1})]),e("li",null,[r(a,{to:"/api/classes/CompilerContext.html#requireparameter"},{default:s(()=>[t("requireParameter")]),_:1})])]),m,e("p",null,[t("▸ "),f,t("("),_,t("): "),r(a,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[x]),_:1})]),b,e("p",null,[r(a,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[g]),_:1})]),C,y,e("p",null,[t("▸ "),q,t("("),P,t("): "),r(a,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[T]),_:1})]),k,e("p",null,[r(a,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[v]),_:1})])])}const B=l(h,[["render",N],["__file","CompilerContext.html.vue"]]);export{B as default};
