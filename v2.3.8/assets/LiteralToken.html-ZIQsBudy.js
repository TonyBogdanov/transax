import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as i,c,a as e,d as o,w as n,b as t,e as s}from"./app-l-37dSRN.js";const d={},h=s('<h1 id="class-literaltoken" tabindex="-1"><a class="header-anchor" href="#class-literaltoken"><span>Class: LiteralToken</span></a></h1><p>Represents a literal (static value) expression, such as a string, number, or null.</p><p>Example: <code>&quot;foo&quot;</code>, <code>123</code>, <code>null</code>.</p><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy"><span>Hierarchy</span></a></h2>',4),p=e("code",null,"CompilerToken",-1),u=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"LiteralToken")])],-1),_=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents"},[e("span",null,"Table of contents")])],-1),m=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors"},[e("span",null,"Constructors")])],-1),f=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties"},[e("span",null,"Properties")])],-1),x=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods"},[e("span",null,"Methods")])],-1),g=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1"},[e("span",null,"Constructors")])],-1),b=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor"},[e("span",null,"constructor")])],-1),T=e("strong",null,"new LiteralToken",-1),k=e("code",null,"value",-1),y=e("code",null,"text",-1),C=e("code",null,"location",-1),v=e("code",null,"LiteralToken",-1),L=s('<p>Creates a new instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>string</code> | <code>number</code> | <code>boolean</code></td><td style="text-align:left;">The value of the literal.</td></tr><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The full text (content) of the expression.</td></tr><tr><td style="text-align:left;"><code>location</code></td><td style="text-align:left;"><code>LocationRange</code></td><td style="text-align:left;">The location of the invocation within the source code.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4>',4),w=e("code",null,"LiteralToken",-1),R=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides"},[e("span",null,"Overrides")])],-1),N=s('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1"><span>Properties</span></a></h2><h3 id="column" tabindex="-1"><a class="header-anchor" href="#column"><span>column</span></a></h3><p>• <strong>column</strong>: <code>number</code></p><p>The column number of the expression within the translation message.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from"><span>Inherited from</span></a></h4>',5),P=e("hr",null,null,-1),I=e("h3",{id:"line",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#line"},[e("span",null,"line")])],-1),O=e("p",null,[t("• "),e("strong",null,"line"),t(": "),e("code",null,"number")],-1),V=e("p",null,"The line number of the expression within the translation message.",-1),W=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1"},[e("span",null,"Inherited from")])],-1),B=e("hr",null,null,-1),D=e("h3",{id:"text",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#text"},[e("span",null,"text")])],-1),E=e("p",null,[t("• "),e("strong",null,"text"),t(": "),e("code",null,"string")],-1),M=e("p",null,"The full text (content) of the expression.",-1),S=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2"},[e("span",null,"Inherited from")])],-1),q=s('<hr><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h3><p>• <code>Readonly</code> <strong>value</strong>: <code>string</code> | <code>number</code> | <code>boolean</code></p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h2><h3 id="compile" tabindex="-1"><a class="header-anchor" href="#compile"><span>compile</span></a></h3><p>▸ <strong>compile</strong>(<code>context</code>): <code>string</code></p><p>Compiles the expression into an executable ECMAScript6 string.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4>',8),A=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),F=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),H={style:{"text-align":"left"}},j=e("code",null,"CompilerContext",-1),z=e("td",{style:{"text-align":"left"}},"The context to use for compiling the expression.",-1),G=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1"},[e("span",null,"Returns")])],-1),J=e("p",null,[e("code",null,"string")],-1),K=e("h4",{id:"overrides-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-1"},[e("span",null,"Overrides")])],-1),Q=s('<hr><h3 id="compilewrap" tabindex="-1"><a class="header-anchor" href="#compilewrap"><span>compileWrap</span></a></h3><p>▸ <strong>compileWrap</strong>(<code>context</code>, <code>instanceOfs</code>): <code>string</code></p><p>Same as <code>compile()</code> except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4>',5),U=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),X=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),Y={style:{"text-align":"left"}},Z=e("code",null,"CompilerContext",-1),$=e("td",{style:{"text-align":"left"}},"The context to use for compiling the expression.",-1),ee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceOfs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Function"),t("[]")]),e("td",{style:{"text-align":"left"}},"The types to check for.")],-1),te=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2"},[e("span",null,"Returns")])],-1),le=e("p",null,[e("code",null,"string")],-1),oe=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3"},[e("span",null,"Inherited from")])],-1);function ne(se,ae){const l=r("RouterLink");return i(),c("div",null,[h,e("ul",null,[e("li",null,[e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[p]),_:1})]),u])]),_,m,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/LiteralToken.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),f,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/LiteralToken.html#column"},{default:n(()=>[t("column")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/LiteralToken.html#line"},{default:n(()=>[t("line")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/LiteralToken.html#text"},{default:n(()=>[t("text")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/LiteralToken.html#value"},{default:n(()=>[t("value")]),_:1})])]),x,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/LiteralToken.html#compile"},{default:n(()=>[t("compile")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/LiteralToken.html#compilewrap"},{default:n(()=>[t("compileWrap")]),_:1})])]),g,b,e("p",null,[t("• "),T,t("("),k,t(", "),y,t(", "),C,t("): "),o(l,{to:"/api/classes/LiteralToken.html"},{default:n(()=>[v]),_:1})]),L,e("p",null,[o(l,{to:"/api/classes/LiteralToken.html"},{default:n(()=>[w]),_:1})]),R,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#constructor"},{default:n(()=>[t("constructor")]),_:1})]),N,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#column"},{default:n(()=>[t("column")]),_:1})]),P,I,O,V,W,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#line"},{default:n(()=>[t("line")]),_:1})]),B,D,E,M,S,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#text"},{default:n(()=>[t("text")]),_:1})]),q,e("table",null,[A,e("tbody",null,[e("tr",null,[F,e("td",H,[o(l,{to:"/api/classes/CompilerContext.html"},{default:n(()=>[j]),_:1})]),z])])]),G,J,K,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#compile"},{default:n(()=>[t("compile")]),_:1})]),Q,e("table",null,[U,e("tbody",null,[e("tr",null,[X,e("td",Y,[o(l,{to:"/api/classes/CompilerContext.html"},{default:n(()=>[Z]),_:1})]),$]),ee])]),te,le,oe,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:n(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#compilewrap"},{default:n(()=>[t("compileWrap")]),_:1})])])}const ce=a(d,[["render",ne],["__file","LiteralToken.html.vue"]]);export{ce as default};
