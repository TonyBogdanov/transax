import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as d,c as p,a as t,d as n,w as o,b as e,e as s}from"./app-kl30nyrf.js";const c={},u=s('<h1 id="module-types" tabindex="-1"><a class="header-anchor" href="#module-types"><span>Module: types</span></a></h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents"><span>Table of contents</span></a></h2><h3 id="type-aliases" tabindex="-1"><a class="header-anchor" href="#type-aliases"><span>Type Aliases</span></a></h3>',3),r=t("h2",{id:"type-aliases-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-aliases-1"},[t("span",null,"Type Aliases")])],-1),h=t("h3",{id:"analyzeroptionstype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#analyzeroptionstype"},[t("span",null,"AnalyzerOptionsType")])],-1),y=t("p",null,[e("Ƭ "),t("strong",null,"AnalyzerOptionsType"),e(": "),t("code",null,"Object")],-1),_=t("h4",{id:"type-declaration",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration"},[t("span",null,"Type declaration")])],-1),g=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),f=t("td",{style:{"text-align":"left"}},[t("code",null,"keyFormatter?")],-1),m={style:{"text-align":"left"}},x=t("code",null,"KeyFormatterType",-1),b=t("td",{style:{"text-align":"left"}},[e("A function to format the translation key based on the context. Defaults to "),t("code",null,"( key => key )"),e(".")],-1),T=t("td",{style:{"text-align":"left"}},[t("code",null,"logger?")],-1),O={style:{"text-align":"left"}},v=t("code",null,"LoggerInterface",-1),k=t("code",null,"LoggerOptionsType",-1),C=t("td",{style:{"text-align":"left"}},[e("Optional logger instance. Defaults to "),t("code",null,"new Logger( { namespace: 'TRANSAX:ANALYZER' } )"),e(".")],-1),A=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"names?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),e("[] | "),t("code",null,"string")]),t("td",{style:{"text-align":"left"}},[e("The name(s) of the function(s) to analyze. Defaults to "),t("code",null,"[ '$t' ]"),e(".")])],-1),P=t("hr",null,null,-1),D=t("h3",{id:"catalogtype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#catalogtype"},[t("span",null,"CatalogType")])],-1),L=t("strong",null,"CatalogType",-1),S=t("code",null,"Record",-1),w=t("code",null,"LocaleType",-1),I=t("code",null,"DictionaryType",-1),N=s(`<p>Catalog of translation entries, keyed by locale.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;en_US&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;my.translation.key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello there, nice to meet you!&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="compiledcatalogtype" tabindex="-1"><a class="header-anchor" href="#compiledcatalogtype"><span>CompiledCatalogType</span></a></h3>`,5),z=t("strong",null,"CompiledCatalogType",-1),R=t("code",null,"Record",-1),j=t("code",null,"LocaleType",-1),q=t("code",null,"CompiledDictionaryType",-1),G=t("hr",null,null,-1),V=t("h3",{id:"compileddictionarytype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#compileddictionarytype"},[t("span",null,"CompiledDictionaryType")])],-1),K=t("strong",null,"CompiledDictionaryType",-1),E=t("code",null,"Record",-1),F=t("code",null,"KeyType",-1),H=t("code",null,"CompiledValueType",-1),X=t("hr",null,null,-1),M=t("h3",{id:"compiledvaluetype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#compiledvaluetype"},[t("span",null,"CompiledValueType")])],-1),Y=t("strong",null,"CompiledValueType",-1),B=t("code",null,"params",-1),U=t("code",null,"ContextParamsType",-1),$=t("code",null,"globals",-1),Z=t("code",null,"ContextGlobalsType",-1),J=t("code",null,"string",-1),Q=t("code",null,"string",-1),W=t("hr",null,null,-1),tt=t("h3",{id:"compileroptionstype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#compileroptionstype"},[t("span",null,"CompilerOptionsType")])],-1),et=t("p",null,[e("Ƭ "),t("strong",null,"CompilerOptionsType"),e(": "),t("code",null,"Object")],-1),lt=t("h4",{id:"type-declaration-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-1"},[t("span",null,"Type declaration")])],-1),nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ot=t("td",{style:{"text-align":"left"}},[t("code",null,"logger?")],-1),st={style:{"text-align":"left"}},at=t("code",null,"LoggerInterface",-1),it=t("code",null,"LoggerOptionsType",-1),dt=t("td",{style:{"text-align":"left"}},[e("Optional logger instance. Defaults to "),t("code",null,"new Logger( { namespace: 'TRANSAX:COMPILER' } )"),e(".")],-1),pt=s('<hr><h3 id="contextglobalstype" tabindex="-1"><a class="header-anchor" href="#contextglobalstype"><span>ContextGlobalsType</span></a></h3><p>Ƭ <strong>ContextGlobalsType</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><p>Hashmap of context globals to be used during translation.</p><hr><h3 id="contextparamstype" tabindex="-1"><a class="header-anchor" href="#contextparamstype"><span>ContextParamsType</span></a></h3><p>Ƭ <strong>ContextParamsType</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><p>Hashmap of context parameters to be used during translation.</p><hr><h3 id="contexttype" tabindex="-1"><a class="header-anchor" href="#contexttype"><span>ContextType</span></a></h3><p>Ƭ <strong>ContextType</strong>: <code>Object</code></p><p>Runtime context to be used during translation.</p><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2"><span>Type declaration</span></a></h4>',13),ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ut=t("td",{style:{"text-align":"left"}},[t("code",null,"globals?")],-1),rt={style:{"text-align":"left"}},ht=t("code",null,"ContextGlobalsType",-1),yt=t("td",{style:{"text-align":"left"}},"Hashmap of globals available to translation expressions.",-1),_t=t("td",{style:{"text-align":"left"}},[t("code",null,"locale?")],-1),gt={style:{"text-align":"left"}},ft=t("code",null,"LocaleType",-1),mt=t("td",{style:{"text-align":"left"}},"The locale to translate to. If not specified, the default locale specified in the translator options will be used.",-1),xt=t("td",{style:{"text-align":"left"}},[t("code",null,"params?")],-1),bt={style:{"text-align":"left"}},Tt=t("code",null,"ContextParamsType",-1),Ot=t("td",{style:{"text-align":"left"}},"Hashmap of parameters available to translation expressions.",-1),vt=t("hr",null,null,-1),kt=t("h3",{id:"dictionarytype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#dictionarytype"},[t("span",null,"DictionaryType")])],-1),Ct=t("strong",null,"DictionaryType",-1),At=t("code",null,"Record",-1),Pt=t("code",null,"KeyType",-1),Dt=t("code",null,"ValueType",-1),Lt=s(`<p>Translation dictionary as a hashmap of key-value pairs.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span> <span class="token string-property property">&quot;my.translation.key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello there, nice to meet you!&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="generatoroptionstype" tabindex="-1"><a class="header-anchor" href="#generatoroptionstype"><span>GeneratorOptionsType</span></a></h3><p>Ƭ <strong>GeneratorOptionsType</strong>: <code>Object</code></p><p>Options for the Generator.</p><h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3"><span>Type declaration</span></a></h4>`,8),St=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),wt=t("td",{style:{"text-align":"left"}},[t("code",null,"analyzer?")],-1),It={style:{"text-align":"left"}},Nt=t("code",null,"AnalyzerInterface",-1),zt=t("code",null,"AnalyzerOptionsType",-1),Rt=t("td",{style:{"text-align":"left"}},[e("Optional analyzer instance. Defaults to "),t("code",null,"new Analyzer()"),e(".")],-1),jt=t("td",{style:{"text-align":"left"}},[t("code",null,"compiler?")],-1),qt={style:{"text-align":"left"}},Gt=t("code",null,"CompilerInterface",-1),Vt=t("code",null,"CompilerOptionsType",-1),Kt=t("td",{style:{"text-align":"left"}},[e("Optional compiler instance. Defaults to "),t("code",null,"new Compiler()"),e(".")],-1),Et=t("td",{style:{"text-align":"left"}},[t("code",null,"logger?")],-1),Ft={style:{"text-align":"left"}},Ht=t("code",null,"LoggerInterface",-1),Xt=t("code",null,"LoggerOptionsType",-1),Mt=t("td",{style:{"text-align":"left"}},[e("Optional logger instance. Defaults to "),t("code",null,"new Logger( { namespace: 'TRANSAX:GENERATOR' } )"),e(".")],-1),Yt=t("td",{style:{"text-align":"left"}},[t("code",null,"translations?")],-1),Bt={style:{"text-align":"left"}},Ut=t("code",null,"CatalogType",-1),$t=t("td",{style:{"text-align":"left"}},[e("Optional translation catalog. Defaults to "),t("code",null,"{}"),e(".")],-1),Zt=t("hr",null,null,-1),Jt=t("h3",{id:"keyformattertype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#keyformattertype"},[t("span",null,"KeyFormatterType")])],-1),Qt=t("strong",null,"KeyFormatterType",-1),Wt=t("code",null,"key",-1),te=t("code",null,"KeyType",-1),ee=t("code",null,"token",-1),le=t("code",null,"AnalyzerToken",-1),ne=t("code",null,"string",-1),oe=s('<p>A function to format the translation key based on the context.</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4"><span>Type declaration</span></a></h4><p>▸ (<code>key</code>, <code>token</code>): <code>string</code></p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h5>',4),se=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type")])],-1),ae=t("td",{style:{"text-align":"left"}},[t("code",null,"key")],-1),ie={style:{"text-align":"left"}},de=t("code",null,"KeyType",-1),pe=t("td",{style:{"text-align":"left"}},[t("code",null,"token")],-1),ce={style:{"text-align":"left"}},ue=t("code",null,"AnalyzerToken",-1),re=s(`<h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h5><p><code>string</code></p><hr><h3 id="keytype" tabindex="-1"><a class="header-anchor" href="#keytype"><span>KeyType</span></a></h3><p>Ƭ <strong>KeyType</strong>: <code>string</code></p><p>Translation key as a string used to identify a translation.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token string">&quot;my.translation.key&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="localetype" tabindex="-1"><a class="header-anchor" href="#localetype"><span>LocaleType</span></a></h3><p>Ƭ <strong>LocaleType</strong>: <code>string</code></p><p>Translation locale as a string representing a unique language.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token string">&quot;en_US&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="loggeroptionstype" tabindex="-1"><a class="header-anchor" href="#loggeroptionstype"><span>LoggerOptionsType</span></a></h3><p>Ƭ <strong>LoggerOptionsType</strong>: <code>Object</code></p>`,17),he=s('<h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5"><span>Type declaration</span></a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>namespace?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Specifies a namespace for identifying the purpose of the logger (e.g. <code>Analysis</code>). Defaults to <code>TRANSAX</code>.</td></tr><tr><td style="text-align:left;"><code>quiet?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Disables all logging. Defaults to <code>false</code>.</td></tr><tr><td style="text-align:left;"><code>verbose?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Enables verbose logging. Defaults to <code>false</code>.</td></tr></tbody></table><hr><h3 id="plugindictionarytype" tabindex="-1"><a class="header-anchor" href="#plugindictionarytype"><span>PluginDictionaryType</span></a></h3><p>Ƭ <strong>PluginDictionaryType</strong>: <code>Object</code></p>',5),ye=t("h4",{id:"type-declaration-6",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-6"},[t("span",null,"Type declaration")])],-1),_e=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),ge=t("td",{style:{"text-align":"left"}},[t("code",null,"handler")],-1),fe={style:{"text-align":"left"}},me=t("code",null,"path",-1),xe=t("code",null,"string",-1),be=t("code",null,"CatalogType",-1),Te=t("code",null,"Promise",-1),Oe=t("code",null,"CatalogType",-1),ve=t("code",null,"string",-1),ke=t("td",{style:{"text-align":"left"}},[e("Specifies a handler for loading and parsing the translation dictionary files. This function is called each time the contents of a translation dictionary file changes and is responsible for loading and parsing the contents of the file. The result must be a catalog object or a promise that resolves to a catalog object. All returned catalogs are merged together. You can also use built-in handlers by specifying a string name (instead of a function), one of: "),t("code",null,"yaml"),e(" or "),t("code",null,"json"),e(". In this case the handler will infer the locale from the path (the name without the extension).")],-1),Ce=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"pattern")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),e("[] | "),t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"Specifies a glob pattern or array of patterns to match your project's translation dictionary files.")],-1),Ae=t("hr",null,null,-1),Pe=t("h3",{id:"plugininputtype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#plugininputtype"},[t("span",null,"PluginInputType")])],-1),De=t("p",null,[e("Ƭ "),t("strong",null,"PluginInputType"),e(": "),t("code",null,"Object")],-1),Le=t("h4",{id:"type-declaration-7",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-7"},[t("span",null,"Type declaration")])],-1),Se=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),we=t("td",{style:{"text-align":"left"}},[t("code",null,"keyFormatter?")],-1),Ie={style:{"text-align":"left"}},Ne=t("code",null,"KeyFormatterType",-1),ze={style:{"text-align":"left"}},Re=t("code",null,"( key => key )",-1),je=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"keywords?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),e("[] | "),t("code",null,"string")]),t("td",{style:{"text-align":"left"}},[e("Specifies the function name / keywords or an array of keywords to match when looking for translation calls. Defaults to "),t("code",null,"[ '$t' ]"),e(".")])],-1),qe=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"pattern")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),e("[] | "),t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"Specifies a glob pattern or array of patterns to match your project's source files to be observed & analyzed for translation calls.")],-1),Ge=t("hr",null,null,-1),Ve=t("h3",{id:"pluginoptionstype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pluginoptionstype"},[t("span",null,"PluginOptionsType")])],-1),Ke=t("p",null,[e("Ƭ "),t("strong",null,"PluginOptionsType"),e(": "),t("code",null,"Object")],-1),Ee=t("h4",{id:"type-declaration-8",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-8"},[t("span",null,"Type declaration")])],-1),Fe=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),He=t("td",{style:{"text-align":"left"}},[t("code",null,"dictionary")],-1),Xe={style:{"text-align":"left"}},Me=t("code",null,"PluginDictionaryType",-1),Ye=t("td",{style:{"text-align":"left"}},"Specifies dictionary options.",-1),Be=t("td",{style:{"text-align":"left"}},[t("code",null,"input")],-1),Ue={style:{"text-align":"left"}},$e=t("code",null,"PluginInputType",-1),Ze=t("td",{style:{"text-align":"left"}},"Specifies input options.",-1),Je=t("td",{style:{"text-align":"left"}},[t("code",null,"output")],-1),Qe={style:{"text-align":"left"}},We=t("code",null,"PluginOutputType",-1),tl=t("td",{style:{"text-align":"left"}},"Specifies output options.",-1),el=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"quiet")]),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},"Specifies whether to suppress logging.")],-1),ll=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"verbose")]),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},"Specifies whether to log verbose information.")],-1),nl=t("hr",null,null,-1),ol=t("h3",{id:"pluginoutputanalysistype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pluginoutputanalysistype"},[t("span",null,"PluginOutputAnalysisType")])],-1),sl=t("p",null,[e("Ƭ "),t("strong",null,"PluginOutputAnalysisType"),e(": "),t("code",null,"Object")],-1),al=t("h4",{id:"type-declaration-9",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-9"},[t("span",null,"Type declaration")])],-1),il=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),dl=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"flavor")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"Specifies the flavor of the output file being generated. Can be one of PluginOutputAnalysisFlavorMissing or PluginOutputAnalysisFlavorUnused for missing and unused translation keys respectively.")],-1),pl=t("td",{style:{"text-align":"left"}},[t("code",null,"handler?")],-1),cl={style:{"text-align":"left"}},ul=t("code",null,"path",-1),rl=t("code",null,"string",-1),hl=t("code",null,"generator",-1),yl=t("code",null,"Generator",-1),_l=t("code",null,"Promise",-1),gl=t("code",null,"void",-1),fl=t("code",null,"void",-1),ml=t("code",null,"string",-1),xl=t("td",{style:{"text-align":"left"}},[e("Specifies a handler function for encoding and writing the output file. It can be synchronous, or return a Promise. You can also use built-in handlers by specifying a string name (instead of a function), one of: "),t("code",null,"txt"),e(", "),t("code",null,"yaml"),e(" or "),t("code",null,"json"),e(". If left unspecified, the handler will be determined automatically based on the file extension if possible.")],-1),bl=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"path")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"Specifies the path to the output file being generated.")],-1),Tl=t("hr",null,null,-1),Ol=t("h3",{id:"pluginoutputcompilationtype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pluginoutputcompilationtype"},[t("span",null,"PluginOutputCompilationType")])],-1),vl=t("p",null,[e("Ƭ "),t("strong",null,"PluginOutputCompilationType"),e(": "),t("code",null,"Object")],-1),kl=t("h4",{id:"type-declaration-10",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-10"},[t("span",null,"Type declaration")])],-1),Cl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Al=t("td",{style:{"text-align":"left"}},[t("code",null,"handler?")],-1),Pl={style:{"text-align":"left"}},Dl=t("code",null,"path",-1),Ll=t("code",null,"string",-1),Sl=t("code",null,"generator",-1),wl=t("code",null,"Generator",-1),Il=t("code",null,"Promise",-1),Nl=t("code",null,"void",-1),zl=t("code",null,"void",-1),Rl=t("code",null,"string",-1),jl=t("td",{style:{"text-align":"left"}},[e("Specifies a handler function for encoding and writing the output file. It can be synchronous, or return a Promise. You can also use built-in handlers by specifying a string name (instead of a function), one of: "),t("code",null,"esm"),e(" or "),t("code",null,"cjs"),e(". If left unspecified, the handler will be determined automatically based on the file extension.")],-1),ql=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"includeMeta?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},[e("Specifies whether to include meta information in the output file. Defaults to "),t("code",null,"false"),e(".")])],-1),Gl=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"path")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"Specifies the path to the output file being generated.")],-1),Vl=t("hr",null,null,-1),Kl=t("h3",{id:"pluginoutputtype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pluginoutputtype"},[t("span",null,"PluginOutputType")])],-1),El=t("p",null,[e("Ƭ "),t("strong",null,"PluginOutputType"),e(": "),t("code",null,"Object")],-1),Fl=t("h4",{id:"type-declaration-11",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-11"},[t("span",null,"Type declaration")])],-1),Hl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Xl=t("td",{style:{"text-align":"left"}},[t("code",null,"compiled")],-1),Ml={style:{"text-align":"left"}},Yl=t("code",null,"PluginOutputCompilationType",-1),Bl=t("code",null,"string",-1),Ul=t("td",{style:{"text-align":"left"}},[e("Specifies the output file for compiled translations. If a "),t("code",null,"string"),e(" is provided, it will be used as the "),t("code",null,"path"),e(" option.")],-1),$l=t("td",{style:{"text-align":"left"}},[t("code",null,"missing?")],-1),Zl={style:{"text-align":"left"}},Jl=t("code",null,"PluginOutputAnalysisType",-1),Ql=t("code",null,"string",-1),Wl=t("td",{style:{"text-align":"left"}},[e("Specifies the output file for missing translations. If a "),t("code",null,"string"),e(" is provided, it will be used as the "),t("code",null,"path"),e(" option.")],-1),tn=t("td",{style:{"text-align":"left"}},[t("code",null,"unused?")],-1),en={style:{"text-align":"left"}},ln=t("code",null,"PluginOutputAnalysisType",-1),nn=t("code",null,"string",-1),on=t("td",{style:{"text-align":"left"}},[e("Specifies the output file for unused translations. If a "),t("code",null,"string"),e(" is provided, it will be used as the "),t("code",null,"path"),e(" option.")],-1),sn=t("hr",null,null,-1),an=t("h3",{id:"translatoroptionstype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#translatoroptionstype"},[t("span",null,"TranslatorOptionsType")])],-1),dn=t("p",null,[e("Ƭ "),t("strong",null,"TranslatorOptionsType"),e(": "),t("code",null,"Object")],-1),pn=t("h4",{id:"type-declaration-12",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-declaration-12"},[t("span",null,"Type declaration")])],-1),cn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),un=t("td",{style:{"text-align":"left"}},[t("code",null,"fallbackLocale?")],-1),rn={style:{"text-align":"left"}},hn=t("code",null,"LocaleType",-1),yn=t("td",{style:{"text-align":"left"}},[e("Optional fallback locale. Defaults to "),t("code",null,"undefined"),e(".")],-1),_n=t("td",{style:{"text-align":"left"}},[t("code",null,"logger?")],-1),gn={style:{"text-align":"left"}},fn=t("code",null,"LoggerInterface",-1),mn=t("td",{style:{"text-align":"left"}},[e("Optional logger instance. Defaults to "),t("code",null,"new Logger( { namespace: 'TRANSAX:TRANSLATOR' } )"),e(".")],-1),xn=t("td",{style:{"text-align":"left"}},[t("code",null,"translations?")],-1),bn={style:{"text-align":"left"}},Tn=t("code",null,"CompiledCatalogType",-1),On=t("td",{style:{"text-align":"left"}},[e("Optional compiled translation catalog. Defaults to "),t("code",null,"{}"),e(".")],-1),vn=s(`<hr><h3 id="valuetype" tabindex="-1"><a class="header-anchor" href="#valuetype"><span>ValueType</span></a></h3><p>Ƭ <strong>ValueType</strong>: <code>string</code></p><p>Translation value as a string translation of its corresponding key.</p><p><strong><code>Example</code></strong></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token string">&quot;Hello there, nice to meet you!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function kn(Cn,An){const l=i("RouterLink");return d(),p("div",null,[u,t("ul",null,[t("li",null,[n(l,{to:"/api/modules/types.html#analyzeroptionstype"},{default:o(()=>[e("AnalyzerOptionsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#catalogtype"},{default:o(()=>[e("CatalogType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#compiledcatalogtype"},{default:o(()=>[e("CompiledCatalogType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#compileddictionarytype"},{default:o(()=>[e("CompiledDictionaryType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#compiledvaluetype"},{default:o(()=>[e("CompiledValueType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#compileroptionstype"},{default:o(()=>[e("CompilerOptionsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#contextglobalstype"},{default:o(()=>[e("ContextGlobalsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#contextparamstype"},{default:o(()=>[e("ContextParamsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#contexttype"},{default:o(()=>[e("ContextType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#dictionarytype"},{default:o(()=>[e("DictionaryType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#generatoroptionstype"},{default:o(()=>[e("GeneratorOptionsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#keyformattertype"},{default:o(()=>[e("KeyFormatterType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#keytype"},{default:o(()=>[e("KeyType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#localetype"},{default:o(()=>[e("LocaleType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#loggeroptionstype"},{default:o(()=>[e("LoggerOptionsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#plugindictionarytype"},{default:o(()=>[e("PluginDictionaryType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#plugininputtype"},{default:o(()=>[e("PluginInputType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#pluginoptionstype"},{default:o(()=>[e("PluginOptionsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#pluginoutputanalysistype"},{default:o(()=>[e("PluginOutputAnalysisType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#pluginoutputcompilationtype"},{default:o(()=>[e("PluginOutputCompilationType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#pluginoutputtype"},{default:o(()=>[e("PluginOutputType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#translatoroptionstype"},{default:o(()=>[e("TranslatorOptionsType")]),_:1})]),t("li",null,[n(l,{to:"/api/modules/types.html#valuetype"},{default:o(()=>[e("ValueType")]),_:1})])]),r,h,y,t("p",null,[e("Options for the "),n(l,{to:"/api/classes/index.Analyzer.html"},{default:o(()=>[e("Analyzer")]),_:1}),e(".")]),_,t("table",null,[g,t("tbody",null,[t("tr",null,[f,t("td",m,[n(l,{to:"/api/modules/types.html#keyformattertype"},{default:o(()=>[x]),_:1})]),b]),t("tr",null,[T,t("td",O,[n(l,{to:"/api/interfaces/index.LoggerInterface.html"},{default:o(()=>[v]),_:1}),e(" | "),n(l,{to:"/api/modules/types.html#loggeroptionstype"},{default:o(()=>[k]),_:1})]),C]),A])]),P,D,t("p",null,[e("Ƭ "),L,e(": "),S,e("<"),n(l,{to:"/api/modules/types.html#localetype"},{default:o(()=>[w]),_:1}),e(", "),n(l,{to:"/api/modules/types.html#dictionarytype"},{default:o(()=>[I]),_:1}),e(">")]),N,t("p",null,[e("Ƭ "),z,e(": "),R,e("<"),n(l,{to:"/api/modules/types.html#localetype"},{default:o(()=>[j]),_:1}),e(", "),n(l,{to:"/api/modules/types.html#compileddictionarytype"},{default:o(()=>[q]),_:1}),e(">")]),t("p",null,[e("A compiled version of a "),n(l,{to:"/api/modules/types.html#catalogtype"},{default:o(()=>[e("CatalogType")]),_:1}),e(".")]),G,V,t("p",null,[e("Ƭ "),K,e(": "),E,e("<"),n(l,{to:"/api/modules/types.html#keytype"},{default:o(()=>[F]),_:1}),e(", "),n(l,{to:"/api/modules/types.html#compiledvaluetype"},{default:o(()=>[H]),_:1}),e(">")]),t("p",null,[e("A compiled version of a "),n(l,{to:"/api/modules/types.html#dictionarytype"},{default:o(()=>[e("DictionaryType")]),_:1}),e(".")]),X,M,t("p",null,[e("Ƭ "),Y,e(": ("),B,e(": "),n(l,{to:"/api/modules/types.html#contextparamstype"},{default:o(()=>[U]),_:1}),e(", "),$,e(": "),n(l,{to:"/api/modules/types.html#contextglobalstype"},{default:o(()=>[Z]),_:1}),e(") => "),J,e(" | "),Q]),t("p",null,[e("A compiled version of a "),n(l,{to:"/api/modules/types.html#valuetype"},{default:o(()=>[e("ValueType")]),_:1}),e(".")]),W,tt,et,t("p",null,[e("Options for the "),n(l,{to:"/api/classes/index.Compiler.html"},{default:o(()=>[e("Compiler")]),_:1}),e(".")]),lt,t("table",null,[nt,t("tbody",null,[t("tr",null,[ot,t("td",st,[n(l,{to:"/api/interfaces/index.LoggerInterface.html"},{default:o(()=>[at]),_:1}),e(" | "),n(l,{to:"/api/modules/types.html#loggeroptionstype"},{default:o(()=>[it]),_:1})]),dt])])]),pt,t("table",null,[ct,t("tbody",null,[t("tr",null,[ut,t("td",rt,[n(l,{to:"/api/modules/types.html#contextglobalstype"},{default:o(()=>[ht]),_:1})]),yt]),t("tr",null,[_t,t("td",gt,[n(l,{to:"/api/modules/types.html#localetype"},{default:o(()=>[ft]),_:1})]),mt]),t("tr",null,[xt,t("td",bt,[n(l,{to:"/api/modules/types.html#contextparamstype"},{default:o(()=>[Tt]),_:1})]),Ot])])]),vt,kt,t("p",null,[e("Ƭ "),Ct,e(": "),At,e("<"),n(l,{to:"/api/modules/types.html#keytype"},{default:o(()=>[Pt]),_:1}),e(", "),n(l,{to:"/api/modules/types.html#valuetype"},{default:o(()=>[Dt]),_:1}),e(">")]),Lt,t("table",null,[St,t("tbody",null,[t("tr",null,[wt,t("td",It,[n(l,{to:"/api/interfaces/index.AnalyzerInterface.html"},{default:o(()=>[Nt]),_:1}),e(" | "),n(l,{to:"/api/modules/types.html#analyzeroptionstype"},{default:o(()=>[zt]),_:1})]),Rt]),t("tr",null,[jt,t("td",qt,[n(l,{to:"/api/interfaces/index.CompilerInterface.html"},{default:o(()=>[Gt]),_:1}),e(" | "),n(l,{to:"/api/modules/types.html#compileroptionstype"},{default:o(()=>[Vt]),_:1})]),Kt]),t("tr",null,[Et,t("td",Ft,[n(l,{to:"/api/interfaces/index.LoggerInterface.html"},{default:o(()=>[Ht]),_:1}),e(" | "),n(l,{to:"/api/modules/types.html#loggeroptionstype"},{default:o(()=>[Xt]),_:1})]),Mt]),t("tr",null,[Yt,t("td",Bt,[n(l,{to:"/api/modules/types.html#catalogtype"},{default:o(()=>[Ut]),_:1})]),$t])])]),Zt,Jt,t("p",null,[e("Ƭ "),Qt,e(": ("),Wt,e(": "),n(l,{to:"/api/modules/types.html#keytype"},{default:o(()=>[te]),_:1}),e(", "),ee,e(": "),n(l,{to:"/api/classes/index.AnalyzerToken.html"},{default:o(()=>[le]),_:1}),e(") => "),ne]),oe,t("table",null,[se,t("tbody",null,[t("tr",null,[ae,t("td",ie,[n(l,{to:"/api/modules/types.html#keytype"},{default:o(()=>[de]),_:1})])]),t("tr",null,[pe,t("td",ce,[n(l,{to:"/api/classes/index.AnalyzerToken.html"},{default:o(()=>[ue]),_:1})])])])]),re,t("p",null,[e("Options for "),n(l,{to:"/api/classes/index.Logger.html"},{default:o(()=>[e("Logger")]),_:1}),e(".")]),he,t("p",null,[e("Options for the "),n(l,{to:"/api/modules/types.html#dictionary"},{default:o(()=>[e("PluginOptionsType.dictionary")]),_:1}),e(".")]),ye,t("table",null,[_e,t("tbody",null,[t("tr",null,[ge,t("td",fe,[e("("),me,e(": "),xe,e(") => "),n(l,{to:"/api/modules/types.html#catalogtype"},{default:o(()=>[be]),_:1}),e(" | "),Te,e("<"),n(l,{to:"/api/modules/types.html#catalogtype"},{default:o(()=>[Oe]),_:1}),e("> | "),ve]),ke]),Ce])]),Ae,Pe,De,t("p",null,[e("Options for the "),n(l,{to:"/api/modules/types.html#input"},{default:o(()=>[e("PluginOptionsType.input")]),_:1}),e(".")]),Le,t("table",null,[Se,t("tbody",null,[t("tr",null,[we,t("td",Ie,[n(l,{to:"/api/modules/types.html#keyformattertype"},{default:o(()=>[Ne]),_:1})]),t("td",ze,[e("Specifies a function to be used to transform the translation keys depending on the source they were detected at. Defaults to "),Re,e(". "),n(l,{to:"/api/modules/types.html#keyformatter"},{default:o(()=>[e("AnalyzerOptionsType.keyFormatter")]),_:1})])]),je,qe])]),Ge,Ve,Ke,t("p",null,[e("Options for the "),n(l,{to:"/api/modules/plugin.html#viteplugin"},{default:o(()=>[e("VitePlugin")]),_:1}),e(".")]),Ee,t("table",null,[Fe,t("tbody",null,[t("tr",null,[He,t("td",Xe,[n(l,{to:"/api/modules/types.html#plugindictionarytype"},{default:o(()=>[Me]),_:1})]),Ye]),t("tr",null,[Be,t("td",Ue,[n(l,{to:"/api/modules/types.html#plugininputtype"},{default:o(()=>[$e]),_:1})]),Ze]),t("tr",null,[Je,t("td",Qe,[n(l,{to:"/api/modules/types.html#pluginoutputtype"},{default:o(()=>[We]),_:1})]),tl]),el,ll])]),nl,ol,sl,t("p",null,[e("Options for "),n(l,{to:"/api/modules/types.html#missing"},{default:o(()=>[e("PluginOutputType.missing")]),_:1}),e(" and "),n(l,{to:"/api/modules/types.html#unused"},{default:o(()=>[e("PluginOutputType.unused")]),_:1}),e(".")]),al,t("table",null,[il,t("tbody",null,[dl,t("tr",null,[pl,t("td",cl,[e("("),ul,e(": "),rl,e(", "),hl,e(": "),n(l,{to:"/api/classes/index.Generator.html"},{default:o(()=>[yl]),_:1}),e(") => "),_l,e("<"),gl,e("> | "),fl,e(" | "),ml]),xl]),bl])]),Tl,Ol,vl,t("p",null,[e("Options for the "),n(l,{to:"/api/modules/types.html#input"},{default:o(()=>[e("PluginOptionsType.input")]),_:1}),e(".")]),kl,t("table",null,[Cl,t("tbody",null,[t("tr",null,[Al,t("td",Pl,[e("("),Dl,e(": "),Ll,e(", "),Sl,e(": "),n(l,{to:"/api/classes/index.Generator.html"},{default:o(()=>[wl]),_:1}),e(") => "),Il,e("<"),Nl,e("> | "),zl,e(" | "),Rl]),jl]),ql,Gl])]),Vl,Kl,El,t("p",null,[e("Options for "),n(l,{to:"/api/modules/types.html#output"},{default:o(()=>[e("PluginOptionsType.output")]),_:1}),e(".")]),Fl,t("table",null,[Hl,t("tbody",null,[t("tr",null,[Xl,t("td",Ml,[n(l,{to:"/api/modules/types.html#pluginoutputcompilationtype"},{default:o(()=>[Yl]),_:1}),e(" | "),Bl]),Ul]),t("tr",null,[$l,t("td",Zl,[n(l,{to:"/api/modules/types.html#pluginoutputanalysistype"},{default:o(()=>[Jl]),_:1}),e(" | "),Ql]),Wl]),t("tr",null,[tn,t("td",en,[n(l,{to:"/api/modules/types.html#pluginoutputanalysistype"},{default:o(()=>[ln]),_:1}),e(" | "),nn]),on])])]),sn,an,dn,t("p",null,[e("Options for the "),n(l,{to:"/api/classes/index.Translator.html"},{default:o(()=>[e("Translator")]),_:1}),e(".")]),pn,t("table",null,[cn,t("tbody",null,[t("tr",null,[un,t("td",rn,[n(l,{to:"/api/modules/types.html#localetype"},{default:o(()=>[hn]),_:1})]),yn]),t("tr",null,[_n,t("td",gn,[n(l,{to:"/api/interfaces/index.LoggerInterface.html"},{default:o(()=>[fn]),_:1})]),mn]),t("tr",null,[xn,t("td",bn,[n(l,{to:"/api/modules/types.html#compiledcatalogtype"},{default:o(()=>[Tn]),_:1})]),On])])]),vn])}const Ln=a(c,[["render",kn],["__file","types.html.vue"]]);export{Ln as default};
