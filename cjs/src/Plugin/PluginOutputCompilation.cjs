"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const write_file_atomic_1=require("write-file-atomic"),node_path_1=require("node:path"),PathError_1=require("../Util/PathError.cjs");class PluginOutputCompilation{constructor(t){if(!t||"object"!=typeof t)throw new PathError_1.default("Expected {{ path }} to be an object.");if(this.path=PathError_1.default.wrap("path",()=>{if("string"==typeof t.path&&0<t.path.length)return t.path;throw new PathError_1.default("Expected {{ path }} to be a non-empty string.")}),this.includeMeta=PathError_1.default.wrap("includeMeta",()=>{if(void 0===t.includeMeta)return!1;if("boolean"==typeof t.includeMeta)return t.includeMeta;throw new PathError_1.default("Expected {{ path }} to be a boolean.")}),void 0===t.handler)switch((0,node_path_1.extname)(t.path)){case".ts":case".js":case".mjs":t.handler="esm";break;case".cjs":t.handler="cjs"}this.handler=PathError_1.default.wrap("handler",()=>{if("esm"===t.handler)return(t,e)=>(0,write_file_atomic_1.default)(t,e.getCompiledTranslationsDumpAsESMExport(this.includeMeta));if("cjs"===t.handler)return(t,e)=>(0,write_file_atomic_1.default)(t,e.getCompiledTranslationsDumpAsCJSExport(this.includeMeta));if("function"==typeof t.handler)return t.handler;throw new PathError_1.default('Expected {{ path }} to be "esm", "cjs" or a function.')})}}exports.default=PluginOutputCompilation;