"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const node_path_1=require("node:path"),promises_1=require("node:fs/promises"),PathError_1=require("../Util/PathError.cjs");class PluginOutputCompilation{constructor(e){if(!e||"object"!=typeof e)throw new PathError_1.default("Expected {{ path }} to be an object.");if(this.path=PathError_1.default.wrap("path",()=>{if("string"==typeof e.path&&0<e.path.length)return e.path;throw new PathError_1.default("Expected {{ path }} to be a non-empty string.")}),this.includeMeta=PathError_1.default.wrap("includeMeta",()=>{if(void 0===e.includeMeta)return!1;if("boolean"==typeof e.includeMeta)return e.includeMeta;throw new PathError_1.default("Expected {{ path }} to be a boolean.")}),void 0===e.handler)switch((0,node_path_1.extname)(e.path)){case".ts":case".js":case".mjs":e.handler="esm";break;case".cjs":e.handler="cjs"}this.handler=PathError_1.default.wrap("handler",()=>{if("esm"===e.handler)return(e,t)=>(0,promises_1.writeFile)(e,t.getCompiledTranslationsDumpAsESMExport(this.includeMeta));if("cjs"===e.handler)return(e,t)=>(0,promises_1.writeFile)(e,t.getCompiledTranslationsDumpAsCJSExport(this.includeMeta));if("function"==typeof e.handler)return e.handler;throw new PathError_1.default('Expected {{ path }} to be "esm", "cjs" or a function.')})}}exports.default=PluginOutputCompilation;