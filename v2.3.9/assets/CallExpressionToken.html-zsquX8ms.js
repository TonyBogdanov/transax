import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as c,c as r,a as e,d as o,w as s,b as t,e as n}from"./app-t0fXQE-E.js";const d={},h=n('<h1 id="class-callexpressiontoken" tabindex="-1"><a class="header-anchor" href="#class-callexpressiontoken"><span>Class: CallExpressionToken</span></a></h1><p>Represents a call expression.</p><p>It must be represented by an identifier (local or global) optionally followed by one or more of the following:</p><ul><li>Object access: <code>.</code> followed by an identifier.</li><li>Array access: <code>[</code> followed by an expression followed by <code>]</code>.</li><li>Invocation: <code>(</code> followed by an optional comma-separated list of expressions followed by <code>)</code>.</li></ul><p>Examples: <code>local</code><code>@global</code><code>local.property</code><code>@global.property</code><code>local[0]</code><code>@global[0]</code><code>local[0].property</code><code>@global[0].property</code><code>local[0].property()</code><code>@global[0].property()</code><code>local[0].property(1, 2, 3)</code><code>@global[0].property(1, 2, 3)</code></p><h2 id="hierarchy" tabindex="-1"><a class="header-anchor" href="#hierarchy"><span>Hierarchy</span></a></h2>',6),p=e("code",null,"CompilerToken",-1),u=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"CallExpressionToken")])],-1),_=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents"},[e("span",null,"Table of contents")])],-1),f=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors"},[e("span",null,"Constructors")])],-1),m=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties"},[e("span",null,"Properties")])],-1),x=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods"},[e("span",null,"Methods")])],-1),g=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1"},[e("span",null,"Constructors")])],-1),b=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor"},[e("span",null,"constructor")])],-1),y=e("strong",null,"new CallExpressionToken",-1),C=e("code",null,"global",-1),T=e("code",null,"name",-1),k=e("code",null,"tail",-1),E=e("code",null,"text",-1),w=e("code",null,"location",-1),v=e("code",null,"CallExpressionToken",-1),A=e("p",null,"Creates a new instance.",-1),I=e("h4",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters"},[e("span",null,"Parameters")])],-1),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),O=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"global")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"Specifies whether the identifier is a global variable or a parameter.")],-1),N=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"name")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The name of the identifier.")],-1),j=e("td",{style:{"text-align":"left"}},[e("code",null,"tail")],-1),P={style:{"text-align":"left"}},S=e("code",null,"CallExpressionObjectAccess",-1),V=e("code",null,"CallExpressionArrayAccess",-1),W=e("code",null,"CallExpressionInvocation",-1),B=e("td",{style:{"text-align":"left"}},"An array of object accesses, array accesses or invocations.",-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"text")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The full text (content) of the expression.")],-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"location")]),e("td",{style:{"text-align":"left"}},[e("code",null,"LocationRange")]),e("td",{style:{"text-align":"left"}},"The location of the invocation within the source code.")],-1),M=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1),F=e("code",null,"CallExpressionToken",-1),H=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides"},[e("span",null,"Overrides")])],-1),q=n('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1"><span>Properties</span></a></h2><h3 id="column" tabindex="-1"><a class="header-anchor" href="#column"><span>column</span></a></h3><p>• <strong>column</strong>: <code>number</code></p><p>The column number of the expression within the translation message.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from"><span>Inherited from</span></a></h4>',5),z=n('<hr><h3 id="global" tabindex="-1"><a class="header-anchor" href="#global"><span>global</span></a></h3><p>• <code>Readonly</code> <strong>global</strong>: <code>boolean</code></p><hr><h3 id="line" tabindex="-1"><a class="header-anchor" href="#line"><span>line</span></a></h3><p>• <strong>line</strong>: <code>number</code></p><p>The line number of the expression within the translation message.</p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1"><span>Inherited from</span></a></h4>',8),G=n('<hr><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3><p>• <code>Readonly</code> <strong>name</strong>: <code>string</code></p><hr><h3 id="tail" tabindex="-1"><a class="header-anchor" href="#tail"><span>tail</span></a></h3>',5),J=e("code",null,"Readonly",-1),K=e("strong",null,"tail",-1),Q=e("code",null,"CallExpressionObjectAccess",-1),U=e("code",null,"CallExpressionArrayAccess",-1),X=e("code",null,"CallExpressionInvocation",-1),Y=e("hr",null,null,-1),Z=e("h3",{id:"text",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#text"},[e("span",null,"text")])],-1),$=e("p",null,[t("• "),e("strong",null,"text"),t(": "),e("code",null,"string")],-1),ee=e("p",null,"The full text (content) of the expression.",-1),te=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2"},[e("span",null,"Inherited from")])],-1),le=n('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1"><span>Methods</span></a></h2><h3 id="compile" tabindex="-1"><a class="header-anchor" href="#compile"><span>compile</span></a></h3><p>▸ <strong>compile</strong>(<code>context</code>): <code>string</code></p><p>Compiles the expression into an executable ECMAScript6 string.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4>',5),oe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),se=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),ne={style:{"text-align":"left"}},ae=e("code",null,"CompilerContext",-1),ie=e("td",{style:{"text-align":"left"}},"The context to use for compiling the expression.",-1),ce=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1"},[e("span",null,"Returns")])],-1),re=e("p",null,[e("code",null,"string")],-1),de=e("h4",{id:"overrides-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides-1"},[e("span",null,"Overrides")])],-1),he=n('<hr><h3 id="compilewrap" tabindex="-1"><a class="header-anchor" href="#compilewrap"><span>compileWrap</span></a></h3><p>▸ <strong>compileWrap</strong>(<code>context</code>, <code>instanceOfs</code>): <code>string</code></p><p>Same as <code>compile()</code> except that it wraps the compiled expression in parentheses if the current token is an instance of the specified types.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4>',5),pe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),ue=e("td",{style:{"text-align":"left"}},[e("code",null,"context")],-1),_e={style:{"text-align":"left"}},fe=e("code",null,"CompilerContext",-1),me=e("td",{style:{"text-align":"left"}},"The context to use for compiling the expression.",-1),xe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"instanceOfs")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Function"),t("[]")]),e("td",{style:{"text-align":"left"}},"The types to check for.")],-1),ge=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2"},[e("span",null,"Returns")])],-1),be=e("p",null,[e("code",null,"string")],-1),ye=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3"},[e("span",null,"Inherited from")])],-1);function Ce(Te,ke){const l=i("RouterLink");return c(),r("div",null,[h,e("ul",null,[e("li",null,[e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[p]),_:1})]),u])]),_,f,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#constructor"},{default:s(()=>[t("constructor")]),_:1})])]),m,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#column"},{default:s(()=>[t("column")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#global"},{default:s(()=>[t("global")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#line"},{default:s(()=>[t("line")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#name"},{default:s(()=>[t("name")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#tail"},{default:s(()=>[t("tail")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#text"},{default:s(()=>[t("text")]),_:1})])]),x,e("ul",null,[e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#compile"},{default:s(()=>[t("compile")]),_:1})]),e("li",null,[o(l,{to:"/api/classes/CallExpressionToken.html#compilewrap"},{default:s(()=>[t("compileWrap")]),_:1})])]),g,b,e("p",null,[t("• "),y,t("("),C,t(", "),T,t(", "),k,t(", "),E,t(", "),w,t("): "),o(l,{to:"/api/classes/CallExpressionToken.html"},{default:s(()=>[v]),_:1})]),A,I,e("table",null,[R,e("tbody",null,[O,N,e("tr",null,[j,e("td",P,[t("("),o(l,{to:"/api/classes/CallExpressionObjectAccess.html"},{default:s(()=>[S]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionArrayAccess.html"},{default:s(()=>[V]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionInvocation.html"},{default:s(()=>[W]),_:1}),t(")[]")]),B]),D,L])]),M,e("p",null,[o(l,{to:"/api/classes/CallExpressionToken.html"},{default:s(()=>[F]),_:1})]),H,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#constructor"},{default:s(()=>[t("constructor")]),_:1})]),q,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#column"},{default:s(()=>[t("column")]),_:1})]),z,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#line"},{default:s(()=>[t("line")]),_:1})]),G,e("p",null,[t("• "),J,t(),K,t(": ("),o(l,{to:"/api/classes/CallExpressionObjectAccess.html"},{default:s(()=>[Q]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionArrayAccess.html"},{default:s(()=>[U]),_:1}),t(" | "),o(l,{to:"/api/classes/CallExpressionInvocation.html"},{default:s(()=>[X]),_:1}),t(")[]")]),Y,Z,$,ee,te,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#text"},{default:s(()=>[t("text")]),_:1})]),le,e("table",null,[oe,e("tbody",null,[e("tr",null,[se,e("td",ne,[o(l,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[ae]),_:1})]),ie])])]),ce,re,de,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#compile"},{default:s(()=>[t("compile")]),_:1})]),he,e("table",null,[pe,e("tbody",null,[e("tr",null,[ue,e("td",_e,[o(l,{to:"/api/classes/CompilerContext.html"},{default:s(()=>[fe]),_:1})]),me]),xe])]),ge,be,ye,e("p",null,[o(l,{to:"/api/classes/CompilerToken.html"},{default:s(()=>[t("CompilerToken")]),_:1}),t("."),o(l,{to:"/api/classes/CompilerToken.html#compilewrap"},{default:s(()=>[t("compileWrap")]),_:1})])])}const ve=a(d,[["render",Ce],["__file","CallExpressionToken.html.vue"]]);export{ve as default};
