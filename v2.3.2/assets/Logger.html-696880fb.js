import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as d,c as i,a as e,b as t,d as o,w as r,e as s}from"./app-b6726c48.js";const c={},h=e("h1",{id:"class-logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-logger","aria-hidden":"true"},"#"),t(" Class: Logger")],-1),g=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements","aria-hidden":"true"},"#"),t(" Implements")],-1),f=e("code",null,"LoggerInterface",-1),u=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),p=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),m=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),_=s('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new Logger</strong>(<code>options?</code>)</p><p>Creates a new instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',5),b=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),x=e("td",{style:{"text-align":"left"}},[e("code",null,"options")],-1),y={style:{"text-align":"left"}},L=e("code",null,"LoggerOptions",-1),v=e("td",{style:{"text-align":"left"}},"Customizes the logger.",-1),I=s('<h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log" aria-hidden="true">#</a> log</h3><p>▸ <strong>log</strong>(<code>...args</code>): <code>void</code></p><p>Logs a message unless <code>isSilent</code> is <code>true</code>.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">A list of arguments to log. These can be of any type that the underlying implementation (e.g. <code>console.log</code> ) can handle.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of" aria-hidden="true">#</a> Implementation of</h4>',9),C=s('<hr><h3 id="verbose" tabindex="-1"><a class="header-anchor" href="#verbose" aria-hidden="true">#</a> verbose</h3><p>▸ <strong>verbose</strong>(<code>...args</code>): <code>void</code></p><p>Logs a verbose message unless <code>isSilent</code> is <code>true</code> or <code>isVerbose</code> is <code>false</code>.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any</code>[]</td><td style="text-align:left;">A list of arguments to log. These can be of any type that the underlying implementation (e.g. <code>console.log</code> ) can handle.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="implementation-of-1" tabindex="-1"><a class="header-anchor" href="#implementation-of-1" aria-hidden="true">#</a> Implementation of</h4>',9);function N(T,V){const a=l("RouterLink");return d(),i("div",null,[h,e("p",null,[t("Default implementation of the "),o(a,{to:"/api/interfaces/LoggerInterface.html"},{default:r(()=>[t("LoggerInterface")]),_:1}),t(". Logs all messages to the console.")]),g,e("ul",null,[e("li",null,[o(a,{to:"/api/interfaces/LoggerInterface.html"},{default:r(()=>[f]),_:1})])]),u,p,e("ul",null,[e("li",null,[o(a,{to:"/api/classes/Logger.html#constructor"},{default:r(()=>[t("constructor")]),_:1})])]),m,e("ul",null,[e("li",null,[o(a,{to:"/api/classes/Logger.html#log"},{default:r(()=>[t("log")]),_:1})]),e("li",null,[o(a,{to:"/api/classes/Logger.html#verbose"},{default:r(()=>[t("verbose")]),_:1})])]),_,e("table",null,[b,e("tbody",null,[e("tr",null,[x,e("td",y,[o(a,{to:"/api/#loggeroptions"},{default:r(()=>[L]),_:1})]),v])])]),I,e("p",null,[o(a,{to:"/api/interfaces/LoggerInterface.html"},{default:r(()=>[t("LoggerInterface")]),_:1}),t("."),o(a,{to:"/api/interfaces/LoggerInterface.html#log"},{default:r(()=>[t("log")]),_:1})]),C,e("p",null,[o(a,{to:"/api/interfaces/LoggerInterface.html"},{default:r(()=>[t("LoggerInterface")]),_:1}),t("."),o(a,{to:"/api/interfaces/LoggerInterface.html#verbose"},{default:r(()=>[t("verbose")]),_:1})])])}const D=n(c,[["render",N],["__file","Logger.html.vue"]]);export{D as default};
